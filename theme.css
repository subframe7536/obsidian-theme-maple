@charset "UTF-8";
/* #region [style settings] */
/* @settings

name: 🛠️ Maple Color And Animation
id: maple-basic
settings:
    -
        id: setting-animation-time
        title: Animation Duration (ms)
        title.zh: 动画持续时间（毫秒）
        type: variable-number-slider
        format: ms
        default: 200
        min: 0
        max: 500
        step: 50
    -
        id: color-use-custom
        title: Use Custom Accent Color
        description: Use style setting accent color instead of Obsidian's accent color
        title.zh: 自定义 accent color
        description.zh: 使用 style setting 的颜色，而不是 Obsidian 自带的颜色
        type: class-toggle
    -
        id: color-accent-light
        title: Light Mode
        title.zh: 浅色模式
        type: heading
        collapsed: true
        level: 2
    -
        id: setting-accent-h-light
        title: Base Color
        title.zh: 基础颜色
        type: variable-number-slider
        default: 35
        min: 0
        max: 360
        step: 5
    -
        id: color-active-light
        title: Highlight Color
        title.zh: 高亮颜色
        type: class-select
        allowEmpty: false
        default: color-active-default-light
        options:
            -   label: accent color
                value: color-active-default-light
            -   label: accent color alt
                value: color-active-alt-light
            -   label: custom
                value: color-active-custom-light
    -
        id: setting-color-active-custom-light
        title: Custom Highlight Color
        title.zh: 自定义高亮颜色
        type: variable-color
        format: rgb
        default: '#'
        opacity: false
    -
        id: color-more-light
        title: More Configuration
        title.zh: 更多设置
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-accent-s-light
        title: Accent Color Saturation
        description: S(aturation) of HSL
        title.zh: 高亮颜色饱和度
        description.zh: HSL 中的 S
        type: variable-number-slider
        default: 32
        format: '%'
        min: 0
        max: 100
        step: 1
    -
        id: setting-accent-l-light
        title: Accent Color Lightness
        description: L(ight) of HSL
        title.zh: 高亮颜色亮度
        description.zh: HSL 中的 L
        type: variable-number-slider
        default: 58
        format: '%'
        min: 0
        max: 100
        step: 1
    -
        id: color-accent-dark
        title: Dark Mode
        title.zh: 暗色模式
        type: heading
        collapsed: true
        level: 2
    -
        id: setting-accent-h-dark
        title: Base Color
        title.zh: 基础颜色
        type: variable-number-slider
        default: 207
        min: 0
        max: 360
        step: 5
    -
        id: color-active-dark
        title: Highlight Color
        title.zh: 高亮颜色
        type: class-select
        allowEmpty: false
        default: color-active-default-dark
        options:
            -   label: accent color
                value: color-active-default-dark
            -   label: accent color alt
                value: color-active-alt-dark
            -   label: custom
                value: color-active-custom-dark
    -
        id: setting-color-active-custom-dark
        title: Custom Highlight Color
        title.zh: 自定义高亮颜色
        type: variable-color
        default: '#'
        format: rgb
        opacity: false
    -
        id: color-more-dark
        title: More Configuration
        title.zh: 更多设置
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-accent-s-dark
        title: Accent Color Saturation
        description: S(aturation) of hsl
        title.zh: 高亮颜色饱和度
        description.zh: HSL 中的 S
        type: variable-number-slider
        default: 32
        format: '%'
        min: 0
        max: 100
        step: 1
    -
        id: setting-accent-l-dark
        title: Accent Color Lightness
        description: L(ight) of hsl
        title.zh: 高亮颜色亮度
        description.zh: HSL 中的 L
        type: variable-number-slider
        default: 58
        format: '%'
        min: 0
        max: 100
        step: 1
    -
*/
/* @settings

name: 🌏 Maple Workspace
id: maple-workspace
settings:
    -
        id: titlebar
        title: Obsidian Titlebar
        title.zh: Obsidian 标题栏
        type: heading
        collapsed: true
        level: 2
    -
        id: titlebar-button-style
        title: Styled Window Buttons
        description: For Windows and Linux
        title.zh: 窗体按钮美化
        description.zh: 在 Windows 和 Linux 中生效
        type: class-toggle
        default: true
    -
        id: titlebar-colorful
        title: Colorful Titlebar
        description: Reference from https://github.com/kepano/obsidian-minimal
        title.zh: 多彩 Obsidian 标题栏
        description.zh: 参考 https://github.com/kepano/obsidian-minimal
        type: class-toggle
    -
        id: bg
        title: Wave Background
        description: Will also add in canvas card when card width > 768px
        title.zh: 波浪背景图
        description.zh: 白板的卡片宽度 >768px 时编辑卡片也会添加
        type: heading
        collapsed: true
        level: 2
    -
        id: bg-enable
        title: Background Wave Image
        description: Static style reference from https://github.com/hydescarf/Obsidian-Theme-Mado-Miniflow, ❗live style will increase CPU/GPU use
        title.zh: 背景波浪图
        description.zh: 静态图（static）参考 https://github.com/hydescarf/Obsidian-Theme-Mado-Miniflow，❗动态图（live）将提高 CPU/GPU 占用率
        type: class-select
        allowEmpty: false
        default: bg-static
        options:
            -   label: disable
                value: bg-default
            -   label: static
                value: bg-static
            -   label: live
                value: bg-live
    -
        id: setting-bg-color
        title: Wave Color
        title.zh: 波浪颜色
        type: variable-themed-color
        format: rgb
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: explorer
        title: File Explorer
        title.zh: 文件管理器
        type: heading
        collapsed: true
        level: 2
    -
        id: explorer-nav-decoration
        title: Add Tail Decorator On Active File
        description: Reference from https://github.com/Akifyss/obsidian-border
        title.zh: 在当前文件末尾添加装饰
        description.zh: 参考 https://github.com/Akifyss/obsidian-border
        type: class-toggle
    -
        id: explorer-title-wrap
        title: Auto Wrap For Long File Name
        title.zh: 为长文件名自动换行
        type: class-toggle
    -
        id: explorer-item-height
        title: Item Line Height
        title.zh: 行高
        type: variable-number-slider
        default: 1.6
        min: 1.2
        max: 1.8
        step: 0.1
    -
        id: explorer-icon
        title: Enable Prefix Icon
        description: If the tree indent is weird, please collpase all the directory and restart Obsidian
        title.zh: 开启前置图标
        description.zh: 如果缩进出现问题，请折叠全部文件夹并重启 Obsidian
        type: class-toggle
        default: true
    -
        id: setting-color-dirs
        title: Directory Color
        title.zh: 文件夹颜色
        type: variable-themed-color
        format: rgb-values
        opacity: false
        default-light: rgb(245, 180, 0)
        default-dark: rgb(245, 180, 0)
    -
        id: outline-panel
        title: Outline Panel
        title.zh: 文档大纲
        type: heading
        collapsed: true
        level: 2
    -
        id: outline-enable
        title: Logseq Bullet Thread Style Outline
        description: Please reload Obsidian after enable it, reference from https://github.com/pengx17/logseq-dev-theme/blob/main/bullet_threading.css
        title.zh: logseq bullet thread 样式的文档视图
        description.zh: 启用后请重启应用 参考 https://github.com/pengx17/logseq-dev-theme/blob/main/bullet_threading.css
        type: class-toggle
        default: true
    -
        id: status-bar
        title: Status Bar
        title.zh: 状态栏
        type: heading
        collapsed: true
        level: 2
    -
        id: status-bar-enable
        title: Custom Status Bar Style
        title.zh: 自定义状态栏样式
        type: class-toggle
        default: true
    -
        id: status-bar-style-float
        title: Round Style Status Bar
        title.zh: 圆角风格的状态栏
        type: class-toggle
        default: true
    -
        id: status-bar-style
        title: Status Bar Animation
        description: ❗last style only valid when turn on “round status bar”
        title.zh: 状态栏样式
        description.zh: ❗最后一种样式只在开启“圆角风格的状态栏”才生效
        type: class-select
        allowEmpty: false
        default: status-bar-default
        options:
            -   label: default
                value: status-bar-default
            -   label: show on hover
                value: status-bar-hidden
            -   label: scroll out on hover
                value: status-bar-scroll
    -
        id: status-bar-style-center
        title: Center Status Bar
        title.zh: 状态栏居中
        type: class-toggle
    -
        id: search-internal
        title: Document Search / Replace Panel
        title.zh: 文档内搜索框
        type: heading
        collapsed: true
        level: 2
    -
        id: search-internal-enable
        title: Minimal Document Search / Replace Panel (Like VSCode)
        title.zh: 精简的文档内搜索框（和 VSCode 类似）
        type: class-toggle
        default: true
    -
        id: tab
        title: Tab
        title.zh: 标签页
        type: heading
        collapsed: true
        level: 2
    -
        id: tab-float
        title: Float Style Tab (Like Firefox / Microsoft Edge)
        title.zh: 浮动的标签页（和 Firefox / Microsoft Edge 类似）
        type: class-toggle
    -
        id: tab-slide-up
        title: Slide Up Animation On Tab Switch
        description: ❗will prevent outline panel update instantly on switch articles
        title.zh: 标签页切换动画
        description.zh: ❗会导致切换文章时无法立即更新大纲面板
        type: class-toggle
        default: true
    -
        id: labeled-nav
        title: Text Labels For Primary Navigation
        description: Reference from https://github.com/kepano/obsidian-minimal
        title.zh: 主导航栏添加文字
        description.zh: 参考自 https://github.com/kepano/obsidian-minimal
        type: class-toggle
    -
        id: tab-show-close
        title: When To Show Close Button On Tabs
        title.zh: 何时显示标签页的关闭按钮
        type: class-select
        allowEmpty: false
        default: tab-show-close-default
        options:
            -   label: default
                value: tab-show-close-default
            -   label: on hover all tabs
                value: tab-show-close-all
            -   label: on hover except active tab
                value: tab-show-close-part
    -
        id: tab-title
        title: Tab Title Bar
        title.zh: 标签页标题栏
        type: heading
        level: 3
    -
        id: tab-title-bar-round
        title: Enable Tab Title Bar Round Style
        title.zh: 开启标签页标题栏圆角样式
        type: class-toggle
    -
        id: tab-title-bar-shadow
        title: Add Shadow For Active Tab Title Bar
        title.zh: 为当前标签页标题栏添加阴影
        type: class-toggle
    -
        id: tab-title-bar-text
        title: File Name On Tab Title Bar
        title.zh: 标签页标题栏的文件名
        type: class-select
        allowEmpty: false
        default: tab-title-bar-text-default
        options:
            -   label: default
                value: tab-title-bar-text-default
            -   label: small size
                value: tab-title-bar-text-small
            -   label: show on hover
                value: tab-title-bar-text-hidden
    -
        id: message
        title: Tooltip & Notice
        title.zh: 气泡提示框 & 通知
        type: heading
        collapsed: true
        level: 2
    -
        id: message-tooltip-hide-arrow
        title: Hide Tooltip Arrow
        title.zh: 隐藏气泡提示框箭头
        type: class-toggle
    -
        id: message-tooltip-hide
        title: Always Hide Tooltip
        title.zh: 永久隐藏气泡提示框
        type: class-toggle
    -
        id: message-modify
        title: Change Tooltip & Notice Color
        title.zh: 修改气泡提示框和消息的颜色
        type: class-toggle
        default: true
    -
        id: setting-message-bg
        title: Background Color
        title.zh: 背景色
        type: variable-themed-color
        format: hsl-values
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-message-fg
        title: Foreground Color
        title.zh: 文字色
        type: variable-themed-color
        format: rgb-values
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: modal
        title: Modal & Setting Panel
        title.zh: 弹出框 & 设置面板
        type: heading
        collapsed: true
        level: 2
    -
        id: modal-blur
        title: Enable Modal Background Blur
        description: If there is a delay in scrolling, try turning this option off
        title.zh: 开启弹出框背景模糊
        description.zh: 如果滚动时有卡顿，尝试关闭该选项
        type: class-toggle
        default: true
    -
        id: modal-header
        title: Add Header For Setting Panel
        description: Better with plugin “setting search”, invalid in mobile
        title.zh: 为设置面板添加顶部框
        description.zh: 配合 setting search 插件使用更佳，移动端无效
        type: class-toggle
    -
        id: setting-modal-header-title
        title: Set Modal Header Title
        title.zh: 设置面板标题
        type: variable-text
        default: "'maple 0.8.34'"
    -
        id: setting-group-title
        title: Add Style For Left Navigation Group Title
        title.zh: 为左侧选项组标题添加样式
        type: class-toggle
        default: true
    -
        id: setting-nav-decoration
        title: Styled Active Nav Item
        title.zh: 左侧当前设置项美化
        type: class-toggle
        default: true
    -
        id: modal-slider
        title: Styled Slider Thumb
        title.zh: 滑动条按钮美化
        type: class-toggle
        default: true
    -
        id: modal-toggle
        title: Styled Toggle Button
        title.zh: 开关按钮美化
        type: class-select
        allowEmpty: false
        default: modal-toggle-default
        options:
            -   label: default
                value: modal-toggle-default
            -   label: thin
                value: modal-toggle-thin
            -   label: round
                value: modal-toggle-round
    -
        id: modal-animation
        title: Modal Bounce Animation
        desciption: reference from https://github.com/hydescarf/Obsidian-Theme-Mado-Miniflow
        title.zh: 弹出框抖动动画
        desciption.zh: 参考 https://github.com/hydescarf/Obsidian-Theme-Mado-Miniflow
        type: class-toggle
        default: true
    -
        id: menu-blur
        title: Menu Blur
        title.zh: 菜单模糊
        type: heading
        collapsed: true
        level: 2
    -
        id: menu-normal
        title: Normal Menu
        title.zh: 普通菜单
        type: class-toggle
        default: true
    -
        id: menu-suggestion
        title: Suggestion Menu
        title.zh: 提示菜单
        type: class-toggle
        default: true
    -
        id: menu-graph
        title: Graph Menu
        title.zh: 图谱菜单
        type: class-toggle
        default: true
    -
        id: scrollbar
        title: Scrollbar
        title.zh: 滚动条
        type: heading
        collapsed: true
        level: 2
    -
        id: scrollbar-hide
        title: Always Hide Scrollbar
        title.zh: 不显示滚动条
        type: class-toggle
    -
        id: scrollbar-hover
        title: Scrollbar Hover Action
        title.zh: 鼠标经过时滚动条变化
        type: class-select
        allowEmpty: false
        default: scrollbar-hover-default
        options:
            -   label: default
                value: scrollbar-hover-default
            -   label: accent
                value: scrollbar-hover-accent
            -   label: expand
                value: scrollbar-hover-expand
    -
        id: scrollbar-movein-animation-enable
        title: Enable Scrollbar Animation
        description: When disabled, always show scrollbar; when enabled, hide scrollbar when the mouse move outside the container
        title.zh: 启用滚动条动画
        description.zh: 关闭时，一直显示滚动条；开启后，鼠标在容器外时隐藏滚动条
        type: class-toggle
        default: true
    -
        id: graph
        title: Graph
        title.zh: 关系图谱
        type: heading
        collapsed: true
        level: 2
    -
        id: setting-graph-node
        title: Node Color
        title.zh: 普通节点颜色
        type: variable-themed-color
        format: rgb-values
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-graph-node-unresolved
        title: Unresolved Node Color
        title.zh: 未连接节点颜色
        type: variable-themed-color
        format: rgb-values
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-graph-node-focus
        title: Focused Node Color
        title.zh: 聚焦节点颜色
        type: variable-themed-color
        format: rgb-values
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: export-pdf
        title: PDF Export
        title.zh: PDF 导出
        type: heading
        collapsed: true
        level: 2
    -
        id: export-pdf-transparent
        title: Transparent Page Background Color
        title.zh: 透明页面背景色
        type: class-toggle
*/
/* @settings

name: ✏️ Maple Editor
id: maple-editor
settings:
    -
        id: bg
        title: Background
        title.zh: 背景
        type: heading
        collapsed: true
        level: 2
    -
        id: setting-editor-bg
        title: Editor Background Color
        title.zh: 编辑器背景色
        type: variable-themed-color
        format: hsl-values
        default-light: '#'
        default-dark: '#'
    -
        id: setting-md-container-bg
        title: Editor Container Background Color
        description: Quote, code block, table and so on
        title.zh: 编辑器容器背景色
        description.zh: 引用、代码块、表格等
        type: variable-themed-color
        format: hsl-values
        default-light: '#'
        default-dark: '#'
    -
        id: text-line-font
        title: Text & Font & Line
        title.zh: 文字 & 字体 & 行
        type: heading
        collapsed: true
        level: 2
    -
        id: font-maple
        title: Use "Maple Mono" As Monospace Font
        description: https://github.com/subframe7536/Maple-font
        title.zh: 使用 Maple Mono 作为等宽字体
        description.zh: https://github.com/subframe7536/Maple-font
        type: class-toggle
        default: true
    -
        id: setting-code-ligature
        title: OpenType Feature Config For Monospace Font
        title.zh: 等宽字体的 OpenType 特性配置
        type: variable-text
        default: '"calt"'
    -
        id: font-fix-latex
        title: Fix Latex Italic Absent
        description: Latex in my vault often wrong rendered, so i make this setting. If wrong rendered, just toggle it
        title.zh: 修复 latex 斜体问题
        description.zh: 在我的仓库里经常渲染失败，只能自己打包一份字体进主题了。只要字体不正常，开关一次即可
        type: class-toggle
    -
        id: font-latex-text
        title: Use "Text Font" In Non-formula Parts Of Latex
        description: ❗only tested in CJK font, maybe not reconcile with latin characters
        title.zh: 在 latex 非公式部分使用正文字体
        description.zh: 默认的字体比较丑
        type: class-toggle
    -
        id: setting-editor-p-spacing
        title: Editor Paragraph Spacing (px)
        title.zh: 编辑器段落间隔（px）
        type: variable-number-slider
        default: 4
        format: 'px'
        min: 0
        max: 20
        step: 1
    -
        id: setting-editor-p-indent
        title: Editor Paragraph Indent
        description: If 'p-indent' exist in properties.cssclasses, all paragraph will add indent(n times of font size)
        title.zh: 编辑器段落缩进
        description.zh: 在文档属性的cssclasses中存在 'p-indent' 类时，会为段落添加缩进（字体大小的倍数）
        type: variable-number-slider
        default: 2
        min: 0
        max: 4
        step: 0.2
    -
        id: setting-line-height
        title: Editor Line Height
        description: Multiple of the text size
        title.zh: 编辑器行高
        description.zh: 文字大小的倍数
        type: variable-number-slider
        default: 1.8
        min: 1.2
        max: 2.4
        step: 0.1
    -
        id: setting-file-line-width
        title: Editor Line Width
        description: Dynamic width — clamp(MinWidth, WidthPercent, MaxWidth)
        title.zh: 编辑器行宽
        description.zh: 动态宽度 — clamp(最小值, 宽度百分比, 最大值)
        type: variable-text
        default: clamp(600px, 72%, 850px)
    -
        id: setting-underline-offset
        title: Underline Offset
        title.zh: 下划线间距
        type: variable-number-slider
        default: 2
        format: 'px'
        min: 0
        max: 8
        step: 0.5
    -
        id: line-indicator-enable
        title: Hover Line Indicator
        description: Reference from https://github.com/Akifyss/obsidian-border, need install version>=1.1.9
        title.zh: 鼠标经过行指示器
        description.zh: 参考自 https://github.com/Akifyss/obsidian-border, 需要安装版本>=1.1.9
        type: class-select
        allowEmpty: false
        default: line-indicator-disable
        options:
            -   label: none
                value: line-indicator-disable
            -   label: left
                value: line-indicator-enable
            -   label: full line
                value: line-indicator-full
    -
        id: line-active
        title: Active Line Hightlight
        title.zh: 当前行高亮
        type: class-select
        allowEmpty: false
        default: line-active-enable
        options:
            -   label: none
                value: line-active-disable
            -   label: left
                value: line-active-left
            -   label: full line
                value: line-active-enable
    -
        id: setting-line-active-color
        title: Active Line Color
        title.zh: 高亮行颜色
        type: variable-themed-color
        format: hex-values
        default-light: '#'
        default-dark: '#'
    -
        id: setting-text-normal
        title: Editor Text Color
        title.zh: 编辑器文字颜色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: text-highlight
        title: Highlight
        title.zh: 高亮
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-text-highlight-bg
        title: Highlight Text Background Color
        description: The value can be the value of any background attribute in css
        title.zh: 文本高亮背景色
        description.zh: 填写的值可以为css中任意 background 属性的值
        type: variable-text
        default: 'rgba(255, 208, 0, 0.4)'
    -
        id: setting-text-highlight-color
        title: Highlight Text Color
        title.zh: 文本高亮文字颜色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-text-highlight-radius
        title: Highlight Background Radius
        description: Format px
        title.zh: 高亮背景色圆角大小
        description.zh: 单位 px
        type: variable-number-slider
        default: 4
        min: 0
        max: 8
        step: 1
    -
        id: text-highlight-all-round
        title: Keep Radius When Wrap
        description: Except when edit
        title.zh: 换行时保持圆角
        description.zh: 除了编辑的时候
        type: class-toggle
        default: true
    -
        id: text-highlight-margin
        title: Add Spacing Around Highlight
        title.zh: 增加高亮周围边距
        type: class-toggle
    -
        id: text-bold
        title: Bold
        title.zh: 粗体
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-text-bold-color
        title: Bold Text Color
        title.zh: 粗体颜色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-text-bold-style
        title: Bold Style
        description: Support any css text-decoration property
        title.zh: 粗体样式
        description.zh: 支持任何 css 的 text-decoration 属性值
        type: variable-text
        default: "underline dotted"
    -
        id: setting-text-bold-font
        title: Bold Font
        title.zh: 粗体字体
        type: variable-text
        default: "''"
    -
        id: text-italic
        title: Italic
        title.zh: 斜体
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-text-italic-color
        title: Italic Text Color
        title.zh: 斜体颜色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-text-italic-style
        title: Italic Style
        description: Support any css text-decoration property
        title.zh: 斜体样式
        description.zh: 支持任何 css 的 text-decoration 属性值
        type: variable-text
        default: "underline dotted"
    -
        id: setting-text-italic-font
        title: Italic Font
        title.zh: 斜体字体
        type: variable-text
        default: "''"
    -
        id: links
        title: Link
        title.zh: 链接
        type: heading
        collapsed: true
        level: 2
    -
        id: link-hover-expand
        title: Use Underline Animation On Hover
        title.zh: 鼠标经过时开启下划线动画
        type: class-toggle
    -
        id: link-icon
        title: Add Icon Before Link In Editor
        title.zh: 编辑器内链接前添加图标
        type: class-toggle
        default: true
    -
        id: link-heading
        title: Compatible With Heading Style
        description: Keep link color with heading, but keep icon
        title.zh: 兼容标题样式
        description.zh: 链接颜色改为标题颜色，保留图标
        type: class-toggle
    -
        id: link-click-to-edit-in-live-preview
        title: Click To Edit Link In Live-Preview
        description: ❗will disable hover animation, external link prefix icon will be diabled
        title.zh: 实时预览 模式时点击链接进行编辑而不是跳转
        description.zh: ❗鼠标经过动画会消失，外部链接的前置图标会消失
        type: class-toggle
    -
        id: link-color
        title: Link Color
        title.zh: 链接颜色
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-link-internal-color
        title: Internal Link Color
        title.zh: 内部链接颜色
        type: variable-themed-color
        format: rgb-values
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-link-internal-color-underline
        title: Internal Link Underline Color
        title.zh: 内部链接下划线颜色
        type: variable-themed-color
        format: rgb
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-link-external-color
        title: External Link Color
        title.zh: 外部链接颜色
        type: variable-themed-color
        format: rgb-values
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-link-external-color-underline
        title: External Link Underline Color
        title.zh: 外部链接下划线颜色
        type: variable-themed-color
        format: rgb
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: heading
        title: Heading
        title.zh: 标题
        type: heading
        collapsed: true
        level: 2
    -
        id: fix-line-number
        title: Fix Line Number Movement
        description: Will increase '#' size
        title.zh: 修复行号的移动
        description.zh: 将增加 '#' 的大小
        type: class-toggle
    -
        id: heading-level
        title: Heading Level Icon
        description: Add prefix icon for heading, click to collapse title if you open setting “Fold heading”
        title.zh: 标题等级图标
        description.zh: 为标题添加前置图标，如果你开启了“折叠图标”选项，点击图标可以收起标题
        type: heading
        collapsed: true
        level: 3
    -
        id: heading-level-enable
        title: Level Heading Icon
        title.zh: 标题等级图标
        type: class-toggle
    -
        id: heading-level-fix
        title: Always Show Heading Icon
        description: Highlight on hover
        title.zh: 总是显示图标
        description.zh: 鼠标经过时高亮
        type: class-toggle
    -
        id: heading-level
        title: Heading Style Preference
        title.zh: 标题样式设置
        type: heading
        collapsed: true
        level: 3
    -
        id: heading-h1-center
        title: Centered Heading 1
        title.zh: 居中一级标题
        type: class-toggle
        default: true
    -
        id: heading-underline-thin
        title: Thinner Heading Underline
        title.zh: 标题下划线变细
        type: class-toggle
    -
        id: heading-h6-variant
        title: Set Font Small-caps For Heading 6
        description: All characters are capitalized
        title.zh: 为六级标题设置 small-caps 样式
        description.zh: 所有字母都是大写
        type: class-toggle
        default: true
    -
        id: heading-color
        title: Heading Color
        title.zh: 标题颜色
        type: heading
        collapsed: true
        level: 3
    -
        id: heading-color-style
        title: Heading Color Style
        title.zh: 标题颜色样式
        type: class-select
        allowEmpty: false
        default: heading-color-colorful
        options:
            -   label: text color
                value: heading-color-base
            -   label: accent color
                value: heading-color-accent
            -   label: colorful
                value: heading-color-colorful
    -
        id: heading-color-custom
        title: Custom Heading Color
        title.zh: 自定义标题颜色
        type: heading
        level: 4
    -
        id: setting-h1-color
        title: H1 Color
        title.zh: 标题 1 颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-h2-color
        title: H2 Color
        title.zh: 标题 2 颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-h3-color
        title: H3 Color
        title.zh: 标题 3 颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-h4-color
        title: H4 Color
        title.zh: 标题 4 颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-h5-color
        title: H5 Color
        title.zh: 标题 5 颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-h6-color
        title: H6 Color
        title.zh: 标题 6 颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: heading-size
        title: Heading Size
        description: Compare to normal text
        title.zh: 标题大小
        description.zh: 相对于正文字体
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-h1-size
        title: H1 Font Size
        title.zh: 标题 1 字体大小
        type: variable-number-slider
        default: 1.6
        min: 1
        max: 2.4
        step: 0.1
    -
        id: setting-h2-size
        title: H2 Font Size
        title.zh: 标题 2 字体大小
        type: variable-number-slider
        default: 1.5
        min: 1
        max: 2.4
        step: 0.1
    -
        id: setting-h3-size
        title: H3 Font Size
        title.zh: 标题 3 字体大小
        type: variable-number-slider
        default: 1.4
        min: 1
        max: 2.4
        step: 0.1
    -
        id: setting-h4-size
        title: H4 Font Size
        title.zh: 标题 4 字体大小
        type: variable-number-slider
        default: 1.3
        min: 1
        max: 2.4
        step: 0.1
    -
        id: setting-h5-size
        title: H5 Font Size
        title.zh: 标题 5 字体大小
        type: variable-number-slider
        default: 1.2
        min: 1
        max: 2.4
        step: 0.1
    -
        id: setting-h6-size
        title: H6 Font Size
        title.zh: 标题 6 字体大小
        type: variable-number-slider
        default: 1.1
        min: 1
        max: 2.4
        step: 0.1
    -
        id: heading-underline
        title: Heading Underline
        description: With line-gredient
        title.zh: 标题下划线
        description.zh: 渐变色
        type: heading
        collapsed: true
        level: 3
    -
        id: heading-h1-underline
        title: Add Underline For H1
        title.zh: 添加 h1 下划线
        type: class-toggle
    -
        id: heading-h2-underline
        title: Add Underline For H2
        title.zh: 添加 h2 下划线
        type: class-toggle
        default: true
    -
        id: heading-h3-underline
        title: Add Underline For H3
        title.zh: 添加 h3 下划线
        type: class-toggle
    -
        id: heading-h4-underline
        title: Add Underline For H4
        title.zh: 添加 h4 下划线
        type: class-toggle
    -
        id: heading-h5-underline
        title: Add Underline For H5
        title.zh: 添加 h5 下划线
        type: class-toggle
    -
        id: heading-h6-underline
        title: Add Underline For H6
        title.zh: 添加 h6 下划线
        type: class-toggle
    -
        id: heading-font
        title: Heading Font
        title.zh: 标题字体
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-h1-font
        title: H1 Font
        title.zh: 标题 1 字体
        type: variable-text
        default: "''"
    -
        id: setting-h2-font
        title: H2 Font
        title.zh: 标题 2 字体
        type: variable-text
        default: "''"
    -
        id: setting-h3-font
        title: H3 Font
        title.zh: 标题 3 字体
        type: variable-text
        default: "''"
    -
        id: setting-h4-font
        title: H4 Font
        title.zh: 标题 4 字体
        type: variable-text
        default: "''"
    -
        id: setting-h5-font
        title: H5 Font
        title.zh: 标题 5 字体
        type: variable-text
        default: "''"
    -
        id: setting-h6-font
        title: H6 Font
        title.zh: 标题 6 字体
        type: variable-text
        default: "''"
    -
        id: hr
        title: Hr
        title.zh: 分隔行
        type: heading
        collapsed: true
        level: 2
    -
        id: hr-enable
        title: Enable Hr Style
        title.zh: 开启分割线样式
        type: class-toggle
        default: true
    -
        id: setting-hr-icon
        title: Set Icon In The Center Of Hr
        title.zh: 分割行中部图标
        type: variable-text
        default: "'⭐'"
    -
        id: table
        title: Table
        title.zh: 表格
        type: heading
        collapsed: true
        level: 2
    -
        id: table-full
        title: Full Width Table
        title.zh: 全宽表格
        type: class-toggle
        default: true
    -
        id: table-colorful
        title: Colorful Table
        description: Accent header and line color
        title.zh: 多彩表格
        description.zh: 添加表头和行的颜色
        type: class-toggle
        default: true
    -
        id: setting-table-header-text
        title: Header Text Color
        title.zh: 表头文字色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-table-header-bg
        title: Header Background Color
        title.zh: 表头背景色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-table-line-bg
        title: Alt Line Color
        title.zh: 交错行背景色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: embed
        title: Embed File
        title.zh: 内嵌文档
        type: heading
        collapsed: true
        level: 2
    -
        id: embed-enable
        title: Block Style Embed File
        title.zh: 块状的内嵌文档
        type: class-toggle
        default: true
    -
        id: embed-title-right-top
        title: Move Embed Title To Right Top
        description: Visiable on hover, disabled when alias is '#', Example ![[FileName|#]]
        title.zh: 内嵌文档标题移至右上角
        description.zh: 鼠标经过时显示；别名为'#'时禁用，例：![[文件名|#]]
        type: class-toggle
        default: true
    -
        id: image
        title: Image
        title.zh: 图片
        type: heading
        collapsed: true
        level: 2
    -
        id: image-alt
        title: Add Alt Text Below And Center The Image
        description: Example ![[image.jpg|alt text]]
        title.zh: 在图片底部添加提示文本并居中图片
        description.zh: 样例 ![[图片.jpg|提示文本]]
        type: class-toggle
        default: true
    -
        id: image-zoom
        title: Click To Zoom Out Image
        description: Invalid in source view or Live-Preview
        title.zh: 鼠标按下时放大图片
        description.zh: 在 源码模式 或者 实时预览 模式不生效
        type: class-toggle
        default: true
    -
        id: image-zoom-out
        title: Zoom Out The Image To Full Screen
        title.zh: 图片放大到全屏
        type: class-toggle
        default: true
    -
        id: image-dark-hover
        title: Decrease Brightness In Dark Mode
        description: Hover will increase brightness
        title.zh: 黑暗模式下降低图片亮度
        description.zh: 鼠标经过时会增加亮度
        type: class-toggle
        default: true
    -
        id: quote
        title: Quote
        title.zh: 引言
        type: heading
        collapsed: true
        level: 2
    -
        id: quote-theme
        title: Alternative Quote Style
        description: With thick guide line
        title.zh: 另一种引言样式
        description.zh: 宽引导线
        type: class-toggle
        default: true
    -
        id: quote-mark
        title: Add Front Quote Mark In Preview Mode
        title.zh: 阅读模式 引言块添加前置引号
        type: class-toggle
    -
        id: quote-outline-style
        title: Preview Mode Outline Style
        title.zh: 阅读模式 外部样式
        type: class-select
        allowEmpty: false
        default: quote-shadow
        options:
            -   label: none
                value: quote-none
            -   label: border
                value: quote-border
            -   label: shadow
                value: quote-shadow
    -
        id: list
        title: List
        title.zh: 列表
        type: heading
        collapsed: true
        level: 2
    -
        id: list-enable
        title: Optimize List Style
        description: ❗no support for list or task items inside callout
        title.zh: 优化列表样式
        description.zh: ❗精力有限，不打算适配 callout 中的列表或者代办项
        type: class-toggle
        default: true
    -
        id: list-bullet-thread-style
        title: Logseq Bullet Thread Style List
        description: ❗WIP
        title.zh: logseq bullet thread 样式的列表
        description.zh: ❗待完成
        type: class-toggle
        default: true
    -
        id: setting-list-marker
        title: List Marker Color
        title.zh: 列表标号颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-list-marker-alt
        title: List Marker Alt Color
        title.zh: 列表标号颜色 2
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: list-checkbox
        title: Task List (checkbox)
        title.zh: 待办事项（勾选框）
        type: heading
        collapsed: true
        level: 3
    -
        id: list-checkbox-line
        title: Remove Middle Line In Completed Item
        title.zh: 移除已完成事项上的删除线
        type: class-toggle
    -
        id: list-checkbox-alternative
        title: Enable Alternative Checkboxes
        description: Disable this if you are using your own implementation via a CSS Snippet.
        title.zh: 增加勾选框样式
        description.zh: 如果你用了其他勾选框 CSS 片段，可以关闭
        type: class-toggle
    -
        id: setting-list-checkbox-color
        title: Checkbox Marker Color
        title.zh: 勾选框颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-list-checkbox-color-hover
        title: Checkbox Marker Hover Color
        title.zh: 勾选框鼠标经过色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-list-checkbox-border
        title: Checkbox Marker Border
        title.zh: 勾选框边框
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: code
        title: Code
        title.zh: 代码
        type: heading
        collapsed: true
        level: 2
    -
        id: setting-code-inline
        title: Inline Code Color
        title.zh: 行内代码文字色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-code-bg
        title: Code Block Background Color
        title.zh: 代码块背景色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: code-line-number
        title: Add Code Block Line Number In Live Preview Mode
        description: If the code block lines are too large, the line number will have error
        title.zh: 为 实时预览模式 代码块添加行号
        description.zh: 如果代码块行数太多，行号会出现错误
        type: class-toggle
        default: true
    -
        id: code-language
        title: Add Code Block Language Indicator In Preview Mode
        title.zh: 为 阅读模式 代码块添加语言标识
        type: class-toggle
        default: true
    -
        id: code-nowrap
        title: No Wrap In Preview Mode
        title.zh: 阅读模式 代码块不换行
        type: class-toggle
        default: true
    -
        id: setting-code-ligature
        title: Monospace Font Feature
        description: If you use “Maple Mono” as monospace, recommend to set 'calt','cv02'
        title.zh: 等宽字体字体特性
        description.zh: 如果你使用“Maple Mono”作为等宽字体，推荐设置为 'calt','cv02'
        type: variable-text
        default: "'calt'"
    -
        id: code-preview-bg
        title: Enable Codeblock Background In Preview Mode
        description: Need install version >= 1.1.9
        title.zh: 在 阅读模式 开启代码块背景
        description.zh: 需要安装程序版本 >= 1.1.9
        type: class-toggle
    -
        id: setting-code-bg-outer
        title: Custom Codeblock Background In Preview Mode
        description: Need install version >= 1.1.9, image is supported(eg. 'url("/your/image/uri")'), it can be all the css value that supported by background-image
        title.zh: 修改 阅读模式 代码块背景
        description.zh: 需要安装程序版本 >= 1.1.9，支持图片（'url("图片地址")'），可以是 css background-image 支持的所有的值
        type: variable-text
        default: "''"
    -
        id: code-mac-style-header
        title: Add Mac Style Code Block Header In Preview Mode
        description: No code block border
        title.zh: 为 阅读模式 代码块添加mac的标题栏
        description.zh: 没有代码块边框
        type: class-toggle
    -
        id: setting-code-language-color
        title: Language Indicator Color
        title.zh: 语言标识颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: code-theme
        title: Use Theme's Color Schema
        title.zh: 使用主题的代码高亮
        type: class-toggle
        default: true
    -
        id: tag
        title: Tag
        title.zh: 标签
        type: heading
        collapsed: true
        level: 2
    -
        id: tag-click-to-edit
        title: Click To Edit Tags In Live-Preview Mode
        description: Click '#' to jump
        title.zh: 点击标签进行编辑
        description.zh: 点击'#'跳转
        type: class-toggle
    -
        id: tag-style
        title: Tag Style
        description: Tags of obsidian / todo / important / progress / complete will be colorized when use outline or fill
        title.zh: 标签样式
        description.zh: 当选择 outline 或者 fill 时，obsidian / todo / important / progress / complete 标签会有额外颜色
        type: class-select
        allowEmpty: false
        default: tag-outline
        options:
            -   label: default
                value: tag-default
            -   label: plain
                value: tag-plain
            -   label: outline
                value: tag-outline
            -   label: fill
                value: tag-fill
    -
        id: setting-tag-bg
        title: Tag Background Color
        title.zh: 标签背景颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: tag-outline-setting
        title: Outline Style Setting
        title.zh: 边框模式设置
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-tag-color
        title: Tag Text Color
        title.zh: 标签文字颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-tag-border
        title: Tag Border Color
        title.zh: 标签边框颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: canvas
        title: Canvas
        title.zh: 白板
        type: heading
        collapsed: true
        level: 2
    -
        id: canvas-group-hide
        title: Hide Left Canvas Control Buttons
        description: Show on hover
        title.zh: 隐藏左侧的控制按钮
        description.zh: 鼠标移入时显示
        type: class-toggle
    -
        id: canvas-center
        title: Center Text In Card When Blur Focus
        title.zh: 卡片失去焦点时居中文本
        type: class-toggle
    -
        id: pdf
        title: PDF
        type: heading
        collapsed: true
        level: 2
    -
        id: pdf-dark-hover
        title: Decrease Brightness In Dark Mode
        description: Hover will increase brightness
        title.zh: 黑暗模式下降低图片亮度
        description.zh: 鼠标经过时会增加亮度
        type: class-toggle
        default: true
    -
        id: prop
        title: Properties
        title.zh: 文档属性
        type: heading
        collapsed: true
        level: 2
    -
        id: prop-outline
        title: Add Outlint For Property Panel
        title.zh: 属性面板添加边框
        type: class-toggle
        default: true
*/
/* @settings

name: 🔌 Maple Plugin
id: maple-plugin
settings:
    -
        id: calendar
        title: Calendar
        title.zh: 日历
        type: heading
        collapsed: true
        level: 2
    -
        id: calendar-weekend
        title: Highlight Weekend
        title.zh: 突显周末
        type: class-toggle
        default: true
    -
        id: calendar-swap-year-month
        title: Swap Year & Month
        title.zh: 交换年和月的位置
        type: class-toggle
    -
        id: setting-calendar-year-suffix
        title: Year Suffix
        title.zh: 年份后缀
        type: variable-text
        default: "'年'"
    -
        id: setting-calendar-max-width
        title: Max Width
        description: Support any css max-width property
        title.zh: 最大宽度
        description.zh: 支持任何 css 的 max-width 属性值
        type: variable-text
        default: "500px"
    -
        id: kanban
        title: Kanban
        type: heading
        collapsed: true
        level: 2
    -
        id: setting-kanban-item-color
        title: Kanban Item Font Color
        title.zh: kanban 项 文字颜色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-kanban-item-bg
        title: Kanban Item Background Color
        title.zh: kanban 项 背景色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-kanban-board-bg
        title: Kanban Board Backgound Color
        title.zh: kanban 版面 背景色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: dv
        title: DataView(WIP)
        title.zh: DataView(待完工)
        type: heading
        collapsed: true
        level: 2
    -
        id: dv-enable
        title: Enable Dataview Style
        description: Need install version >= 1.1.9
        title.zh: 启用 dataview 样式
        description.zh: 需要安装程序版本 >= 1.1.9
        type: class-toggle
*/
.mod-settings .vertical-tab-content > .setting-item:nth-child(2) > .setting-item-control > input[type=color] {
  position: relative;
}
.mod-settings .vertical-tab-content > .setting-item:nth-child(2) > .setting-item-control > input[type=color]::before {
  content: "only change Hue!";
  font-family: var(--font-interface);
  position: absolute;
  width: auto;
  left: calc((var(--swatch-width) + var(--size-4-12) * 2 + 120%) * -1);
  top: 50%;
  transform: translateY(-50%);
}

:is(.style-settings-import, .style-settings-export, .style-settings-copy, .style-settings-download, .style-settings-import-label) {
  transition: var(--animation);
  text-decoration: none !important;
  height: var(--input-height);
  font-size: var(--font-ui-small);
  font-family: inherit;
  font-weight: var(--input-font-weight);
  color: var(--text-normal) !important;
  line-height: var(--input-height);
  padding: 0 0.8em;
  max-width: 100%;
  box-sizing: border-box;
  margin: 0;
  border: 0;
  box-shadow: var(--input-shadow);
  border-radius: var(--input-radius);
  background-color: var(--interactive-normal);
}
:is(.style-settings-import, .style-settings-export, .style-settings-copy, .style-settings-download, .style-settings-import-label):hover {
  box-shadow: var(--input-shadow-hover);
  background-color: var(--interactive-hover);
}

.themed-color-wrapper > .theme-light {
  background-color: #eee;
}
.themed-color-wrapper > .theme-dark {
  background-color: #111;
}
.themed-color-wrapper .pickr-reset > button {
  padding: var(--size-2-3);
}

.pickr .pcr-button::before, .pickr .pcr-button::after {
  border-radius: var(--radius-s);
}

.style-settings-container .setting-item:is([data-id^=setting-accent-h]) input.slider {
  height: 0.8em;
  --hue-slider-sat: 70%;
  --hue-slider-br: 60%;
  background: linear-gradient(to right, hsl(0, var(--hue-slider-sat), var(--hue-slider-br)), hsl(30, var(--hue-slider-sat), var(--hue-slider-br)), hsl(60, var(--hue-slider-sat), var(--hue-slider-br)), hsl(90, var(--hue-slider-sat), var(--hue-slider-br)), hsl(120, var(--hue-slider-sat), var(--hue-slider-br)), hsl(150, var(--hue-slider-sat), var(--hue-slider-br)), hsl(180, var(--hue-slider-sat), var(--hue-slider-br)), hsl(210, var(--hue-slider-sat), var(--hue-slider-br)), hsl(240, var(--hue-slider-sat), var(--hue-slider-br)), hsl(270, var(--hue-slider-sat), var(--hue-slider-br)), hsl(300, var(--hue-slider-sat), var(--hue-slider-br)), hsl(330, var(--hue-slider-sat), var(--hue-slider-br)), hsl(360, var(--hue-slider-sat), var(--hue-slider-br)));
  border-radius: var(--size-2-1);
}
.style-settings-container .setting-item:is([data-id^=setting-accent-h]) .setting-item-control::before {
  content: "";
  font-size: 0.7em;
  text-align: center;
  white-space: pre-wrap;
  height: 1.6em;
  width: 1.6em;
  color: var(--text-normal);
  background-color: hsl(var(--setting-accent-h-light, 116), 32%, 58%);
  position: relative;
  right: 1em;
  border-radius: var(--radius-s);
}
.style-settings-container .setting-item[data-id=setting-accent-h-dark] .setting-item-control::before {
  background-color: hsl(var(--setting-accent-h-dark, 207), 32%, 58%);
}

/* hide option */
body:not(.line-active-enable) .setting-item[data-id=setting-line-active-color],
body:not(.calendar-swap-year-month) .setting-item[data-id=setting-calendar-year-suffix],
body:not(.quote-theme) .setting-item:is([data-id=quote-mark], [data-id=quote-shadow]),
body:not(.scrollbar-smooth) .setting-item[data-id=scrollbar-smooth-editor],
body.bg-default .setting-item[data-id=setting-bg-color],
body.scrollbar-hide .setting-item:is([data-id*=scrollbar-hover], [data-id=scrollbar-movein-animation], [data-id=scrollbar-gutter]),
body:not(.status-bar-enable) .setting-item[data-id*=status-bar-style],
:is(body.status-bar-scroll, body:not(.status-bar-style-float)) .setting-item[data-id=status-bar-style-center],
body:not(.tab-title-bar-round) .setting-item[data-id=tab-title-bar-shadow],
body:not(.loading-text) .setting-item[data-id=loading-text-content],
body:not(.explorer-icon) .setting-item[data-id=setting-color-dirs],
body:not(.search-internal-enable) .setting-item:is([data-id=search-internal-expand-on-focus], [data-id=search-internal-disable-select-all]),
body:not(.color-use-custom) .setting-item[data-id*=color-accent-],
body:not(.list-enable) .setting-item:is([data-id*=setting-list-], [data-id=list-checkbox]),
body:not(.code-language) .setting-item[data-id=setting-code-language-color],
body:not(.code-preview-bg) .setting-item[data-id=setting-code-bg-outer],
body:not(.modal-header) .setting-item[data-id=setting-modal-header-title],
body:not(.color-use-custom) .setting-item[data-id^=accent-hue],
body:not(.color-active-custom-light) .setting-item[data-id=setting-color-active-custom-light],
body:not(.color-active-custom-dark) .setting-item[data-id=setting-color-active-custom-dark],
body:not(.message-modify) .setting-item[data-id^=setting-message],
body:not(.image-zoom) .setting-item[data-id^=image-zoom-out],
body:not(.heading-level-enable) .setting-item[data-id^=heading-level-fix],
body:not(.heading-color-colorful) .setting-item[data-id=heading-color-custom],
body:not(.table-colorful) .setting-item[data-id^=setting-table],
body:not(.embed-enable) .setting-item[data-id^=embed-title],
body:not(.hr-enable) .setting-item[data-id^=setting-hr-icon],
body:not(.tag-outline) .setting-item[data-id=tag-outline-setting] {
  display: none;
}
body:not(.line-active-enable) .setting-item[data-id=setting-line-active-color] + .style-settings-container,
body:not(.calendar-swap-year-month) .setting-item[data-id=setting-calendar-year-suffix] + .style-settings-container,
body:not(.quote-theme) .setting-item:is([data-id=quote-mark], [data-id=quote-shadow]) + .style-settings-container,
body:not(.scrollbar-smooth) .setting-item[data-id=scrollbar-smooth-editor] + .style-settings-container,
body.bg-default .setting-item[data-id=setting-bg-color] + .style-settings-container,
body.scrollbar-hide .setting-item:is([data-id*=scrollbar-hover], [data-id=scrollbar-movein-animation], [data-id=scrollbar-gutter]) + .style-settings-container,
body:not(.status-bar-enable) .setting-item[data-id*=status-bar-style] + .style-settings-container,
:is(body.status-bar-scroll, body:not(.status-bar-style-float)) .setting-item[data-id=status-bar-style-center] + .style-settings-container,
body:not(.tab-title-bar-round) .setting-item[data-id=tab-title-bar-shadow] + .style-settings-container,
body:not(.loading-text) .setting-item[data-id=loading-text-content] + .style-settings-container,
body:not(.explorer-icon) .setting-item[data-id=setting-color-dirs] + .style-settings-container,
body:not(.search-internal-enable) .setting-item:is([data-id=search-internal-expand-on-focus], [data-id=search-internal-disable-select-all]) + .style-settings-container,
body:not(.color-use-custom) .setting-item[data-id*=color-accent-] + .style-settings-container,
body:not(.list-enable) .setting-item:is([data-id*=setting-list-], [data-id=list-checkbox]) + .style-settings-container,
body:not(.code-language) .setting-item[data-id=setting-code-language-color] + .style-settings-container,
body:not(.code-preview-bg) .setting-item[data-id=setting-code-bg-outer] + .style-settings-container,
body:not(.modal-header) .setting-item[data-id=setting-modal-header-title] + .style-settings-container,
body:not(.color-use-custom) .setting-item[data-id^=accent-hue] + .style-settings-container,
body:not(.color-active-custom-light) .setting-item[data-id=setting-color-active-custom-light] + .style-settings-container,
body:not(.color-active-custom-dark) .setting-item[data-id=setting-color-active-custom-dark] + .style-settings-container,
body:not(.message-modify) .setting-item[data-id^=setting-message] + .style-settings-container,
body:not(.image-zoom) .setting-item[data-id^=image-zoom-out] + .style-settings-container,
body:not(.heading-level-enable) .setting-item[data-id^=heading-level-fix] + .style-settings-container,
body:not(.heading-color-colorful) .setting-item[data-id=heading-color-custom] + .style-settings-container,
body:not(.table-colorful) .setting-item[data-id^=setting-table] + .style-settings-container,
body:not(.embed-enable) .setting-item[data-id^=embed-title] + .style-settings-container,
body:not(.hr-enable) .setting-item[data-id^=setting-hr-icon] + .style-settings-container,
body:not(.tag-outline) .setting-item[data-id=tag-outline-setting] + .style-settings-container {
  display: none;
}

/* 参考 https://github.com/damiankorcz/Prism-Theme */
div.workspace-leaf-content[data-type=style-settings] div.view-content {
  padding: var(--file-margins);
}
body.is-mobile div.workspace-leaf-content[data-type=style-settings] div.view-content {
  padding: var(--size-4-8) var(--size-4-4);
}
body:not(.is-mobile) div.workspace-leaf-content[data-type=style-settings] .view-content .style-settings-container .setting-item:not(.setting-item-heading) {
  flex-direction: row;
}

.setting-item.setting-item-heading.style-settings-heading {
  padding: var(--size-4-2);
  margin: var(--size-4-1) 0;
  border-radius: var(--radius-m);
  padding-left: var(--size-4-3);
}
.setting-item.setting-item-heading.style-settings-heading:hover {
  color: var(--highlight-text-normal);
  background-color: var(--background-modifier-hover);
}

.style-settings-container {
  padding-bottom: unset;
}
.style-settings-container .setting-item {
  padding: var(--size-4-2);
  padding-left: var(--size-4-6);
}
.is-phone .style-settings-container .setting-item {
  margin-top: unset;
}

.style-settings-heading[data-level="0"] {
  background-color: var(--md-container-bg);
  border: 1px solid hsla(var(--accent-h), var(--accent-s), calc(var(--accent-l) + 4%), 16%) !important;
}
.style-settings-heading[data-level="0"] + .style-settings-container .style-settings-collapse-indicator {
  margin-left: unset;
}

:is(.setting-item.setting-item-heading.style-settings-heading, .style-settings-container .style-settings-heading) {
  border-bottom: unset;
}

.setting-item-heading .setting-item-description {
  padding-left: var(--size-4-4);
}

.setting-item.setting-item-heading.is-collapsed {
  margin-bottom: unset;
}

.style-settings-container > .setting-item:last-of-type {
  padding-bottom: unset;
  margin-bottom: var(--size-4-4);
}

:is(.style-settings-heading[data-level="0"] + .style-settings-container, .style-settings-container) {
  padding-left: var(--size-2-1);
  margin-left: var(--size-4-4);
  border-left: var(--nav-indentation-guide-width) solid var(--nav-indentation-guide-color);
  transition: var(--animation);
}
:is(.style-settings-heading[data-level="0"] + .style-settings-container, .style-settings-container):hover {
  border-left-color: var(--accent-active);
}

body.modal-item-animation .style-settings-heading {
  transition: var(--animation);
}
body.modal-item-animation .style-settings-heading:hover {
  transition: none;
}

/* #endregion [style settings] */
/* #region built-in fonts */
@font-face {
  font-family: "EMBED-TEX-I";
  font-display: swap;
  font-style: normal;
  src: url("data:application/font-woff;base64,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") format("woff");
}
@font-face {
  font-family: "maplemono";
  font-display: swap;
  font-style: normal;
  src: local("Maple Mono NF CN Regular"), local("Maple Mono CN Regular"), local("Maple Mono NF Regular"), local("Maple Mono Regular"), url("data:font/woff2;base64,") format("woff2");
}
@font-face {
  font-family: "maplemono";
  font-display: swap;
  font-style: italic;
  src: local("Maple Mono NF CN Italic"), local("Maple Mono CN Italic"), local("Maple Mono NF Italic"), local("Maple Mono Italic"), url("data:font/woff2;base64,") format("woff2");
}
/* #endregion built-in fonts */
/* #region global variables */
:is(body, body .print) {
  --font-ui-smaller: 13px;
  --font-ui-small: 14px;
  --font-ui-medium: 16px;
  --line-height-normal: 1.8;
  --background-modifier-hover: hsl(var(--accent-h), var(--accent-s), calc(var(--accent-l) + 4%), 20%);
  --background-modifier-border: var(--accent-inactive);
  --background-modifier-border-focus: var(--accent-inactive);
  --background-modifier-error: rgba(var(--color-red-rgb), 0.8);
  --background-modifier-cover: hsla(var(--background-secondary-hsl), 0.6);
  --interactive-accent: var(--accent-active);
  --radius-xl: var(--size-4-3);
  --animation: var(--setting-animation-time, 200ms) var(--anim-motion-smooth);
  --animation-slow: calc(var(--setting-animation-time, 200ms) * 2) var(--anim-motion-smooth);
  --animation-delay: calc(4 * var(--setting-animation-time, 150ms));
  --bg-opacity: 1;
  --block-outline-width: 3px;
  --editor-bg: var(--setting-editor-bg, var(--background-primary-hsl));
  --nav-item-background-hover: var(--background-modifier-hover);
  --nav-item-background-active: var(--accent-active);
  --nav-item-background-selected: var(--frame-outline-color);
}

:is(body.obsidian-app, body.obsidian-app .print) {
  --accent-s: 32% !important;
  --accent-l: 58% !important;
}

:is(body.color-use-custom.theme-light.css-settings-manager, body.color-use-custom.theme-light.css-settings-manager .print) {
  --accent-h: var(--setting-accent-h-light, 35) !important;
  --accent-s: var(--setting-accent-s-light, 32%) !important;
  --accent-l: var(--setting-accent-l-light, 58%) !important;
}

:is(body.color-use-custom.theme-dark.css-settings-manager, body.color-use-custom.theme-dark.css-settings-manager .print) {
  --accent-h: var(--setting-accent-h-dark, 207) !important;
  --accent-s: var(--setting-accent-s-dark, 32%) !important;
  --accent-l: var(--setting-accent-l-dark, 58%) !important;
}

:is(.theme-light, .theme-light .print) {
  --color-red: rgba(var(--color-red-rgb), var(--color-opacity)) !important;
  --color-red-rgb: 189.0825, 81.2175, 81.2175 !important;
  --color-orange: rgba(var(--color-orange-rgb), var(--color-opacity)) !important;
  --color-orange-rgb: 216.75, 133.45, 38.25 !important;
  --color-yellow: rgba(var(--color-yellow-rgb), var(--color-opacity)) !important;
  --color-yellow-rgb: 199.92, 154.224, 4.08 !important;
  --color-green: rgba(var(--color-green-rgb), var(--color-opacity)) !important;
  --color-green-rgb: 84.7875, 169.575, 24.225 !important;
  --color-cyan: rgba(var(--color-cyan-rgb), var(--color-opacity)) !important;
  --color-cyan-rgb: 21.0375, 147.2625, 96.7725 !important;
  --color-blue: rgba(var(--color-blue-rgb), var(--color-opacity)) !important;
  --color-blue-rgb: 5.814, 148.5154, 187.986 !important;
  --color-purple: rgba(var(--color-purple-rgb), var(--color-opacity)) !important;
  --color-purple-rgb: 134.385, 112.455, 178.245 !important;
  --background-primary-hsl: var(--accent-h), calc(var(--accent-s) - 12%), 97%;
  --background-primary: hsl(var(--background-primary-hsl));
  --background-secondary-hsl: calc(var(--accent-h) - 18), calc(var(--accent-s) - 4%), calc(100% - (100% - var(--accent-l)) / 8);
  --background-secondary: hsl(var(--background-secondary-hsl));
  --background-modifier-hover: hsl(var(--accent-h), calc(var(--accent-s) * 1.2), min(var(--accent-l) * 2, 90%));
  --accent-active: hsl(var(--accent-h), var(--accent-s), calc(var(--accent-l) + 4%));
  --accent-inactive: hsl(var(--accent-h), calc(var(--accent-s) - 4%), calc(var(--accent-l) + 24%));
  --text-on-accent: #fafafa !important;
  --frame-background-color: hsl(var(--accent-h), var(--accent-s), calc(var(--accent-l) + 32%));
  --frame-outline-color: hsl(var(--accent-h), var(--accent-s), calc(var(--accent-l) + 23.5%));
  --frame-muted-color: hsl(var(--accent-h), calc(var(--accent-s) - 20%), calc(var(--accent-l) - 10%));
  --md-container-bg: var(--setting-md-container-bg, hsla(calc(var(--accent-h) + 8), calc(var(--accent-s) / 1.2), calc(100% - (100% - var(--accent-l)) / 6), 70%));
  --color-opacity: 1;
}

:is(.theme-dark, .theme-dark .print) {
  --color-red: rgba(var(--color-red-rgb), var(--color-opacity)) !important;
  --color-red-rgb: 240.72, 167.28, 167.28 !important;
  --color-orange: rgba(var(--color-orange-rgb), var(--color-opacity)) !important;
  --color-orange-rgb: 239.7, 192.1, 168.3 !important;
  --color-yellow: rgba(var(--color-yellow-rgb), var(--color-opacity)) !important;
  --color-yellow-rgb: 238.17, 206.754, 159.63 !important;
  --color-green: rgba(var(--color-green-rgb), var(--color-opacity)) !important;
  --color-green-rgb: 164.424, 223.176, 174.216 !important;
  --color-cyan: rgba(var(--color-cyan-rgb), var(--color-opacity)) !important;
  --color-cyan-rgb: 161.16, 231.54, 229.194 !important;
  --color-blue: rgba(var(--color-blue-rgb), var(--color-opacity)) !important;
  --color-blue-rgb: 142.8, 198.9, 255 !important;
  --color-purple: rgba(var(--color-purple-rgb), var(--color-opacity)) !important;
  --color-purple-rgb: 211.905, 206.55, 252.45 !important;
  --background-primary: hsl(var(--background-primary-hsl));
  --background-primary-hsl: var(--accent-h), 5%, 5%;
  --background-secondary: hsl(var(--background-secondary-hsl));
  --background-secondary-hsl: calc(var(--accent-h) + 8), calc(var(--accent-s) / 6), calc(var(--accent-l) / 5);
  --background-modifier-hover: hsl(var(--accent-h), var(--accent-s), calc(var(--accent-l) / 3));
  --accent-active: hsl(var(--accent-h), var(--accent-s), calc(var(--accent-l) - 16%));
  --accent-inactive: hsl(var(--accent-h), calc(var(--accent-s) + 24%), calc(var(--accent-l) - 32%));
  --frame-background-color: hsl(var(--accent-h), 12%, 16%);
  --frame-outline-color: hsl(calc(var(--accent-h) - 24), calc(var(--accent-s) + 6%), 24%);
  --frame-muted-color: hsl(var(--accent-h), calc(var(--accent-s) - 20%), calc(var(--accent-l) + 10%));
  --text-normal: hsla(var(--accent-h), 50%, 94%, 75%);
  --text-on-accent: #eaeaea !important;
  --md-container-bg: var(--setting-md-container-bg, hsl(calc(var(--accent-h) - 4), 18%, 9%));
  --color-opacity: 0.85;
}

:is(.theme-light.color-use-custom:not(.color-active-default-light), .theme-light.color-use-custom:not(.color-active-default-light) .print) {
  --accent-active: var(--setting-color-active-custom-light,
    hsl(calc(var(--accent-h) + 60),
      calc(var(--accent-s) + -12%),
      calc(var(--accent-l) + 4%)));
  --accent-inactive: var(--setting-color-active-custom-dark,
    hsl(calc(var(--accent-h) + 60),
      calc(var(--accent-s) + -12%),
      calc(var(--accent-l) + 20%)));
}

:is(.theme-dark.color-use-custom:not(.color-active-default-dark), .theme-dark.color-use-custom:not(.color-active-default-dark) .print) {
  --accent-active: var(--setting-color-active-custom-light,
    hsl(calc(var(--accent-h) + 60),
      calc(var(--accent-s) + -12%),
      calc(var(--accent-l) + -12%)));
  --accent-inactive: var(--setting-color-active-custom-dark,
    hsl(calc(var(--accent-h) + 60),
      calc(var(--accent-s) + -12%),
      calc(var(--accent-l) + -28%)));
}

/* #endregion global variables */
/* #region [editor] */
/* #region basic */
/* #region paragraph */
body {
  --p-spacing: var(--setting-editor-p-spacing, var(--size-4-1)) ;
}

.p-indent {
  --indent: calc(var(--font-text-size) * var(--setting-editor-p-indent, 2));
}
.p-indent :is([class=cm-line], [class="cm-active cm-line"], p) {
  text-indent: var(--indent);
}
.p-indent p > br {
  content: "";
  white-space: pre;
}
.p-indent p > br::after {
  content: "\a​";
  margin-inline-end: var(--indent);
}

/* #endregion paragraph */
/* #region fix latex */
.font-latex-text mjx-container mjx-utext {
  font-family: var(--font-text) !important;
}

.font-fix-latex mjx-container .TEX-I {
  font-family: MJXZERO, EMBED-TEX-I;
}

mjx-stretchy-h > mjx-ext > mjx-c::before {
  transform: scaleX(200) !important;
}

/* #endregion fix latex */
/* #region monospace */
body:is(:not(.css-settings-manager), .font-maple) {
  --font-monospace-theme: "maplemono";
}

code,
code *,
.HyperMD-codeblock *,
.cm-inline-code {
  font-family: var(--font-monospace);
  font-feature-settings: var(--setting-code-ligature, "calt");
}

/* #endregion monospace */
/* #region editor background */
body {
  --file-line-width: var(--setting-file-line-width, clamp(600px, 72%, 820px));
}

.markdown-source-view.mod-cm6.is-readable-line-width :is(.cm-content, .cm-line) {
  max-width: 100%;
}

.workspace-split.mod-root .workspace-leaf-content[data-type=markdown] {
  background-color: hsla(var(--editor-bg), var(--bg-opacity));
}
.workspace-split.mod-root .workspace-leaf-content[data-type=markdown] .view-content {
  background-color: transparent;
}

/* #endregion editor background */
/* #region text */
body {
  --text-selection: hsla(var(--color-accent-hsl), 0.25);
}

.markdown-source-view,
.markdown-rendered,
.markdown-preview-view,
.community-modal-readme {
  color: var(--setting-text-normal, var(--text-normal));
}

body .markdown-source-view .cm-scroller .cm-line:not(.HyperMD-codeblock) {
  padding-inline: var(--size-4-1);
}

/* #endregion text */
/* #region editor line height */
.workspace-split.mod-root,
.markdown-rendered {
  --line-height-normal: var(--setting-line-height, 1.8) !important;
}

/* #endregion editor line height */
/* #region current line highlight */
.theme-light {
  --active-line: var(--setting-line-active-color, var(--accent-h), 24%, 92%);
}

.theme-dark {
  --active-line: var(--setting-line-active-color, var(--accent-h), 18%, 14%);
}

body:is(:not(.css-settings-manager), .line-active-enable) .workspace-leaf.mod-active .markdown-source-view .cm-scroller .cm-line.cm-active {
  background-color: hsl(var(--active-line));
  border-radius: var(--size-2-3);
}

body.line-active-left {
  --indicator-color: var(--accent-inactive) !important;
}
body.line-active-left .markdown-source-view .cm-line.cm-active:not(.HyperMD-header, .HyperMD-quote, .HyperMD-list-line-1:has(.collapse-indicator))::after {
  content: "";
  width: var(--size-4-1);
  position: absolute;
  inset-block: var(--size-4-1);
  left: calc(var(--size-4-3) * -1);
  background-color: var(--accent-active) !important;
  border-radius: var(--size-2-1);
}

/* #endregion current line highlight */
/* #region line indicator */
/* reference from https://github.com/Akifyss/obsidian-border */
body.line-indicator-enable {
  --indicator-color: var(--accent-active);
}
body.line-indicator-enable .markdown-preview-sizer > div:not(.search-highlight) {
  position: relative;
}
body.line-indicator-enable :is(.markdown-reading-view .markdown-preview-sizer > div:not(:has(:is(.collapse-indicator, hr, pre, blockquote, table, p img, audio, video))),
.markdown-source-view .cm-line:not(.HyperMD-header, .HyperMD-quote, .HyperMD-list-line-1:has(.collapse-indicator))):hover::after {
  content: "";
  width: var(--size-4-1);
  position: absolute;
  inset-block: var(--size-4-1);
  left: calc(var(--size-4-3) * -1);
  background-color: var(--indicator-color);
  border-radius: var(--size-2-1);
}

body.line-indicator-full .cm-line {
  border-radius: var(--size-2-1) !important;
}
body.line-indicator-full .cm-line:not(.HyperMD-codeblock):hover {
  background-color: hsl(var(--active-line), 50%);
}
body.line-indicator-full .cm-line.HyperMD-codeblock:hover {
  --code-background: hsl(var(--active-line), 70%);
}

/* #endregion line indicator */
/* #region keyboard */
.cm-hmd-html-begin,
.cm-hmd-html-begin ~ .cm-tag,
.cm-hmd-html-end,
.cm-line:has(.cm-hmd-html-begin) {
  font-family: var(--font-monospace);
}

kbd {
  user-select: none;
  text-transform: capitalize;
  border: var(--size-2-1) solid var(--accent-inactive);
  box-shadow: var(--shadow-s);
  border-radius: var(--size-2-3);
  transition: var(--animation);
  font-family: var(--font-monospace) !important;
  color: var(--text-normal) !important;
}
kbd:hover {
  border-color: var(--accent-active);
}

/* #endregion keyboard */
/* #region highlight */
mark {
  color: var(--text-normal);
}

.is-flashing {
  transition: var(--animation);
}

.theme-dark .is-flashing {
  --text-faint: #aaa;
}

body {
  --text-highlight-bg: var(--setting-text-highlight-bg, rgba(var(--color-yellow-rgb), 0.3));
}

.text-highlight-all-round :is(.markdown-source-view .cm-highlight, .markdown-rendered mark) {
  -webkit-box-decoration-break: clone;
}

.markdown-source-view span.cm-highlight,
.markdown-rendered mark {
  border-radius: calc(var(--setting-text-highlight-radius, 4) * 1px);
  color: var(--setting-text-highlight-color);
  background: var(--text-highlight-bg);
}

body.text-highlight-margin :is(.markdown-source-view span.cm-highlight, .markdown-rendered mark) {
  margin: 0 var(--size-2-1);
  padding: var(--size-2-1) var(--size-4-1);
}

.markdown-source-view :is(:not(.cm-highlight) + .cm-formatting-highlight, .cm-formatting-highlight:first-child) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  margin-right: 0;
  padding-right: 0;
}
.markdown-source-view .cm-formatting-highlight + .cm-highlight {
  border-radius: 0;
  padding-inline: 0;
  margin: 0;
}
.markdown-source-view .cm-highlight + .cm-formatting-highlight {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  margin-left: 0;
  padding-left: 0;
}

/* #endregion highlight */
/* #region bold & italic */
body {
  --bold-color: var(--setting-text-bold-color, var(--color-red)) !important;
  --italic-color: var(--setting-text-italic-color, var(--color-red)) !important;
}

body :is(.cm-highlight.cm-strong, mark > strong) {
  color: var(--setting-text-highlight-color, var(--bold-color));
}
body :is(.cm-highlight.cm-em, mark > em) {
  color: var(--setting-text-highlight-color, var(--bold-color));
}

em,
.cm-em {
  --blockquote-color: var(--italic-color);
  text-decoration: var(--setting-text-italic-style, underline dotted);
  font-family: var(--setting-text-italic-font, var(--font-text));
}

strong,
.cm-strong {
  --blockquote-color: var(--bold-color);
  text-decoration: var(--setting-text-bold-style, underline dotted);
  font-family: var(--setting-text-bold-font, var(--font-text));
}

:is(em, .cm-em, strong, .cm-strong, u) {
  text-underline-offset: var(--setting-underline-offset, 2);
}

a :is(em, strong) {
  text-decoration: none;
}
a :is(em, strong):hover {
  --bold-color: var(--text-on-accent);
  --italic-color: var(--text-on-accent);
}

/* #endregion bold & italic */
/* #region others */
.workspace-leaf-content[data-type=markdown] .view-header .clickable-icon:hover {
  background-color: var(--background-modifier-hover);
}

.cm-hmd-frontmatter {
  font-size: var(--font-small);
}

.view-header-title-container:not(.mod-at-end):after {
  content: none;
}

input[type=checkbox] {
  transition: var(--animation);
}
input[type=checkbox]:checked::after {
  -webkit-mask-position: 47% 52%;
}

/* #endregion others */
/* #endregion basic */
/* #region code */
:is(body, .print .markdown-rendered) {
  --inline-code: var(--setting-code-inline, var(--color-red));
  --code-background: var(--setting-code-bg, var(--md-container-bg));
  --code-function: var(--color-orange);
  --code-important: var(--color-purple);
  --code-keyword: var(--color-purple);
  --code-property: var(--color-orange);
  --code-punctuation: var(--color-blue);
  --code-string: var(--color-green);
  --code-tag: var(--color-red);
  --code-value: var(--color-orange);
  --code-comment: var(--text-faint);
  --code-normal: var(--code-preview-base);
  --code-bg-radius: var(--radius-m);
  --code-bg-border: var(--size-2-1) solid var(--nav-item-background-hover);
}

:is(.theme-light, .theme-light .print) {
  --code-preview-base: hsl(var(--accent-h),
      var(--accent-s),
      calc(var(--accent-l) - 30%));
  --code-mac-style-header-bg: #333;
}

:is(.theme-dark, .theme-dark .print) {
  --code-preview-base: hsl(var(--accent-h),
      var(--accent-s),
      85%);
  --code-mac-style-header-bg: #000;
}

.cm-hmd-codeblock.cm-formatting,
.markdown-rendered code {
  color: var(--inline-code);
}

.markdown-rendered code {
  border: var(--code-bg-border);
}

.markdown-preview-view pre code {
  color: var(--code-preview-base);
  border: none;
  border-radius: 0;
}

.cm-inline-code {
  color: var(--inline-code) !important;
  border-radius: var(--radius-s);
  border: var(--code-bg-border);
}
.cm-inline-code:not(.cm-formatting) {
  padding-inline: var(--size-2-1);
}
.cm-formatting-code + .cm-inline-code {
  padding: 0;
}
.cm-inline-code.cm-header {
  color: var(--inline-code) !important;
}

.cm-formatting-code:has(+ .cm-inline-code) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  border-right: 0;
  padding-left: var(--size-2-1);
}
.cm-formatting-code + .cm-inline-code {
  border-radius: 0;
  border-inline: 0;
}
.cm-inline-code + .cm-formatting-code {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-left: 0;
  padding-right: var(--size-2-1);
}

.cm-s-obsidian .cm-line.HyperMD-codeblock {
  line-height: calc(var(--line-height-normal) - 0.2);
  color: var(--color-blue) !important;
  border-left: var(--code-bg-border);
  border-right: var(--code-bg-border);
  border-radius: 0 !important;
}
.cm-s-obsidian .cm-line.HyperMD-codeblock .cm-fold-indicator .collapse-indicator {
  padding-left: var(--size-4-3);
  padding-right: unset !important;
  left: calc(var(--size-4-2) * -3);
  right: unset !important;
  cursor: pointer;
}
.cm-s-obsidian .cm-line.HyperMD-codeblock.HyperMD-codeblock-begin-bg {
  border-top: var(--code-bg-border);
  border-top-left-radius: var(--code-bg-radius) !important;
  border-top-right-radius: var(--code-bg-radius) !important;
  margin-top: var(--size-2-1) !important;
}
.cm-s-obsidian .cm-line.HyperMD-codeblock.HyperMD-codeblock-end-bg {
  border-bottom: var(--code-bg-border);
  border-bottom-left-radius: var(--code-bg-radius) !important;
  border-bottom-right-radius: var(--code-bg-radius) !important;
  margin-bottom: var(--size-2-1) !important;
}

.markdown-source-view.mod-cm6 .cm-embed-block:not(.cm-table-widget):not(.cm-callout) {
  box-shadow: none !important;
  border: var(--block-outline-width) solid transparent;
  border-radius: var(--radius-l) !important;
  transition: var(--animation);
}
.markdown-source-view.mod-cm6 .cm-embed-block:not(.cm-table-widget):not(.cm-callout):hover {
  border-color: var(--accent-active);
}
.markdown-source-view.mod-cm6 .cm-embed-block:not(.cm-table-widget):not(.cm-callout) .edit-block-button {
  border-radius: var(--radius-m) !important;
  transition: var(--animation);
  inset-block: 0.2rem;
  height: fit-content;
}

.cm-hmd-codeblock .cm-indent::before {
  transform: unset !important;
}

.markdown-source-view.mod-cm6 .code-block-flair:has(svg) {
  width: calc(var(--size-4-8) - var(--size-4-1));
  height: calc(var(--size-4-8) - var(--size-4-1));
  padding: var(--size-4-1);
}
.markdown-source-view.mod-cm6 .code-block-flair:has(svg) svg {
  width: var(--size-4-5);
  height: var(--size-4-5);
}

code[class*=language-],
pre {
  line-height: calc(var(--line-height-normal) - 0.2);
}

body .markdown-rendered pre {
  border-radius: var(--code-bg-radius);
  border: var(--block-outline-width) solid var(--accent-inactive);
  transition: var(--animation);
  overflow-x: hidden;
}
body .markdown-rendered pre:hover {
  border-color: var(--accent-active);
}
body .markdown-rendered pre:hover button.copy-code-button {
  opacity: 1;
}
body .markdown-rendered pre .copy-code-button {
  width: 1.5rem;
  height: 1.5rem;
  line-height: 1.5rem;
  opacity: 0;
  color: transparent;
  background-color: var(--setting-code-language-color, var(--accent-active));
  transition: var(--animation);
  margin: 0;
  display: block !important;
  top: var(--size-2-1);
  right: var(--size-4-1);
  z-index: 9;
}
body .markdown-rendered pre .copy-code-button:hover {
  opacity: 1;
  background-color: var(--text-normal);
}

.code-nowrap.scrollbar-gutter-overlay:not(.code-mac-style-header) .app-container div pre {
  padding-bottom: calc(var(--code-size) * var(--line-height-normal) * 0.8) !important;
}
.code-nowrap.scrollbar-gutter-overlay pre code {
  padding-bottom: var(--size-2-3);
}
.code-nowrap pre code {
  word-break: normal;
  word-wrap: break-word;
  white-space: pre;
}

body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre {
  padding: 2rem 0.8rem;
  position: relative;
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class*=language-]::before {
  content: "unkown language";
  font-family: var(--font-text);
  color: var(--setting-code-language-color, var(--inline-code));
  font-weight: bold;
  font-size: 0.9rem;
  position: absolute;
  letter-spacing: 0.05rem;
  text-align: right;
  right: calc(1.3rem + 2 * var(--size-4-1));
  top: 0.1333333333rem;
  line-height: var(--line-height-normal);
  z-index: 9;
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-c]::before {
  content: "C";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-properties]::before {
  content: "Properties";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-python]::before {
  content: "Python";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-nginx]::before {
  content: "Nginx";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-css]::before {
  content: "CSS";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-javascript]::before {
  content: "Javascript";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-js]::before {
  content: "JS";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-typescript]::before {
  content: "Typescript";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-ts]::before {
  content: "TS";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-jsp]::before {
  content: "JSP";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-php]::before {
  content: "PHP";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-lua]::before {
  content: "Lua";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-shell]::before {
  content: "Shell";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-powershell]::before {
  content: "PowerShell";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-flow]::before {
  content: "Flow";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-sequence]::before {
  content: "Sequence";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-sql]::before {
  content: "SQL";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-yaml]::before {
  content: "YAML";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-yml]::before {
  content: "YML";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-ini]::before {
  content: "ini";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-xml]::before {
  content: "XML";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-cs]::before {
  content: "CS";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-cpp]::before {
  content: "CPP";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-java]::before {
  content: "Java";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-html]::before {
  content: "HTML";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-txt]::before {
  content: "TXT";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-md]::before {
  content: "MD";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-markdown]::before {
  content: "Markdown";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-bat]::before {
  content: "Bat";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-json]::before {
  content: "Json";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-groovy]::before {
  content: "Groovy";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-scss]::before {
  content: "SCSS";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-bash]::before {
  content: "Bash";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-cmd]::before {
  content: "Cmd";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-latex]::before {
  content: "Latex";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-zig]::before {
  content: "Zig";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-ssml]::before {
  content: "SSML";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-jsx]::before {
  content: "JSX";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-tsx]::before {
  content: "TSX";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-tsconfig]::before {
  content: "tsconfig";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-git]::before {
  content: "Git";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-csharp]::before {
  content: "CSharp";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-csv]::before {
  content: "CSV";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-cue]::before {
  content: "cue";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-toml]::before {
  content: "TOML";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-kt]::before {
  content: "kt";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-kotlin]::before {
  content: "Kotlin";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-go]::before {
  content: "Go";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-rust]::before {
  content: "Rust";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-regex]::before {
  content: "Regex";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-swift]::before {
  content: "Swift";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-abap]::before {
  content: "ABAP";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~="language-pl/sql"]::before {
  content: "PL/SQL";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~="language-c++"]::before {
  content: "C++";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~="language-c#"]::before {
  content: "C#";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-sh]::before {
  content: "Shell";
}

.markdown-source-view.mod-cm6 .code-block-flair {
  padding-block: 0;
  color: var(--color-red);
  transition: var(--animation);
}
.markdown-source-view.mod-cm6 .code-block-flair:hover {
  background-color: var(--nav-item-background-hover);
}

.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.comment, .prolog, .doctype, .cdata), .cm-comment) {
  color: var(--code-comment);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.tag, .constant, .symbol, .deleted, .class-name, .maybe-class-name), .cm-tag, .cm-operator) {
  color: var(--code-tag);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.cm-punctuation, .cm-bracket, .cm-hr, .cm-operator) {
  color: var(--code-punctuation);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.boolean, .number), .cm-number) {
  color: var(--code-value);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.selector, .attr-name, .string, .char, .builtin, .inserted), .cm-qualifier, .cm-string:not(.cm-url), .cm-string-2, .cm-meta:not(.cm-hashtag)) {
  color: var(--code-string);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.entity, .parameter, .property, .property-access, .url, .variable), :is(.language-css, .style) .token.string, .cm-def, .cm-number + .cm-variable) {
  color: var(--code-property);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.attr-value, .function, .class-name), .cm-property, .cm-attribute) {
  color: var(--code-function);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.keyword, .constant, .unit, .builtin, .atrule), .cm-keyword, .cm-builtin, .cm-type, .cm-atom) {
  color: var(--code-keyword);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.regex, .important)) {
  color: var(--code-important);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.cm-variable, .cm-variable-2, .cm-variable-3) {
  color: var(--code-normal);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.cm-variable-2, .cm-variable-3) {
  opacity: 0.7;
}

.code-mac-style-header:not(:has(.print)) .markdown-rendered pre:not(.dataview) {
  border: none;
  padding-top: calc(var(--code-size) * var(--line-height-normal) * 1.5);
  padding-bottom: calc(var(--code-size) * var(--line-height-normal) * 0.5) !important;
}
.code-mac-style-header:not(:has(.print)) .markdown-rendered pre:not(.dataview) code[class*=language-]::before {
  color: var(--setting-code-language-color, var(--accent-active));
}
.code-mac-style-header:not(:has(.print)) .markdown-rendered pre:not(.dataview)::after {
  content: "";
  width: 100%;
  height: calc(var(--code-size) * var(--line-height-normal) * 1.1);
  background-color: var(--code-mac-style-header-bg);
  top: 0;
  left: 0;
  position: absolute;
}
.code-mac-style-header:not(:has(.print)) .markdown-rendered pre:not(.dataview)::before {
  content: "";
  width: calc(var(--code-size) - var(--size-2-1));
  height: calc(var(--code-size) - var(--size-2-1));
  position: absolute;
  left: 0.8rem;
  top: calc((var(--code-size) - var(--size-2-1)) * var(--line-height-normal) * 0.6 - var(--code-size) / 3);
  border-radius: 50%;
  z-index: 9;
  background-color: rgba(255, 94, 92, var(--color-opacity));
  box-shadow: calc(var(--size-4-5) * 0.9) 0 0 0 rgba(255, 187, 78, var(--color-opacity)), calc(var(--size-4-5) * 1.8) 0 0 0 rgba(81, 188, 0, var(--color-opacity));
}
.code-mac-style-header:not(:has(.print)) .markdown-rendered pre:not(.dataview) .copy-code-button:hover {
  background-color: var(--accent-inactive);
}

.code-line-number .cm-contentContainer {
  counter-reset: code-line;
}
.code-line-number .cm-contentContainer .cm-line.HyperMD-codeblock {
  padding-left: var(--size-4-12) !important;
}
.code-line-number .cm-contentContainer .cm-line.HyperMD-codeblock:not(.HyperMD-codeblock-begin):not(.HyperMD-codeblock-end)::before {
  counter-increment: code-line;
  content: counter(code-line);
  position: absolute;
  text-align: right;
  width: var(--size-4-8);
  left: 0;
  color: var(--accent-inactive);
}
.code-line-number .cm-contentContainer .cm-line.HyperMD-codeblock:not(.HyperMD-codeblock-begin):not(.HyperMD-codeblock-end).cm-active::before {
  color: var(--accent-active);
}
.code-line-number .cm-contentContainer .cm-line.HyperMD-codeblock-end {
  counter-reset: code-line;
}

.code-preview-bg {
  --code-bg-s: 50%;
  --code-bg-l: 85%;
}
.code-preview-bg .markdown-preview-view .markdown-preview-section div:has(> pre:not([class*=frontmatter])) {
  padding: var(--size-4-4) var(--size-4-8);
  margin-block: var(--size-4-4);
  border-radius: var(--setting-code-bg-radius);
  background-image: var(--setting-code-bg-outer, linear-gradient(-30deg, hsl(calc(var(--accent-h) + 145), var(--code-bg-s), var(--code-bg-l)), hsl(calc(var(--accent-h) + 115), var(--code-bg-s), var(--code-bg-l)), hsl(calc(var(--accent-h) + 90), var(--code-bg-s), var(--code-bg-l)), hsl(calc(var(--accent-h) + 65), var(--code-bg-s), var(--code-bg-l)), hsl(calc(var(--accent-h) + 35), var(--code-bg-s), var(--code-bg-l))));
}
.code-preview-bg .markdown-preview-view .markdown-preview-section pre:not([class*=frontmatter]) {
  --code-background: var(--setting-code-bg, hsl(var(--background-secondary-hsl)));
  border-width: 0;
}

.theme-dark .markdown-preview-view .markdown-preview-section div:has(> pre:not([class*=frontmatter])) {
  --code-bg-s: 20%;
  --code-bg-l: 45%;
}

/* #endregion code */
/* #region embed */
body:is(:not(.css-settings-manager), .embed-enable) .cm-embed-block {
  border-radius: var(--radius-l) !important;
  transition: var(--animation);
}
body:is(:not(.css-settings-manager), .embed-enable) .internal-embed.is-loaded:not(.image-embed) {
  --embed-background: var(--background-primary);
  --embed-max-height: initial;
  transition: var(--animation);
  padding: var(--size-4-1) var(--size-2-1) !important;
}
body:is(:not(.css-settings-manager), .embed-enable) .internal-embed.is-loaded:not(.image-embed) :is(.markdown-embed-link, .file-embed-link) {
  padding: var(--size-2-3);
  border-radius: var(--radius-m);
  transition: var(--animation);
  color: var(--accent-active);
  top: 0.2rem;
  right: 0.2rem;
}
body:is(:not(.css-settings-manager), .embed-enable) .internal-embed.is-loaded:not(.image-embed) :is(.markdown-embed-link, .file-embed-link):hover {
  background-color: var(--nav-item-background-hover);
}
body:is(:not(.css-settings-manager), .embed-enable) .internal-embed.is-loaded:not(.image-embed).mod-empty {
  border: var(--size-2-1) dotted var(--accent-inactive);
}
body:is(:not(.css-settings-manager), .embed-enable) .internal-embed.is-loaded:not(.image-embed) .markdown-embed-title {
  text-align: center;
  line-height: 2.8;
}
body:is(:not(.css-settings-manager), .embed-enable) .internal-embed.is-loaded:not(.image-embed):is(.markdown-embed, .file-embed) {
  border-radius: var(--radius-xl);
  transition: var(--animation);
  margin-block: var(--size-4-1) !important;
  padding: 0;
  border: var(--block-outline-width) solid var(--accent-inactive);
}
body:is(:not(.css-settings-manager), .embed-enable) .internal-embed.is-loaded:not(.image-embed):is(.markdown-embed, .file-embed) .markdown-preview-view {
  padding: calc(var(--font-text-size) * 1.2) calc(var(--font-text-size) * 1.5);
  position: initial;
}
body:is(:not(.css-settings-manager), .embed-enable) .internal-embed.is-loaded:not(.image-embed):is(.markdown-embed, .file-embed) .markdown-preview-view .markdown-preview-section {
  min-height: fit-content !important;
}
body:is(:not(.css-settings-manager), .embed-enable) .internal-embed.is-loaded:not(.image-embed):is(.markdown-embed, .file-embed):hover {
  border-color: var(--accent-active);
}
body:is(:not(.css-settings-manager), .embed-enable) .internal-embed.is-loaded:not(.image-embed):is(.markdown-embed, .file-embed) .frontmatter + div {
  display: none;
}
body:is(:not(.css-settings-manager), .embed-enable) .internal-embed.is-loaded:not(.image-embed) svg.link {
  transform: rotate(90deg);
}
body:is(:not(.css-settings-manager), .embed-enable).scrollbar-gutter-reserve.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]) .markdown-embed-heading .markdown-preview-section > div:nth-child(2) {
  right: var(--size-4-3);
}
body:is(:not(.css-settings-manager), .embed-enable).embed-title-right-top .internal-embed.is-loaded:not([alt="#"]) .obsidian-metatable {
  display: none;
}
body:is(:not(.css-settings-manager), .embed-enable).embed-title-right-top .internal-embed.is-loaded:not([alt="#"]):not([src*="#^"]) .embed-title:empty + .markdown-embed-content .markdown-preview-section > div:nth-child(3) {
  position: absolute;
  right: var(--size-4-9);
  top: var(--size-4-2);
  z-index: 99;
  opacity: 0;
  transition: var(--animation);
}
body:is(:not(.css-settings-manager), .embed-enable).embed-title-right-top .internal-embed.is-loaded:not([alt="#"]):not([src*="#^"]) .embed-title:empty + .markdown-embed-content .markdown-preview-section > div:nth-child(3) * {
  font-size: 1rem;
  cursor: pointer;
  line-height: 1rem;
}
body:is(:not(.css-settings-manager), .embed-enable).embed-title-right-top .internal-embed.is-loaded:not([alt="#"]):not([src*="#^"]) .embed-title:empty + .markdown-embed-content .markdown-preview-section > div:nth-child(3) *::after {
  content: none;
}
body:is(:not(.css-settings-manager), .embed-enable).embed-title-right-top .internal-embed.is-loaded:not([alt="#"]) .markdown-embed-title {
  opacity: 0;
  position: absolute;
  z-index: 99;
  width: fit-content;
  right: 28px;
  left: unset;
  font-size: 1rem;
  top: var(--size-4-1);
  line-height: 28px;
  height: 28px;
  padding: 0 var(--size-4-2);
  border-radius: var(--radius-m);
  transition: var(--animation);
  cursor: pointer;
}
body:is(:not(.css-settings-manager), .embed-enable).embed-title-right-top .internal-embed.is-loaded:not([alt="#"]):hover .embed-title:empty + .markdown-embed-content .markdown-preview-section > div:nth-child(3) {
  opacity: 1;
}
body:is(:not(.css-settings-manager), .embed-enable).embed-title-right-top .internal-embed.is-loaded:not([alt="#"]):hover :is(.markdown-embed-title, .markdown-embed-link, .file-embed-link:hover svg) {
  opacity: 1;
  color: var(--text-normal);
}
body:is(:not(.css-settings-manager), .embed-enable).embed-title-right-top .internal-embed.is-loaded:not([alt="#"]) :is(.markdown-embed, .file-embed) .markdown-preview-view {
  padding: calc(var(--font-text-size) * 1.5);
  padding-bottom: calc(var(--font-text-size) * 1.2);
}

/* #endregion embed */
/* #region hr */
.markdown-rendered hr {
  margin-block-start: 2.4rem !important;
  margin-block-end: 2.4rem !important;
}

body.hr-enable :is(.markdown-source-view.mod-cm6, .markdown-rendered) hr {
  overflow: initial;
  border: none;
  position: relative;
  height: var(--size-4-1);
  background-image: linear-gradient(to right, transparent 0%, hsla(var(--color-accent-hsl), 40%) 16%, hsla(var(--color-accent-hsl), 90%) 44%, transparent 44%, transparent 56%, hsla(var(--color-accent-hsl), 90%) 56%, hsla(var(--color-accent-hsl), 40%) 84%, transparent 100%);
}
body.hr-enable :is(.markdown-source-view.mod-cm6, .markdown-rendered) hr::after {
  content: var(--setting-hr-icon, "⭐");
  display: inline-block;
  font-family: var(--font-monospace);
  font-size: var(--font-ui-small);
  position: absolute;
  text-align: center;
  width: var(--input-height);
  height: var(--input-height);
  line-height: var(--input-height);
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  color: var(--accent-active);
  background: var(--md-container-bg);
  border-radius: 50%;
}

/* #endregion hr */
/* #region link */
:is(body, .print .markdown-rendered) {
  --link-color-rgb: var(--setting-link-internal-color, var(--color-blue-rgb));
  --link-external-color-rgb: var(--setting-link-external-color, var(--color-orange-rgb));
  --link-color: rgba(var(--link-color-rgb), var(--color-opacity));
  --link-color-hover: var(--link-color);
  --link-color-underline: var(--setting-link-internal-color-underline, var(--link-color));
  --link-external-color: rgba(var(--link-external-color-rgb), var(--color-opacity));
  --link-external-color-hover: var(--link-external-color);
  --link-external-color-underline: var(--setting-link-external-color-underline, var(--link-external-color));
  --link-unresolved-decoration-color: var(--link-unresolve-color);
  --link-footnote: var(--color-purple);
  --link-text-size: var(--font-text-size);
}

.cm-hmd-footnote .cm-underline {
  color: var(--link-footnote) !important;
  font-size: var(--footnote-size);
  text-decoration-color: var(--link-footnote) !important;
  pointer-events: none;
}

.is-unresolved {
  transition: var(--animation);
}
.is-unresolved:hover {
  --link-color-hover: rgba(var(--link-color-rgb), 0.6) !important;
}

body .cm-s-obsidian .cm-url {
  text-decoration: none;
}

.cm-s-obsidian .cm-formatting-link-string + span.cm-url {
  color: var(--link-color);
}

body span:is(.cm-formatting-link, .cm-formatting-link-string) {
  color: rgba(var(--color-green-rgb), 0.6) !important;
}

body:not(.link-hover-expand) :is(a.external-link, .cm-link .cm-underline, .cm-url:not(.cm-string) .cm-underline) {
  transition: var(--animation);
  color: rgba(var(--link-external-color-rgb), var(--color-opacity));
  border-radius: var(--radius-s);
  text-underline-offset: var(--size-2-1);
  text-decoration-color: var(--link-external-color-underline);
}
body:not(.link-hover-expand) :is(a.external-link, .cm-link .cm-underline, .cm-url:not(.cm-string) .cm-underline):hover {
  background-color: rgba(var(--link-external-color-rgb), 0.15);
}
body:not(.link-hover-expand) :is(a.external-link, .cm-link .cm-underline, .cm-url:not(.cm-string) .cm-underline):active {
  background-color: rgba(var(--link-external-color-rgb), 0.35);
}
body:not(.link-hover-expand) :is(a.internal-link:not(.is-unresolved), .cm-hmd-internal-link > .cm-underline) {
  transition: var(--animation);
  color: rgba(var(--link-color-rgb), var(--color-opacity));
  border-radius: var(--radius-s);
  text-underline-offset: var(--size-2-1);
  text-decoration-color: var(--link-color-underline);
}
body:not(.link-hover-expand) :is(a.internal-link:not(.is-unresolved), .cm-hmd-internal-link > .cm-underline):hover {
  background-color: rgba(var(--link-color-rgb), 0.15);
}
body:not(.link-hover-expand) :is(a.internal-link:not(.is-unresolved), .cm-hmd-internal-link > .cm-underline):active {
  background-color: rgba(var(--link-color-rgb), 0.35);
}

span:is(.cm-url, .cm-link, .cm-hmd-internal-link, .cm-formatting-link.cm-url):hover {
  text-decoration: none;
}

body.link-hover-expand .cm-url {
  --link-external-decoration: none;
  --link-external-decoration-hover: none;
}
body.link-hover-expand .cm-link {
  --link-external-decoration-hover: none;
}
body.link-hover-expand .cm-hmd-internal-link > .cm-underline {
  --link-decoration-hover: none;
}
body.link-hover-expand :is(a.external-link:not(.is-unresolved), :is(.cm-link, .cm-url) > .cm-underline) {
  font-size: var(--link-text-size);
  box-shadow: inset 0 -0.1em 0 var(--link-external-color-underline);
  text-decoration: none !important;
  transition: var(--animation);
  color: var(--link-external-color) !important;
}
body.link-hover-expand :is(a.external-link:not(.is-unresolved), :is(.cm-link, .cm-url) > .cm-underline):hover, body.link-hover-expand :is(a.external-link:not(.is-unresolved), :is(.cm-link, .cm-url) > .cm-underline):focus {
  box-shadow: inset 0 -1.3em 0 var(--link-external-color-underline);
  --link-color: var(--setting-link-internal-color-hover, var(--text-on-accent));
  --link-external-color: var(--setting-link-external-color-hover, var(--text-on-accent));
}
body.link-hover-expand :is(a.internal-link:not(.is-unresolved), .cm-hmd-internal-link > .cm-underline) {
  font-size: var(--link-text-size);
  box-shadow: inset 0 -0.1em 0 var(--link-color-underline);
  text-decoration: none !important;
  transition: var(--animation);
  color: var(--link-color) !important;
}
body.link-hover-expand :is(a.internal-link:not(.is-unresolved), .cm-hmd-internal-link > .cm-underline):hover, body.link-hover-expand :is(a.internal-link:not(.is-unresolved), .cm-hmd-internal-link > .cm-underline):focus {
  box-shadow: inset 0 -1.3em 0 var(--link-color-underline);
  --link-color: var(--setting-link-internal-color-hover, var(--text-on-accent));
  --link-external-color: var(--setting-link-external-color-hover, var(--text-on-accent));
}
body.link-hover-expand :is(.cm-hmd-internal-link, .cm-link) {
  transition: color var(--animation);
}

body.link-icon :is(:is(.markdown-source-view, .markdown-preview-view) a.internal-link:not(.is-unresolved), .cm-hmd-internal-link > .cm-underline)::before {
  content: "";
  display: inline-block;
  transition: var(--animation);
  transform: translateY(var(--size-2-1));
  width: calc(var(--link-text-size) - var(--size-2-1));
  height: calc(var(--link-text-size) - var(--size-2-1));
  margin-inline: var(--size-2-1);
  background-color: var(--link-color);
}
body.link-icon:not(.link-click-to-edit-in-live-preview) :is(:is(.markdown-source-view, .markdown-preview-view) a.external-link:not(.is-resolved), :is(.cm-link:not(.cm-hmd-footnote, .cm-escape), .cm-url) > .cm-underline):not(.cm-escape + .cm-link .cm-underline)::before {
  content: "";
  display: inline-block;
  transition: var(--animation);
  width: calc(var(--link-text-size) - var(--size-4-1));
  height: calc(var(--link-text-size) - var(--size-4-1));
  margin-left: var(--size-2-1);
  margin-right: var(--size-2-1);
  background-color: var(--link-external-color);
}
body.link-icon:not(.link-click-to-edit-in-live-preview) a.external-link {
  background-image: none;
  background-size: unset;
  padding-right: 0;
}
body.link-icon:not(.link-click-to-edit-in-live-preview) span.external-link {
  display: none;
}

body.link-click-to-edit-in-live-preview :is(.cm-url, .cm-link, .cm-hmd-internal-link) .cm-underline {
  pointer-events: none;
}

/* #endregion link */
/* #region list */
body:is(:not(.css-settings-manager), .list-enable) {
  --list-marker-color: var(--setting-list-marker, var(--accent-active));
  --list-marker-color-alt: var(--setting-list-marker-alt, var(--list-marker-color));
  --list-marker-color-alt-render: transparent;
  --checkbox-marker-color: var(--text-on-accent);
  --checkbox-border-color: var(--setting-list-checkbox-color, var(--accent-inactive));
  --checkbox-border-color-hover: var(--setting-list-checkbox-color-hover, var(--accent-active));
  --list-bullet-size: calc(var(--font-text-size) / 3 + var(--size-2-1));
}
body:is(:not(.css-settings-manager), .list-enable) .cm-formatting-list {
  padding-inline-start: var(--size-4-1);
}
body:is(:not(.css-settings-manager), .list-enable) .cm-formatting-list,
body:is(:not(.css-settings-manager), .list-enable) li::marker {
  font-family: var(--font-monospace);
}
body:is(:not(.css-settings-manager), .list-enable) .HyperMD-list-line-nobullet > .cm-hmd-list-indent {
  margin-inline-end: var(--size-4-1);
}
body:is(:not(.css-settings-manager), .list-enable) :is(.markdown-source-view, .markdown-preview-view) .task-list-item-checkbox {
  border-width: var(--size-2-1);
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-source-view .task-list-item-checkbox {
  margin-inline-start: 0.3rem;
  margin-inline-end: var(--size-4-1);
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-preview-view .task-list-item-checkbox {
  margin-inline-start: calc(var(--checkbox-size) * -1.3);
}
body:is(:not(.css-settings-manager), .list-enable) .collapse-indicator {
  --cursor: pointer;
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-source-view.mod-cm6 {
  --list-bullet-end-padding: 1.6rem;
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-source-view.mod-cm6 .cm-indent::before {
  transform: translateX(-0.4rem);
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-source-view.mod-cm6 .collapse-indicator {
  transform: translateX(-0.3rem) !important;
}
body:is(:not(.css-settings-manager), .list-enable) li .list-collapse-indicator {
  margin-inline-start: 0 !important;
  padding-inline-end: 1.2rem !important;
  transform: translateX(-2.25rem);
}
body:is(:not(.css-settings-manager), .list-enable) ol li .list-collapse-indicator {
  transform: translateX(-3rem);
}
body:is(:not(.css-settings-manager), .list-enable) .contains-task-list .list-collapse-indicator {
  transform: translateX(-2.4rem);
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-rendered ul > li {
  margin-inline-start: calc(var(--font-text-size) * 2 + 0.25rem);
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-rendered div > ul:is(.has-list-bullet, .contains-task-list) {
  margin-inline-start: calc(var(--size-4-3) * -1);
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-rendered ol {
  padding-left: calc(var(--font-text-size) - 0.1rem);
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-rendered ol > li {
  margin-inline-start: calc(var(--font-text-size) + 0.25rem);
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-rendered ol li > ol {
  padding-left: calc(var(--font-text-size));
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-rendered ol li > ol::before {
  left: calc(var(--font-text-size) * -1.5);
}
body:is(:not(.css-settings-manager), .list-enable) :is(.markdown-rendered, div) > ul {
  --list-indent: 0;
}
body:is(:not(.css-settings-manager), .list-enable) .HyperMD-list-line-2 .list-bullet {
  --list-marker-color: transparent;
  --list-bullet-border: var(--setting-list-marker, var(--accent-active)) var(--size-2-1) solid;
  --list-bullet-size: calc(calc(var(--font-text-size) / 3 + var(--size-2-1)) - var(--size-2-1));
}
body:is(:not(.css-settings-manager), .list-enable) .HyperMD-list-line-3 .list-bullet {
  --list-bullet-radius: 0;
  --list-marker-color: var(--list-marker-color-alt);
  --list-bullet-size: calc(calc(var(--font-text-size) / 3 + var(--size-2-1)) * 0.95);
  transform: rotate(45deg);
}
body:is(:not(.css-settings-manager), .list-enable) .HyperMD-list-line-4 .list-bullet {
  --list-marker-color: transparent;
  --list-bullet-border: var(--list-marker-color-alt) var(--size-2-1) solid;
  --list-bullet-size: calc(calc(var(--font-text-size) / 3 + var(--size-2-1)) * 0.9 - var(--size-2-1));
  --list-bullet-radius: 0;
  transform: rotate(45deg);
}
body:is(:not(.css-settings-manager), .list-enable) ul > li > ul > li {
  --list-marker-color: var(--list-marker-color-alt-render);
  --list-bullet-border: var(--setting-list-marker, var(--accent-active)) var(--size-2-1) solid;
  --list-bullet-size: calc(calc(var(--font-text-size) / 3 + var(--size-2-1)) - var(--size-2-1));
}
body:is(:not(.css-settings-manager), .list-enable) ul > li > ul > li > ul > li {
  --list-bullet-size: calc(calc(var(--font-text-size) / 3 + var(--size-2-1)) * 0.5);
  --list-bullet-radius: 0;
  --list-marker-color: var(--list-marker-color-alt);
  --deg: 45deg;
}
body:is(:not(.css-settings-manager), .list-enable) ul > li > ul > li > ul > li .list-bullet {
  transform: rotate(var(--deg));
}
body:is(:not(.css-settings-manager), .list-enable) ul > li > ul > li > ul > li > ul > li {
  --list-bullet-size: calc(calc(var(--font-text-size) / 3 + var(--size-2-1)) * 0.9 - var(--size-2-1));
  --list-marker-color: var(--list-marker-color-alt-render);
}
body:is(:not(.css-settings-manager), .list-enable) ul > li > ul > li > ul > li > ul > li ul > li {
  --list-bullet-radius: var(--radius-s);
  --list-marker-color: var(--setting-list-marker, var(--accent-active));
}
body:is(:not(.css-settings-manager), .list-enable).list-checkbox-line {
  --checklist-done-decoration: none;
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-source-view .callout ul > li > ul > li {
  --list-marker-color: var(--setting-list-marker, var(--accent-active));
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-source-view .callout .task-list-item {
  margin-inline-start: calc(var(--font-text-size) / 1.5);
}

body.list-enable .print {
  --list-marker-color-alt-render: var(--list-marker-color-alt);
}

/* #endregion list */
/* #region checkbox */
/* https://github.com/Akifyss/obsidian-border/blob/main/theme.css#L7738C1-L7953C2 */
.list-checkbox-alternative input[data-task="<"]:checked,
.list-checkbox-alternative li[data-task="<"] > input:checked,
.list-checkbox-alternative li[data-task="<"] > p > input:checked,
.list-checkbox-alternative input[data-task=">"]:checked,
.list-checkbox-alternative li[data-task=">"] > input:checked,
.list-checkbox-alternative li[data-task=">"] > p > input:checked,
.list-checkbox-alternative input[data-task=d]:checked,
.list-checkbox-alternative li[data-task=d] > input:checked,
.list-checkbox-alternative li[data-task=d] > p > input:checked,
.list-checkbox-alternative input[data-task=u]:checked,
.list-checkbox-alternative li[data-task=u] > input:checked,
.list-checkbox-alternative li[data-task=u] > p > input:checked,
.list-checkbox-alternative input[data-task=S]:checked,
.list-checkbox-alternative li[data-task=S] > input:checked,
.list-checkbox-alternative li[data-task=S] > p > input:checked,
.list-checkbox-alternative input[data-task=“]:checked,
.list-checkbox-alternative li[data-task=“] > input:checked,
.list-checkbox-alternative li[data-task=“] > p > input:checked,
.list-checkbox-alternative input[data-task=c]:checked,
.list-checkbox-alternative li[data-task=c] > input:checked,
.list-checkbox-alternative li[data-task=c] > p > input:checked,
.list-checkbox-alternative input[data-task=p]:checked,
.list-checkbox-alternative li[data-task=p] > input:checked,
.list-checkbox-alternative li[data-task=p] > p > input:checked,
.list-checkbox-alternative input[data-task=n]:checked,
.list-checkbox-alternative li[data-task=n] > input:checked,
.list-checkbox-alternative li[data-task=n] > p > input:checked,
.list-checkbox-alternative input[data-task=b]:checked,
.list-checkbox-alternative li[data-task=b] > input:checked,
.list-checkbox-alternative li[data-task=b] > p > input:checked,
.list-checkbox-alternative input[data-task="-"]:checked,
.list-checkbox-alternative li[data-task="-"] > input:checked,
.list-checkbox-alternative li[data-task="-"] > p > input:checked,
.list-checkbox-alternative input[data-task=l]:checked,
.list-checkbox-alternative li[data-task=l] > input:checked,
.list-checkbox-alternative li[data-task=l] > p > input:checked,
.list-checkbox-alternative input[data-task=I]:checked,
.list-checkbox-alternative li[data-task=I] > input:checked,
.list-checkbox-alternative li[data-task=I] > p > input:checked,
.list-checkbox-alternative input[data-task="/"]:checked,
.list-checkbox-alternative li[data-task="/"] > input:checked,
.list-checkbox-alternative li[data-task="/"] > p > input:checked,
.list-checkbox-alternative input[data-task=i]:checked,
.list-checkbox-alternative li[data-task=i] > input:checked,
.list-checkbox-alternative li[data-task=i] > p > input:checked,
.list-checkbox-alternative input[data-task="*"]:checked,
.list-checkbox-alternative li[data-task="*"] > input:checked,
.list-checkbox-alternative li[data-task="*"] > p > input:checked,
.list-checkbox-alternative input[data-task="?"]:checked,
.list-checkbox-alternative li[data-task="?"] > input:checked,
.list-checkbox-alternative li[data-task="?"] > p > input:checked,
.list-checkbox-alternative input[data-task="!"]:checked,
.list-checkbox-alternative li[data-task="!"] > input:checked,
.list-checkbox-alternative li[data-task="!"] > p > input:checked {
  --checkbox-marker-color: transparent;
  border: none;
  background-image: none;
  background-color: currentColor;
  -webkit-mask-size: var(--checkbox-icon);
  -webkit-mask-position: 50% 50%;
}
.list-checkbox-alternative input[data-task="!"]:checked,
.list-checkbox-alternative li[data-task="!"] > input:checked,
.list-checkbox-alternative li[data-task="!"] > p > input:checked {
  --checkbox-color-hover: var(--color-orange);
  color: var(--color-orange);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M8 16c4.42 0 8-3.58 8-8s-3.58-8-8-8-8 3.58-8 8 3.58 8 8 8zM6.07 3.55c-.08.29-.09.6-.03.9l.86 4.56c.05.28.2.52.42.7.22.18.49.28.77.28s.55-.1.77-.28c.22-.18.36-.43.42-.7l.86-4.56c.06-.3.04-.61-.03-.9-.08-.29-.22-.57-.41-.8A2.094 2.094 0 0 0 8.11 2c-.3 0-.61.07-.88.2-.28.13-.52.32-.71.55-.19.23-.34.51-.41.8zm3.07 10.01a1.499 1.499 0 1 0-2.12-2.12 1.499 1.499 0 1 0 2.12 2.12z" fill-rule="evenodd" /></svg>');
}
.list-checkbox-alternative input[data-task="?"]:checked,
.list-checkbox-alternative li[data-task="?"] > input:checked,
.list-checkbox-alternative li[data-task="?"] > p > input:checked {
  --checkbox-color-hover: var(--color-pink);
  color: var(--color-pink);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M8 16c4.42 0 8-3.58 8-8s-3.58-8-8-8-8 3.58-8 8 3.58 8 8 8zM4.84 3.66c-.32.48-.09 1.14.44 1.37.23.1.49.1.72 0 .17-.07.31-.18.41-.34.31-.49.82-.89 1.6-.89 1.72 0 2.06 1.61 1.45 2.47-.36.51-.87.91-1.33 1.37-.28.28-.55.58-.74.93-.19.33-.27.69-.31 1.03-.04.31.08.59.28.79.18.18.43.29.71.29.49 0 .89-.38.95-.87.04-.3.1-.45.2-.63.41-.76 1.18-1.12 1.98-2.3.72-1.07.45-2.5-.02-3.27C10.63 2.72 9.56 2 7.99 2c-1.43 0-2.51.7-3.15 1.66zM8 14.67c.73 0 1.33-.6 1.33-1.33s-.6-1.33-1.33-1.33-1.33.6-1.33 1.33.6 1.33 1.33 1.33z" fill-rule="evenodd" /></svg>');
}
.list-checkbox-alternative input[data-task="*"]:checked,
.list-checkbox-alternative li[data-task="*"] > input:checked,
.list-checkbox-alternative li[data-task="*"] > p > input:checked {
  --checkbox-color-hover: var(--color-yellow);
  color: var(--color-yellow);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M8.91.58C8.83.41 8.7.26 8.54.16 8.38.05 8.19 0 8 0s-.38.05-.54.16c-.16.1-.29.25-.37.42L5.16 4.7l-4.31.66c-.18.03-.35.1-.49.22s-.25.27-.3.45a.99.99 0 0 0 .23 1.02l3.15 3.23-.75 4.57c-.03.19 0 .38.06.55.07.17.19.32.35.43.15.11.33.17.52.18.19 0 .37-.03.54-.12L8 13.76l3.84 2.13c.16.09.35.13.54.12.19-.01.37-.07.52-.18.15-.11.27-.26.35-.43.07-.17.09-.36.06-.55l-.75-4.57 3.15-3.23a.99.99 0 0 0 .23-1.02.99.99 0 0 0-.31-.45.914.914 0 0 0-.49-.22l-4.31-.66L8.91.58z" /></svg>');
}
.list-checkbox-alternative input[data-task=i]:checked,
.list-checkbox-alternative li[data-task=i] > input:checked,
.list-checkbox-alternative li[data-task=i] > p > input:checked {
  --checkbox-color-hover: var(--color-cyan);
  color: var(--color-cyan);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><defs><style>.cls-1{fill:none}</style></defs><path class="cls-1" d="M0 0h16v16H0z"/><path class="cls-1" d="M0 0h16v16H0z"/><path d="M10.67 13v-1.67c0-.1-.03-.18-.09-.24s-.14-.09-.24-.09h-1V5.67c0-.1-.03-.18-.09-.24s-.14-.09-.24-.09H5.68c-.1 0-.18.03-.24.09s-.09.14-.09.24v1.67c0 .1.03.18.09.24s.14.09.24.09h1V11h-1c-.1 0-.18.03-.24.09s-.09.14-.09.24V13c0 .1.03.18.09.24s.14.09.24.09h4.67c.1 0 .18-.03.24-.09s.09-.14.09-.24zM9.34 3.67V2c0-.1-.03-.18-.09-.24s-.14-.09-.24-.09h-2c-.1 0-.18.03-.24.09s-.09.14-.09.24v1.67c0 .1.03.18.09.24s.14.09.24.09h2c.1 0 .18-.03.24-.09s.09-.14.09-.24zM16.01 8c0 1.45-.36 2.79-1.07 4.02a7.962 7.962 0 0 1-2.91 2.91C10.8 15.65 9.47 16 8.01 16s-2.79-.36-4.02-1.07a7.962 7.962 0 0 1-2.91-2.91C.36 10.79.01 9.46.01 8s.35-2.79 1.06-4.02c.72-1.23 1.69-2.2 2.91-2.91C5.21.35 6.54 0 8 0s2.79.36 4.02 1.07c1.23.72 2.2 1.69 2.91 2.91C15.65 5.21 16 6.54 16 8z"/></svg>');
}
.list-checkbox-alternative input[data-task="/"]:checked,
.list-checkbox-alternative li[data-task="/"] > input:checked,
.list-checkbox-alternative li[data-task="/"] > p > input:checked {
  --checkbox-color-hover: var(--color-yellow);
  color: var(--color-yellow);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><defs><style>.cls-1{fill:none;}.cls-2{fill-rule:evenodd;}</style></defs><rect class="cls-1" width="16" height="16"/><path class="cls-2" d="M13.66,13.66c-1.45,1.45-3.45,2.34-5.66,2.34C3.58,16,0,12.42,0,8S3.58,0,8,0c2.17,0,4.15,.87,5.59,2.28,.06,.06,.12,.12,.18,.18,1.37,1.43,2.22,3.36,2.23,5.5,0,.03,0,.07,0,.1-.01,2.19-.91,4.17-2.34,5.6Zm-1.41-1.41c-1.09,1.09-2.59,1.76-4.24,1.76-3.31,0-6-2.69-6-6S4.69,2,8,2v6l4.24,4.24Z"/></svg>');
}
.list-checkbox-alternative input[data-task=I]:checked,
.list-checkbox-alternative li[data-task=I] > input:checked,
.list-checkbox-alternative li[data-task=I] > p > input:checked {
  --checkbox-color-hover: var(--color-orange);
  color: var(--color-orange);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><defs><style>.cls-1{fill:none}</style></defs><path class="cls-1" d="M0 0h16v16H0z"/><path class="cls-1" d="M0 0h16v16H0z"/><path d="M9 1c0-.27-.11-.52-.29-.71C8.52.1 8.27 0 8 0s-.52.11-.71.29A.99.99 0 0 0 7 1v1c0 .27.11.52.29.71.19.19.44.29.71.29s.52-.11.71-.29A.99.99 0 0 0 9 2V1zm4.66 2.76c.18-.19.28-.44.28-.7 0-.26-.11-.51-.29-.7s-.44-.29-.7-.29c-.26 0-.51.1-.7.28l-.71.71c-.18.19-.28.44-.28.7 0 .26.11.51.29.7s.44.29.7.29c.26 0 .51-.1.7-.28l.71-.71zM16 8c0 .27-.11.52-.29.71A.99.99 0 0 1 15 9h-1c-.27 0-.52-.11-.71-.29C13.1 8.52 13 8.27 13 8s.11-.52.29-.71A.99.99 0 0 1 14 7h1c.27 0 .52.11.71.29.19.19.29.44.29.71zM3.05 4.46c.09.1.2.17.32.22.12.05.25.08.39.08.13 0 .26-.02.39-.07a1.004 1.004 0 0 0 .55-.55c.05-.12.08-.25.07-.39 0-.13-.03-.26-.08-.39-.05-.12-.13-.23-.22-.32l-.71-.71c-.19-.18-.44-.28-.7-.28-.26 0-.51.11-.7.29s-.29.44-.29.7c0 .26.1.51.28.7l.71.71zM3 8c0 .27-.11.52-.29.71A.99.99 0 0 1 2 9H1c-.27 0-.52-.11-.71-.29C.1 8.52 0 8.27 0 8s.11-.52.29-.71A.99.99 0 0 1 1 7h1c.27 0 .52.11.71.29.19.19.29.44.29.71zm3 6v-1h4v1c0 .53-.21 1.04-.59 1.41a1.983 1.983 0 0 1-2.82 0C6.21 15.03 6 14.53 6 14zm4-2c.02-.34.21-.65.48-.86.65-.51 1.13-1.22 1.36-2.02.23-.8.21-1.65-.06-2.43-.27-.79-.78-1.47-1.46-1.95C9.64 4.26 8.83 4 8 4s-1.64.26-2.32.74C5 5.22 4.49 5.9 4.22 6.69s-.29 1.64-.06 2.43c.23.8.71 1.5 1.36 2.02.27.21.46.52.48.86h4z"/></svg>');
}
.list-checkbox-alternative input[data-task=l]:checked,
.list-checkbox-alternative li[data-task=l] > input:checked,
.list-checkbox-alternative li[data-task=l] > p > input:checked {
  --checkbox-color-hover: var(--color-red);
  color: var(--color-red);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M8 .12A6.176 6.176 0 0 0 1.82 6.3a6.144 6.144 0 0 0 1.45 3.96l4.74 5.6 4.75-5.6.19-.25A6.144 6.144 0 0 0 14.2 6.3c0-1.64-.65-3.21-1.81-4.37A6.345 6.345 0 0 0 8 .12zm0 8.44c-.45 0-.88-.13-1.25-.38s-.66-.6-.83-1.01c-.17-.41-.21-.86-.13-1.3.09-.44.3-.84.62-1.15.31-.31.72-.53 1.15-.62.44-.09.89-.04 1.3.13.41.17.76.46 1.01.83a2.24 2.24 0 0 1-.28 2.84c-.42.42-.99.66-1.59.66z" /></svg>');
}
.list-checkbox-alternative input[data-task="-"]:checked,
.list-checkbox-alternative li[data-task="-"] > input:checked,
.list-checkbox-alternative li[data-task="-"] > p > input:checked {
  --checkbox-color-hover: var(--text-faint);
  color: var(--text-faint);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z"/><path fill="none" d="M0 0h16v16H0z"/><path d="M8 16c4.42 0 8-3.58 8-8s-3.58-8-8-8-8 3.58-8 8 3.58 8 8 8zM3.5 7c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1h-9z" fill-rule="evenodd"/></svg>');
}
.list-checkbox-alternative body:not(.tasks) .markdown-preview-view ul li[data-task="-"].task-list-item.is-checked,
.list-checkbox-alternative body:not(.tasks) .markdown-source-view.mod-cm6 .HyperMD-task-line[data-task]:is([data-task="-"]),
.list-checkbox-alternative body:not(.tasks) li[data-task="-"].task-list-item.is-checked {
  color: var(--text-faint);
  text-decoration: line-through solid var(--text-faint) 1px;
}
.list-checkbox-alternative input[data-task=b]:checked,
.list-checkbox-alternative li[data-task=b] > input:checked,
.list-checkbox-alternative li[data-task=b] > p > input:checked {
  --checkbox-color-hover: var(--color-blue);
  color: var(--color-blue);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M4.25.5c-.6 0-1.17.24-1.59.66-.42.42-.66.99-.66 1.59V14.1c0 .2.05.39.15.56.1.17.24.31.41.41.17.1.36.15.56.15.2 0 .39-.05.56-.15l3.94-2.25c.11-.06.24-.1.37-.1s.26.03.37.1l3.95 2.25c.17.1.36.15.56.15.2 0 .39-.05.56-.15.17-.1.31-.24.41-.41s.15-.36.15-.56V2.75c0-.6-.24-1.17-.66-1.59-.42-.42-.99-.66-1.59-.66H4.25z" fill-rule="evenodd" /></svg>');
}
.list-checkbox-alternative input[data-task=n]:checked,
.list-checkbox-alternative li[data-task=n] > input:checked,
.list-checkbox-alternative li[data-task=n] > p > input:checked {
  --checkbox-color-hover: var(--color-cyan);
  color: var(--color-cyan);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M2.75 14.75c-.41 0-.77-.15-1.06-.44-.29-.29-.44-.65-.44-1.06V2.75c0-.41.15-.77.44-1.06.29-.29.65-.44 1.06-.44h10.5c.41 0 .77.15 1.06.44.29.29.44.65.44 1.06v7.5l-4.5 4.5h-7.5zm4.5-5.25c.21 0 .39-.07.53-.22.14-.14.22-.32.22-.53s-.07-.39-.22-.53A.732.732 0 0 0 7.25 8H5c-.21 0-.39.07-.53.22-.14.14-.22.32-.22.53s.07.39.22.53c.14.14.32.22.53.22h2.25zm3.75-3c.21 0 .39-.07.53-.22.14-.14.22-.32.22-.53s-.07-.39-.22-.53A.732.732 0 0 0 11 5H5c-.21 0-.39.07-.53.22-.14.14-.22.32-.22.53s.07.39.22.53.32.22.53.22h6zm-1.5 6.75l3.75-3.75h-3c-.21 0-.39.07-.53.22s-.22.32-.22.53v3z" /></svg>');
}
.list-checkbox-alternative input[data-task=p]:checked,
.list-checkbox-alternative li[data-task=p] > input:checked,
.list-checkbox-alternative li[data-task=p] > p > input:checked {
  --checkbox-color-hover: var(--color-green);
  color: var(--color-green);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M0 16h16V0H0v16z" fill="none" /><path d="M3.33 15h-.72c-.33 0-.66-.13-.9-.35-.25-.23-.4-.54-.43-.87L.73 7.11c-.02-.18 0-.37.07-.54.06-.18.16-.34.28-.47.13-.14.28-.25.45-.32.17-.07.35-.11.54-.11h1.27A1.333 1.333 0 0 1 4.67 7v6.67A1.333 1.333 0 0 1 3.34 15zM15.4 7.69l-1.79 6.34c-.08.28-.25.53-.48.7-.23.17-.52.27-.81.27H6.67a1.333 1.333 0 0 1-1.33-1.33V7.13c0-.53.32-1.02.81-1.25.79-.37 1.38-.82 1.62-1.22.36-.6.53-1.78.57-2.65 0-.06 0-.12.01-.18.06-.41.34-.72.73-.8.07-.01.14-.02.21-.02.8 0 1.73.83 2.12 1.48.29.48.41 1.09.36 1.84-.03.55-.18 1.05-.33 1.55L11.4 6h2.72c.21 0 .41.05.6.14.18.09.34.23.47.39.12.17.21.35.24.55.04.2.03.41-.03.61zM9 1.94z" /></svg>');
}
.list-checkbox-alternative input[data-task=c]:checked,
.list-checkbox-alternative li[data-task=c] > input:checked,
.list-checkbox-alternative li[data-task=c] > p > input:checked {
  --checkbox-color-hover: var(--color-red);
  color: var(--color-red);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M0 0h16v16H0V0z" fill="none" /><path d="M3.33 1h-.72c-.33 0-.66.13-.9.35-.25.23-.4.54-.43.87L.72 8.89c-.02.18 0 .37.07.54.06.18.16.34.28.47.13.14.28.25.45.32.17.07.35.11.54.11h1.27A1.333 1.333 0 0 0 4.66 9V2.33A1.333 1.333 0 0 0 3.33 1zM15.4 8.31l-1.79-6.34c-.08-.28-.25-.53-.48-.7-.23-.17-.52-.27-.81-.27H6.67a1.333 1.333 0 0 0-1.33 1.33v6.54c0 .53.32 1.02.81 1.25.79.37 1.38.82 1.62 1.22.36.6.53 1.78.57 2.65 0 .06 0 .12.01.18.06.41.34.72.73.8.07.01.14.02.21.02.8 0 1.73-.83 2.12-1.48.29-.48.41-1.09.36-1.84-.03-.55-.18-1.05-.33-1.55L11.4 10h2.72c.21 0 .41-.05.6-.14.18-.09.34-.23.47-.39.12-.17.21-.35.24-.55.04-.2.03-.41-.03-.61zM9 14.06z" /></svg>');
}
.list-checkbox-alternative input[data-task=“]:checked,
.list-checkbox-alternative li[data-task=“] > input:checked,
.list-checkbox-alternative li[data-task=“] > p > input:checked {
  --checkbox-color-hover: var(--color-purple);
  color: var(--color-purple);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M2.46 4.19c.94-1.01 2.35-1.53 4.21-1.53h.67v1.88l-.54.11c-.91.18-1.55.54-1.89 1.07-.18.28-.28.61-.29.94h2.05c.18 0 .35.07.47.2.13.13.2.29.2.47V12c0 .74-.6 1.33-1.33 1.33H2c-.18 0-.35-.07-.47-.2a.634.634 0 0 1-.2-.47V7.39c0-.07-.13-1.83 1.13-3.19zm10.87 9.14h-4c-.18 0-.35-.07-.47-.2a.634.634 0 0 1-.2-.47V7.39c0-.07-.13-1.83 1.13-3.19.94-1.01 2.35-1.53 4.21-1.53h.67v1.88l-.54.11c-.91.18-1.55.54-1.89 1.07-.18.28-.28.61-.29.94H14c.18 0 .35.07.47.2s.2.29.2.47v4.67c0 .74-.6 1.33-1.33 1.33z" /></svg>');
}
.list-checkbox-alternative input[data-task=S]:checked,
.list-checkbox-alternative li[data-task=S] > input:checked,
.list-checkbox-alternative li[data-task=S] > p > input:checked {
  --checkbox-color-hover: var(--color-green);
  color: var(--color-green);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M6.43 5.42c.15-.1.35-.2.57-.27v1.7c-.2-.06-.39-.15-.57-.27C6.07 6.34 6 6.11 6 6s.07-.34.43-.58zM9 10.85v-1.7c.22.07.41.16.57.27.36.24.43.47.43.58s-.07.34-.43.58c-.18.11-.37.2-.57.27z" /><path d="M8 16c2.12 0 4.16-.84 5.66-2.34S16 10.12 16 8s-.84-4.16-2.34-5.66S10.12 0 8 0 3.84.84 2.34 2.34 0 5.88 0 8s.84 4.16 2.34 5.66S5.88 16 8 16zM9 3c0-.27-.11-.52-.29-.71C8.52 2.1 8.27 2 8 2s-.52.11-.71.29A.99.99 0 0 0 7 3v.09c-.6.11-1.17.33-1.68.66C4.6 4.23 4 5 4 6s.6 1.76 1.32 2.25c.48.32 1.05.55 1.68.66v1.94c-.39-.13-.68-.32-.84-.5a.95.95 0 0 0-.31-.25c-.12-.06-.25-.1-.38-.11s-.27 0-.4.05a.94.94 0 0 0-.35.2 1.02 1.02 0 0 0-.34.7c0 .13.01.27.06.39.05.13.12.24.21.34.56.65 1.41 1.08 2.35 1.25v.09c0 .27.11.52.29.71.19.19.44.29.71.29s.52-.11.71-.29a.99.99 0 0 0 .29-.71v-.09c.6-.11 1.17-.33 1.68-.66C11.4 11.78 12 11 12 10.01s-.6-1.77-1.32-2.25C10.17 7.43 9.6 7.2 9 7.1V5.16c.39.13.68.32.84.5.09.1.19.18.31.25.12.06.25.1.38.11.13.01.26 0 .39-.05.13-.04.24-.11.34-.19.1-.09.18-.19.24-.31s.09-.25.1-.38c0-.13 0-.26-.05-.39a.9.9 0 0 0-.2-.34C10.79 3.71 9.94 3.28 9 3.11v-.09z" fill-rule="evenodd" /></svg>');
}
.list-checkbox-alternative input[data-task=u]:checked,
.list-checkbox-alternative li[data-task=u] > input:checked,
.list-checkbox-alternative li[data-task=u] > p > input:checked {
  --checkbox-color-hover: var(--color-green);
  color: var(--color-green);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M10 5c-.27 0-.52-.11-.71-.29C9.1 4.52 9 4.27 9 4s.11-.52.29-.71A.99.99 0 0 1 10 3h5c.27 0 .52.11.71.29.19.19.29.44.29.71v5c0 .27-.11.52-.29.71-.19.19-.44.29-.71.29s-.52-.11-.71-.29A.99.99 0 0 1 14 9V6.41L9.71 10.7c-.19.19-.44.29-.71.29s-.52-.11-.71-.29L6 8.41l-4.29 4.3c-.19.18-.44.28-.7.28-.26 0-.51-.11-.7-.29s-.3-.44-.3-.7c0-.26.1-.51.28-.7l5-5.01C5.48 6.1 5.73 6 6 6s.52.11.71.29L9 8.58l3.59-3.59H10z" fill-rule="evenodd" /></svg>');
}
.list-checkbox-alternative input[data-task=d]:checked,
.list-checkbox-alternative li[data-task=d] > input:checked,
.list-checkbox-alternative li[data-task=d] > p > input:checked {
  --checkbox-color-hover: var(--color-red);
  color: var(--color-red);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M10 11c-.27 0-.52.11-.71.29-.19.19-.29.44-.29.71s.11.52.29.71c.19.19.44.29.71.29h5c.27 0 .52-.11.71-.29A.99.99 0 0 0 16 12V7c0-.27-.11-.52-.29-.71C15.52 6.1 15.27 6 15 6s-.52.11-.71.29A.99.99 0 0 0 14 7v2.59L9.71 5.3c-.19-.19-.44-.29-.71-.29s-.52.11-.71.29L6 7.59l-4.29-4.3c-.19-.18-.44-.28-.7-.28-.26 0-.51.11-.7.29s-.3.44-.3.7c0 .26.1.51.28.7l5 5c.19.19.44.29.71.29s.52-.11.71-.29L9 7.41 12.59 11H10z" fill-rule="evenodd" /></svg>');
}
.list-checkbox-alternative input[data-task=">"]:checked,
.list-checkbox-alternative li[data-task=">"] > input:checked,
.list-checkbox-alternative li[data-task=">"] > p > input:checked {
  --checkbox-color-hover: var(--color-pink);
  color: var(--color-pink);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M1.72 1.05A.503.503 0 0 0 1.45 1c-.09 0-.18.04-.26.1a.503.503 0 0 0-.18.49l1.4 4.85a.513.513 0 0 0 .4.35l5.69.95c.27.05.27.44 0 .49l-5.69.95a.513.513 0 0 0-.4.35l-1.4 4.85a.492.492 0 0 0 .18.49c.07.06.16.09.26.1.09 0 .19 0 .27-.05l13-6.5c.08-.04.15-.11.2-.18.05-.08.07-.17.07-.26s-.03-.18-.07-.26a.494.494 0 0 0-.2-.18l-13-6.49z" /></svg>');
}
.list-checkbox-alternative input[data-task="<"]:checked,
.list-checkbox-alternative li[data-task="<"] > input:checked,
.list-checkbox-alternative li[data-task="<"] > p > input:checked {
  --checkbox-color-hover: var(--color-blue);
  color: var(--color-blue);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M2.75 15.5h10.5c.83 0 1.5-.67 1.5-1.5V3.5c0-.83-.67-1.5-1.5-1.5h-1.5V.5h-1.5V2h-4.5V.5h-1.5V2h-1.5c-.83 0-1.5.67-1.5 1.5V14c0 .83.67 1.5 1.5 1.5zm0-11.25h10.5v1.5H2.75v-1.5z" /></svg>');
}

/* #endregion checkbox */
/* #region quote */
:is(body, .print .markdown-rendered) {
  --blockquote-background-color: var(--md-container-bg);
  --callout-radius: var(--radius-l);
}

body.quote-theme {
  --blockquote-border-color: var(--accent-active);
  /* 引导线高度修复 */
}
body.quote-theme :is(.markdown-source-view, .markdown-rendered) {
  --blockquote-border-thickness: var(--size-4-1);
  --blockquote-radius: var(--size-2-3);
}
body.quote-theme .markdown-source-view.mod-cm6 :is(.HyperMD-quote, .cm-blockquote-border)::before {
  width: var(--blockquote-border-thickness);
  border-left: none;
  background-color: var(--blockquote-border-color);
  border-radius: var(--blockquote-radius);
  inset-block: var(--blockquote-radius);
}
body.quote-theme .markdown-source-view.mod-cm6 :is(.HyperMD-quote, .cm-blockquote-border) :not(:first-child)::before {
  transform: translateX(var(--size-2-1));
}
body.quote-theme .markdown-source-view.mod-cm6 .HyperMD-quote {
  border-radius: 0 !important;
}
body.quote-theme .markdown-source-view.mod-cm6 .HyperMD-quote.cm-active:not(:has(+ .HyperMD-quote:not(.HyperMD-callout))) {
  border-bottom-left-radius: var(--blockquote-radius) !important;
  border-bottom-right-radius: var(--blockquote-radius) !important;
}
body.quote-theme .markdown-source-view.mod-cm6 .HyperMD-quote.cm-active .cm-blockquote-border::before {
  background-color: transparent;
}
body.quote-theme .markdown-source-view.mod-cm6 .HyperMD-quote::before {
  left: calc(var(--blockquote-border-thickness) / 2);
  z-index: 10;
}
body.quote-theme .markdown-source-view.mod-cm6 .HyperMD-quote + .HyperMD-quote::before {
  top: calc(var(--blockquote-radius) * -2);
}
body.quote-theme .markdown-source-view.mod-cm6 :is(div:not(.HyperMD-quote) + .HyperMD-quote, .cm-content :first-child:is(.HyperMD-quote)) {
  border-top-left-radius: var(--blockquote-radius) !important;
  border-top-right-radius: var(--blockquote-radius) !important;
}
body.quote-theme .markdown-source-view.mod-cm6 :is(div:not(.HyperMD-quote) + .HyperMD-quote, .cm-content :first-child:is(.HyperMD-quote))::after,
body.quote-theme .markdown-source-view.mod-cm6 :is(div:not(.HyperMD-quote) + .HyperMD-quote, .cm-content :first-child:is(.HyperMD-quote)) .cm-quote.cm-formatting::after {
  content: none !important;
}
body.quote-theme .markdown-rendered blockquote {
  --h1-size: var(--font-text-size);
  --h2-size: var(--font-text-size);
  --h3-size: var(--font-text-size);
  --h4-size: var(--font-text-size);
  --h5-size: var(--font-text-size);
  --h6-size: var(--font-text-size);
  --h1-line-height: var(--setting-line-height, var(--line-height-normal));
  --h2-line-height: var(--setting-line-height, var(--line-height-normal));
  --h3-line-height: var(--setting-line-height, var(--line-height-normal));
  --h4-line-height: var(--setting-line-height, var(--line-height-normal));
  --h5-line-height: var(--setting-line-height, var(--line-height-normal));
  --h6-line-height: var(--setting-line-height, var(--line-height-normal));
  border: none;
  border-radius: var(--blockquote-radius);
  position: relative;
  margin-block: var(--size-4-3);
}
body.quote-theme .markdown-rendered blockquote :is(p, h1, h2, h3, h4, h5, h6) {
  padding-left: var(--blockquote-border-thickness);
  padding-right: var(--size-4-3);
}
body.quote-theme .markdown-rendered blockquote::after {
  content: "";
  position: absolute;
  left: calc(var(--blockquote-radius) * 4 / 5);
  top: var(--blockquote-radius);
  border-radius: var(--blockquote-radius);
  height: calc(100% - var(--blockquote-radius) * 2);
  width: var(--blockquote-border-thickness);
  background-color: var(--accent-active);
}
body.quote-theme .markdown-rendered blockquote blockquote {
  box-shadow: none;
  margin-inline-end: var(--size-4-3) !important;
}
body.quote-theme.quote-shadow .markdown-rendered blockquote {
  box-shadow: var(--shadow-s);
}
body.quote-theme.quote-border .markdown-rendered blockquote {
  border: var(--block-outline-width) solid var(--accent-inactive);
  transition: var(--animation);
  box-shadow: none;
}
body.quote-theme.quote-border .markdown-rendered blockquote:hover {
  border-color: var(--accent-active);
}
body.quote-theme.quote-border .markdown-rendered blockquote blockquote {
  margin: var(--block-outline-width);
}
body.quote-theme.quote-mark.quote-theme blockquote {
  padding-left: 2.28rem;
}
body.quote-theme.quote-mark.quote-theme blockquote::before {
  position: absolute;
  font-size: 3rem;
  font-family: Source Code Pro;
  line-height: 1;
  content: "“" !important;
  background-color: transparent;
  color: var(--text-muted);
  top: calc(var(--font-text-size) * var(--line-height-normal) - 2.1428571429rem);
  transform: translateX(-1.32rem);
}
body.quote-theme :is(.markdown-preview-view, .community-modal-readme.markdown-rendered) blockquote {
  padding-left: var(--size-4-6);
}
body.quote-theme :is(.markdown-preview-view, .community-modal-readme.markdown-rendered) blockquote :is(p, h1, h2, h3, h4, h5, h6) {
  padding-left: calc(var(--blockquote-border-thickness) * 2);
}
body.quote-theme :is(.HyperMD-quote-2:not(.cm-active) + .HyperMD-quote-2 .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.cm-active) + .HyperMD-quote-2 .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.cm-active) + .HyperMD-quote-2 .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.cm-active) + .HyperMD-quote-2 .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.cm-active) + .HyperMD-quote-2 .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.cm-active) + .HyperMD-quote-2 .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.cm-active) + .HyperMD-quote-2 .cm-blockquote-border:nth-of-type(-n + 8), .HyperMD-quote-2:not(.cm-active) + .HyperMD-quote-3 .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.cm-active) + .HyperMD-quote-3 .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.cm-active) + .HyperMD-quote-3 .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.cm-active) + .HyperMD-quote-3 .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.cm-active) + .HyperMD-quote-3 .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.cm-active) + .HyperMD-quote-3 .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.cm-active) + .HyperMD-quote-3 .cm-blockquote-border:nth-of-type(-n + 8), .HyperMD-quote-2:not(.cm-active) + .HyperMD-quote-4 .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.cm-active) + .HyperMD-quote-4 .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.cm-active) + .HyperMD-quote-4 .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.cm-active) + .HyperMD-quote-4 .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.cm-active) + .HyperMD-quote-4 .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.cm-active) + .HyperMD-quote-4 .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.cm-active) + .HyperMD-quote-4 .cm-blockquote-border:nth-of-type(-n + 8), .HyperMD-quote-2:not(.cm-active) + .HyperMD-quote-5 .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.cm-active) + .HyperMD-quote-5 .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.cm-active) + .HyperMD-quote-5 .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.cm-active) + .HyperMD-quote-5 .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.cm-active) + .HyperMD-quote-5 .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.cm-active) + .HyperMD-quote-5 .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.cm-active) + .HyperMD-quote-5 .cm-blockquote-border:nth-of-type(-n + 8), .HyperMD-quote-2:not(.cm-active) + .HyperMD-quote-6 .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.cm-active) + .HyperMD-quote-6 .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.cm-active) + .HyperMD-quote-6 .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.cm-active) + .HyperMD-quote-6 .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.cm-active) + .HyperMD-quote-6 .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.cm-active) + .HyperMD-quote-6 .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.cm-active) + .HyperMD-quote-6 .cm-blockquote-border:nth-of-type(-n + 8), .HyperMD-quote-2:not(.cm-active) + .HyperMD-quote-7 .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.cm-active) + .HyperMD-quote-7 .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.cm-active) + .HyperMD-quote-7 .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.cm-active) + .HyperMD-quote-7 .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.cm-active) + .HyperMD-quote-7 .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.cm-active) + .HyperMD-quote-7 .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.cm-active) + .HyperMD-quote-7 .cm-blockquote-border:nth-of-type(-n + 8), .HyperMD-quote-2:not(.cm-active) + .HyperMD-quote-8 .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.cm-active) + .HyperMD-quote-8 .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.cm-active) + .HyperMD-quote-8 .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.cm-active) + .HyperMD-quote-8 .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.cm-active) + .HyperMD-quote-8 .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.cm-active) + .HyperMD-quote-8 .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.cm-active) + .HyperMD-quote-8 .cm-blockquote-border:nth-of-type(-n + 8))::before {
  top: calc(var(--blockquote-radius) * -2);
}

/* #endregion quote */
/* #region table */
body {
  --table-radius: var(--size-2-3);
  --table-btn-color: var(--text-on-accent);
  --table-btn-bg: var(--accent-inactive);
  --table-header-bg: var(--setting-table-header-bg, var(--md-container-bg));
  --table-alt-line-bg: var(--setting-table-line-bg, var(--md-container-bg));
  --table-cell-vertical-alignment: middle;
}

.markdown-rendered table {
  border-collapse: initial;
  border-spacing: 0;
}

body:is(:not(.css-settings-manager), .table-full) :is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) {
  --table-white-space: break-all;
  width: 100%;
}
body:is(:not(.css-settings-manager), .table-full) :is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) .table-editor {
  width: 100%;
}

:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) .table-col-btn {
  border-top-right-radius: var(--table-radius);
  border-bottom-right-radius: var(--table-radius);
  color: var(--table-btn-color);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) .table-row-btn {
  border-bottom-left-radius: var(--table-radius);
  border-bottom-right-radius: var(--table-radius);
  color: var(--table-btn-color);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) :is(.table-col-btn, .table-row-btn, .table-col-drag-handle:hover, .table-row-drag-handle:hover) {
  transition: var(--animation);
  background-color: var(--table-btn-bg);
  --table-drag-handle-color: var(--table-btn-color);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) :is(tr:hover .table-row-drag-handle, th:hover .table-col-drag-handle) {
  opacity: 1;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) th {
  background-color: var(--table-header-bg);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) th:first-child:not(:has(:is(.table-row-drag-handle, .table-col-drag-handle):hover)) {
  border-top-left-radius: var(--table-radius);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) th:last-child:not(:has(.table-col-drag-handle:hover)) {
  border-top-right-radius: var(--table-radius);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table):has(.table-col-btn:hover) th:last-child {
  border-top-right-radius: 0;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) tr:last-child td:first-child {
  border-bottom-left-radius: var(--table-radius);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table):has(.table-row-btn:hover) tr:last-child td:first-child {
  border-bottom-left-radius: 0;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) tr:last-child td:last-child {
  border-bottom-right-radius: var(--table-radius);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table):has(:is(.table-col-btn, .table-row-btn):hover) tr:last-child td:last-child {
  border-bottom-right-radius: 0;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) :is(th, td):not(:first-child) {
  border-left: 0;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) tbody td {
  border-top: 0;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) thead tr {
  background-color: var(--table-header-bg);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) tbody tr:nth-of-type(2n) {
  background-color: var(--table-alt-line-bg);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) tbody tr:nth-of-type(2n+1) {
  background-color: var(--background-primary);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) .table-cell-wrapper:has(> .cm-s-obsidian):not(:has(.image-embed)) {
  padding-inline: var(--size-4-1);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) .table-cell-wrapper:has(> .image-embed) {
  display: table-cell;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) .table-cell-wrapper .image-embed {
  padding-block: 0;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) .table-cell-wrapper:has(.is-live-preview .image-embed) {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) .table-cell-wrapper:has(.is-live-preview .image-embed) [class=cm-line] {
  display: none;
}

body.table-colorful table {
  --table-header-color: var(--setting-table-header-text, var(--text-on-accent));
  --table-header-bg: var(--setting-table-header-bg, var(--accent-active));
}
body.table-colorful .markdown-source-view table thead .cm-s-obsidian {
  color: var(--setting-table-header-text, var(--text-normal));
}

/* #endregion table */
/* #region tag */
body {
  --tag-color: var(--accent-active);
}

.HyperMD-header .cm-hashtag {
  font-size: var(--tag-size) !important;
}

:is(body, .print .markdown-rendered) {
  --tag-padding-x: 0.4rem;
  --tag-padding-y: 0.05rem;
}

.cm-line span.cm-hashtag {
  vertical-align: baseline;
}

body.tag-click-to-edit .cm-line span.cm-hashtag:not(.cm-formatting) {
  pointer-events: none;
}

body.tag-plain {
  --tag-background: transparent;
}

body.tag-outline {
  --tag-border-color: var(--setting-tag-outline, var(--accent-inactive)) !important;
  --tag-border-width: var(--size-2-1) !important;
  --tag-color: var(--setting-tag-color, var(--accent-active)) !important;
}
body.tag-outline :is(.cm-tag-obsidian, .tag[href="#obsidian"]) {
  --tag-border-color: var(--color-purple) !important;
  --tag-color: var(--tag-border-color);
}
body.tag-outline :is(.cm-tag-todo, .tag[href="#todo"]) {
  --tag-border-color: var(--color-green) !important;
  --tag-color: var(--tag-border-color);
}
body.tag-outline :is(.cm-tag-important, .tag[href="#important"]) {
  --tag-border-color: var(--color-red) !important;
  --tag-color: var(--tag-border-color);
}
body.tag-outline :is(.cm-tag-progress, .tag[href="#progress"]) {
  --tag-border-color: var(--color-blue) !important;
  --tag-color: var(--tag-border-color);
}
body.tag-outline :is(.cm-tag-complete, .tag[href="#complete"]) {
  --tag-border-color: var(--color-orange) !important;
  --tag-color: var(--tag-border-color);
}

body.tag-fill {
  --tag-background: var(--setting-tag-bg, var(--accent-active)) !important;
  --tag-background-hover: var(--tag-background);
  --tag-color: var(--text-on-accent);
  --tag-color-hover: var(--tag-color);
}
body.tag-fill :is(.cm-tag-obsidian, .tag[href="#obsidian"]) {
  --tag-background: var(--color-purple) !important ;
}
body.tag-fill :is(.cm-tag-todo, .tag[href="#todo"]) {
  --tag-background: var(--color-green) !important ;
}
body.tag-fill :is(.cm-tag-important, .tag[href="#important"]) {
  --tag-background: var(--color-red) !important ;
}
body.tag-fill :is(.cm-tag-progress, .tag[href="#progress"]) {
  --tag-background: var(--color-blue) !important ;
}
body.tag-fill :is(.cm-tag-complete, .tag[href="#complete"]) {
  --tag-background: var(--color-orange) !important ;
}

/* #endregion tag */
/* #region heading */
body {
  --h1-size: calc(var(--font-text-size) * var(--setting-h1-size, 1.6));
  --h2-size: calc(var(--font-text-size) * var(--setting-h2-size, 1.5));
  --h3-size: calc(var(--font-text-size) * var(--setting-h3-size, 1.4));
  --h4-size: calc(var(--font-text-size) * var(--setting-h4-size, 1.3));
  --h5-size: calc(var(--font-text-size) * var(--setting-h5-size, 1.2));
  --h6-size: calc(var(--font-text-size) * var(--setting-h6-size, 1.1));
  --h1-weight: 750;
  --h2-weight: 700;
  --h3-weight: 650;
  --h4-weight: 650;
  --h5-weight: 600;
  --h6-weight: 600;
  --h1-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h1-size));
  --h2-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h2-size));
  --h3-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h3-size));
  --h4-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h4-size));
  --h5-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h5-size));
  --h6-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h6-size));
  --h1-font: var(--setting-h1-font, var(--font-text));
  --h2-font: var(--setting-h2-font, var(--font-text));
  --h3-font: var(--setting-h3-font, var(--font-text));
  --h4-font: var(--setting-h4-font, var(--font-text));
  --h5-font: var(--setting-h5-font, var(--font-text));
  --h6-font: var(--setting-h6-font, var(--font-text));
}
body.heading-color-base {
  --h1-color: var(--text-normal);
  --h2-color: var(--text-normal);
  --h3-color: var(--text-normal);
  --h4-color: var(--text-normal);
  --h5-color: var(--text-normal);
  --h6-color: var(--text-normal);
}
body.heading-color-accent {
  --h1-color: var(--accent-active);
  --h2-color: var(--accent-active);
  --h3-color: var(--accent-active);
  --h4-color: var(--accent-active);
  --h5-color: var(--accent-active);
  --h6-color: var(--accent-active);
}
body :is(h1, h2, h3, h4, h5, h6) {
  margin: 0 !important;
}

body:is(:not(.css-settings-manager), .heading-color-colorful) {
  --h1-color: var(--setting-h1-color, var(--color-red));
  --h2-color: var(--setting-h2-color, var(--color-orange));
  --h3-color: var(--setting-h3-color, var(--color-green));
  --h4-color: var(--setting-h4-color, var(--color-blue));
  --h5-color: var(--setting-h5-color, var(--color-purple));
  --h6-color: var(--setting-h6-color, var(--color-cyan));
}

.cm-formatting.cm-formatting-header {
  filter: grayscale(70%);
  font-weight: 400 !important;
}
body:not(.fix-line-number) .cm-formatting.cm-formatting-header {
  font-size: 1rem !important;
  line-height: 1.2rem;
}

.cm-s-obsidian .cm-line.HyperMD-header {
  padding-block: 0;
}

body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div > :is(h1, h2, h3, h4, h5, h6), .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header) {
  position: relative;
}
body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div > :is(h1, h2, h3, h4, h5, h6), .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header)::before {
  content: "";
  position: absolute;
  z-index: 1;
  padding: 0.1rem;
  background-color: transparent;
  font-size: 0.7rem;
  line-height: 1;
  width: fit-content;
  letter-spacing: 0.05rem;
  opacity: 0;
  transition: var(--animation);
  transition-delay: calc(var(--animation-delay) / 2);
  pointer-events: none;
  top: 50%;
  transform: translateY(-50%);
  left: calc(var(--size-4-5) * -1);
}
body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div > :is(h1, h2, h3, h4, h5, h6), .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header):hover::before {
  opacity: 0.9;
  transition-delay: 0s;
  pointer-events: all;
}
body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div.is-collapsed > :is(h1, h2, h3, h4, h5, h6),
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header:has(> .cm-foldPlaceholder))::before {
  opacity: 0.9;
  text-decoration: underline 0.1rem;
}
body:is(:not(.css-settings-manager), .heading-level-enable).heading-level-fix :is(div.markdown-reading-view > div > div > div:not(.is-collapsed) > :is(h1, h2, h3, h4, h5, h6),
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header:not(:has(> .cm-foldPlaceholder)))::before {
  opacity: 0.4;
}
body:is(:not(.css-settings-manager), .heading-level-enable).heading-level-fix :is(div.markdown-reading-view > div > div > div:not(.is-collapsed) > :is(h1, h2, h3, h4, h5, h6),
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header:not(:has(> .cm-foldPlaceholder))):not(:hover)::before {
  color: var(--text-muted);
}
body:is(:not(.css-settings-manager), .heading-level-enable).heading-level-fix :is(div.markdown-reading-view > div > div > div:not(.is-collapsed) > :is(h1, h2, h3, h4, h5, h6),
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header:not(:has(> .cm-foldPlaceholder))):hover::before {
  opacity: 1;
}
body:is(:not(.css-settings-manager), .heading-level-enable) div.markdown-reading-view > div > div > div > :is(h1, h2, h3, h4, h5, h6)::before {
  left: calc(var(--size-4-6) * -1) !important;
}
body:is(:not(.css-settings-manager), .heading-level-enable).link-heading :is(div.markdown-reading-view > div > div > div > h1, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-1) {
  --link-color: var(--h1-color);
  --link-color-underline: var(--h1-color);
  --link-external-color: var(--h1-color);
  --link-external-color-underline: var(--h1-color);
  --link-text-size: var(--h1-size);
}
body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div > h1, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-1)::before {
  content: "H1";
}
body:is(:not(.css-settings-manager), .heading-level-enable).link-heading :is(div.markdown-reading-view > div > div > div > h2, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-2) {
  --link-color: var(--h2-color);
  --link-color-underline: var(--h2-color);
  --link-external-color: var(--h2-color);
  --link-external-color-underline: var(--h2-color);
  --link-text-size: var(--h2-size);
}
body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div > h2, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-2)::before {
  content: "H2";
}
body:is(:not(.css-settings-manager), .heading-level-enable).link-heading :is(div.markdown-reading-view > div > div > div > h3, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-3) {
  --link-color: var(--h3-color);
  --link-color-underline: var(--h3-color);
  --link-external-color: var(--h3-color);
  --link-external-color-underline: var(--h3-color);
  --link-text-size: var(--h3-size);
}
body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div > h3, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-3)::before {
  content: "H3";
}
body:is(:not(.css-settings-manager), .heading-level-enable).link-heading :is(div.markdown-reading-view > div > div > div > h4, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-4) {
  --link-color: var(--h4-color);
  --link-color-underline: var(--h4-color);
  --link-external-color: var(--h4-color);
  --link-external-color-underline: var(--h4-color);
  --link-text-size: var(--h4-size);
}
body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div > h4, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-4)::before {
  content: "H4";
}
body:is(:not(.css-settings-manager), .heading-level-enable).link-heading :is(div.markdown-reading-view > div > div > div > h5, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-5) {
  --link-color: var(--h5-color);
  --link-color-underline: var(--h5-color);
  --link-external-color: var(--h5-color);
  --link-external-color-underline: var(--h5-color);
  --link-text-size: var(--h5-size);
}
body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div > h5, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-5)::before {
  content: "H5";
}
body:is(:not(.css-settings-manager), .heading-level-enable).link-heading :is(div.markdown-reading-view > div > div > div > h6, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-6) {
  --link-color: var(--h6-color);
  --link-color-underline: var(--h6-color);
  --link-external-color: var(--h6-color);
  --link-external-color-underline: var(--h6-color);
  --link-text-size: var(--h6-size);
}
body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div > h6, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-6)::before {
  content: "H6";
}
body:is(:not(.css-settings-manager), .heading-level-enable) div.markdown-reading-view > div > div > div > :is(h1, h2, h3, h4, h5, h6)::before {
  left: calc(-1 * var(--size-4-6)) !important;
}
body:is(:not(.css-settings-manager), .heading-level-enable) .heading-collapse-indicator {
  position: absolute;
  z-index: 99;
  height: var(--size-4-4);
  width: var(--size-4-5);
  top: 50%;
  transform: translateY(-50%);
  left: calc(var(--size-2-1) * -1);
  padding: 0 !important;
  --cursor: pointer;
}
body:is(:not(.css-settings-manager), .heading-level-enable) .heading-collapse-indicator svg {
  display: none;
}
body:is(:not(.css-settings-manager), .heading-level-enable) .HyperMD-header {
  position: relative;
}
body:is(:not(.css-settings-manager), .heading-level-enable) .HyperMD-header .cm-fold-indicator .collapse-indicator {
  --cursor: pointer;
  z-index: 99;
  opacity: 0 !important;
  width: var(--size-4-6);
  height: var(--size-4-4) !important;
  left: calc(var(--size-2-1) - var(--size-4-8));
  top: 50% !important;
  transform: translateY(-50%) !important;
}

body.line-active-left .cm-active.HyperMD-header::before {
  opacity: 1 !important;
}
body.line-active-left .cm-active.HyperMD-header-1::before {
  color: var(--h1-color) !important;
}
body.line-active-left .cm-active.HyperMD-header-2::before {
  color: var(--h2-color) !important;
}
body.line-active-left .cm-active.HyperMD-header-3::before {
  color: var(--h3-color) !important;
}
body.line-active-left .cm-active.HyperMD-header-4::before {
  color: var(--h4-color) !important;
}
body.line-active-left .cm-active.HyperMD-header-5::before {
  color: var(--h5-color) !important;
}
body.line-active-left .cm-active.HyperMD-header-6::before {
  color: var(--h6-color) !important;
}

body.heading-h1-center h1 {
  text-align: center;
}

body.heading-h1-underline {
  --h1-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h1-size) * 1.2);
}
body.heading-h1-underline :is(h1, .HyperMD-header-1) {
  position: relative;
}
body.heading-h1-underline :is(h1, .HyperMD-header-1)::after {
  content: "";
  position: absolute;
  height: var(--size-4-1);
  width: 100%;
  top: 50%;
  transform: translateY(max(var(--h1-size) * var(--line-height-normal) * 0.3, var(--size-4-3)));
  border-radius: var(--size-2-1);
  background-image: linear-gradient(to right, var(--h1-color) 30%, transparent 70%);
}
body.heading-h1-underline h1::after {
  left: 0;
}
body.heading-h1-underline .HyperMD-header-1::after {
  left: var(--size-4-1);
}
body.heading-h1-underline .vertical-tab-content h1 {
  font-size: var(--h1-size);
  font-weight: var(--h1-weight);
}
body.heading-h1-underline.heading-underline-thin :is(h1, .HyperMD-header-1)::after {
  height: var(--size-2-1);
}

body.heading-h2-underline {
  --h2-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h2-size) * 1.2);
}
body.heading-h2-underline :is(h2, .HyperMD-header-2) {
  position: relative;
}
body.heading-h2-underline :is(h2, .HyperMD-header-2)::after {
  content: "";
  position: absolute;
  height: var(--size-4-1);
  width: 100%;
  top: 50%;
  transform: translateY(max(var(--h2-size) * var(--line-height-normal) * 0.3, var(--size-4-3)));
  border-radius: var(--size-2-1);
  background-image: linear-gradient(to right, var(--h2-color) 30%, transparent 70%);
}
body.heading-h2-underline h2::after {
  left: 0;
}
body.heading-h2-underline .HyperMD-header-2::after {
  left: var(--size-4-1);
}
body.heading-h2-underline .vertical-tab-content h2 {
  font-size: var(--h2-size);
  font-weight: var(--h2-weight);
}
body.heading-h2-underline.heading-underline-thin :is(h2, .HyperMD-header-2)::after {
  height: var(--size-2-1);
}

body.heading-h3-underline {
  --h3-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h3-size) * 1.2);
}
body.heading-h3-underline :is(h3, .HyperMD-header-3) {
  position: relative;
}
body.heading-h3-underline :is(h3, .HyperMD-header-3)::after {
  content: "";
  position: absolute;
  height: var(--size-4-1);
  width: 100%;
  top: 50%;
  transform: translateY(max(var(--h3-size) * var(--line-height-normal) * 0.3, var(--size-4-3)));
  border-radius: var(--size-2-1);
  background-image: linear-gradient(to right, var(--h3-color) 30%, transparent 70%);
}
body.heading-h3-underline h3::after {
  left: 0;
}
body.heading-h3-underline .HyperMD-header-3::after {
  left: var(--size-4-1);
}
body.heading-h3-underline .vertical-tab-content h3 {
  font-size: var(--h3-size);
  font-weight: var(--h3-weight);
}
body.heading-h3-underline.heading-underline-thin :is(h3, .HyperMD-header-3)::after {
  height: var(--size-2-1);
}

body.heading-h4-underline {
  --h4-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h4-size) * 1.2);
}
body.heading-h4-underline :is(h4, .HyperMD-header-4) {
  position: relative;
}
body.heading-h4-underline :is(h4, .HyperMD-header-4)::after {
  content: "";
  position: absolute;
  height: var(--size-4-1);
  width: 100%;
  top: 50%;
  transform: translateY(max(var(--h4-size) * var(--line-height-normal) * 0.3, var(--size-4-3)));
  border-radius: var(--size-2-1);
  background-image: linear-gradient(to right, var(--h4-color) 30%, transparent 70%);
}
body.heading-h4-underline h4::after {
  left: 0;
}
body.heading-h4-underline .HyperMD-header-4::after {
  left: var(--size-4-1);
}
body.heading-h4-underline .vertical-tab-content h4 {
  font-size: var(--h4-size);
  font-weight: var(--h4-weight);
}
body.heading-h4-underline.heading-underline-thin :is(h4, .HyperMD-header-4)::after {
  height: var(--size-2-1);
}

body.heading-h5-underline {
  --h5-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h5-size) * 1.2);
}
body.heading-h5-underline :is(h5, .HyperMD-header-5) {
  position: relative;
}
body.heading-h5-underline :is(h5, .HyperMD-header-5)::after {
  content: "";
  position: absolute;
  height: var(--size-4-1);
  width: 100%;
  top: 50%;
  transform: translateY(max(var(--h5-size) * var(--line-height-normal) * 0.3, var(--size-4-3)));
  border-radius: var(--size-2-1);
  background-image: linear-gradient(to right, var(--h5-color) 30%, transparent 70%);
}
body.heading-h5-underline h5::after {
  left: 0;
}
body.heading-h5-underline .HyperMD-header-5::after {
  left: var(--size-4-1);
}
body.heading-h5-underline .vertical-tab-content h5 {
  font-size: var(--h5-size);
  font-weight: var(--h5-weight);
}
body.heading-h5-underline.heading-underline-thin :is(h5, .HyperMD-header-5)::after {
  height: var(--size-2-1);
}

body.heading-h6-underline {
  --h6-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h6-size) * 1.2);
}
body.heading-h6-underline :is(h6, .HyperMD-header-6) {
  position: relative;
}
body.heading-h6-underline :is(h6, .HyperMD-header-6)::after {
  content: "";
  position: absolute;
  height: var(--size-4-1);
  width: 100%;
  top: 50%;
  transform: translateY(max(var(--h6-size) * var(--line-height-normal) * 0.3, var(--size-4-3)));
  border-radius: var(--size-2-1);
  background-image: linear-gradient(to right, var(--h6-color) 30%, transparent 70%);
}
body.heading-h6-underline h6::after {
  left: 0;
}
body.heading-h6-underline .HyperMD-header-6::after {
  left: var(--size-4-1);
}
body.heading-h6-underline .vertical-tab-content h6 {
  font-size: var(--h6-size);
  font-weight: var(--h6-weight);
}
body.heading-h6-underline.heading-underline-thin :is(h6, .HyperMD-header-6)::after {
  height: var(--size-2-1);
}

body.heading-h6-variant :is(h6, .cm-header-6) {
  font-variant: small-caps;
}

/* #endregion heading */
/* #region image */
body.theme-dark.image-dark-hover img {
  filter: brightness(0.7);
  transition: var(--animation);
}
body.theme-dark.image-dark-hover img:hover {
  filter: brightness(0.85);
}

img {
  border-radius: var(--radius-l);
  cursor: pointer;
}

/* hint text, reference from https://github.com/chrisgrieser/shimmering-focus */
body.image-alt .image-embed[alt] {
  padding: var(--size-4-1) 0;
}
body.image-alt .image-embed[alt]::after {
  display: block;
  text-align: center;
}
body.image-alt .image-embed[alt]:not([alt$=".png"], [alt$=".jpg"], [alt$=".jpeg"], [alt$=".tiff"], [alt$=".webp"], [alt$=".bmp"])::after {
  content: attr(alt);
  font-size: var(--font-smaller);
  color: var(--text-faint);
}
body.image-alt .view-content img:not(.emoji) {
  display: block;
  margin-right: auto;
  margin-left: auto;
}

/* scale on click, reference from blue-topaz */
body.image-zoom :is(.markdown-preview-view, .workspace-leaf-content[data-type=image]) img:not([class*=emoji], .banner-image) {
  cursor: zoom-in;
}
body.image-zoom :is(.markdown-preview-view, .workspace-leaf-content[data-type=image]) img:not([class*=emoji], .banner-image):active {
  overflow: hidden;
  position: relative;
  object-fit: contain;
  height: 100%;
  width: 100%;
  margin: 0;
  border-radius: 0;
  inset: 0;
  z-index: 200;
  background-image: linear-gradient(to right, hsl(var(--background-primary-hsl)), hsl(var(--background-secondary-hsl)), hsl(var(--background-primary-hsl)));
}
body.image-zoom.image-zoom-out :is(.markdown-preview-view, .workspace-leaf-content[data-type=image]) img:not([class*=emoji], .banner-image):active {
  position: fixed;
}

/* #endregion image */
/* #region canvas */
.canvas-wrapper .canvas-node-container {
  border-radius: var(--radius-l);
  background-color: hsl(var(--background-primary-hsl));
}
.canvas-wrapper .canvas-card-menu {
  padding: var(--size-2-1);
  border-radius: var(--radius-m);
  bottom: var(--size-4-6);
}
.canvas-wrapper .canvas-card-menu .canvas-card-menu-button {
  --icon-size: var(--icon-l);
}
.canvas-wrapper :is(.canvas-menu, .canvas-controls-group) {
  border-radius: var(--radius-m);
}
.canvas-wrapper .canvas-menu {
  padding: var(--size-4-1);
}
.canvas-wrapper .canvas-menu .clickable-icon {
  padding: var(--size-2-3);
}
.canvas-wrapper .canvas-control-group {
  box-shadow: none;
  border-radius: var(--radius-m);
  background-color: hsl(var(--background-secondary-hsl));
}
.canvas-wrapper .canvas-control button {
  transition: none;
  margin: var(--size-2-1);
  padding: var(--size-2-3);
  border-radius: var(--radius-s);
  border-bottom: none;
}
.canvas-wrapper .canvas-control button:not([disabled]):hover {
  background-color: var(--background-modifier-hover) !important;
}

body.canvas-control-hide .canvas-control-group {
  opacity: 0;
  transition: var(--animation);
  transition-delay: var(--animation-delay);
}
body.canvas-control-hide .canvas-control-group:hover {
  transition-delay: 0s;
  opacity: 1;
}

body.canvas-center .canvas-node-content.markdown-embed > .markdown-embed-content > .markdown-preview-view > .markdown-preview-sizer {
  text-align: center;
}

/* #endregion canvas */
/* #region callout */
/* #endregion callout */
/* #region pdf */
body.theme-dark.pdf-dark-hover .pdf-viewer {
  opacity: 0.7;
  transition: opacity var(--animation);
}
body.theme-dark.pdf-dark-hover .pdf-viewer:hover {
  opacity: 0.85;
}

/* #endregion pdf */
/* #region property */
.metadata-container {
  margin-block-end: var(--size-4-2);
  transition: var(--animation);
  --metadata-property-background-hover: var(--md-container-bg);
}
body.prop-outline .metadata-container {
  transform: none;
  --metadata-border-width: var(--block-outline-width);
  --metadata-border-radius: var(--radius-l);
  --metadata-border-color: var(--accent-inactive);
  --metadata-padding: var(--radius-l);
}
body.prop-outline .metadata-container:hover {
  --metadata-border-color: var(--accent-active);
}
.metadata-container .metadata-add-button {
  padding: var(--size-4-1);
  margin-top: var(--size-4-2);
  gap: var(--size-2-3);
}

.metadata-properties-heading .collapse-indicator {
  left: calc(var(--size-4-8) * -1);
}

.metadata-property-icon,
input.metadata-property-key-input,
.multi-select-pill,
.multi-select-input {
  line-height: calc(var(--line-height-normal) / 1.5);
  height: calc(var(--line-height-normal) / 1.5);
}

.metadata-property-key {
  padding-block: var(--size-2-1);
}

.metadata-property:not([data-property-key=tags]) .metadata-property-key-input {
  padding-block: var(--size-2-3);
}

.multi-select-pill {
  transition: var(--animation);
}

.metadata-property[data-property-key=cssclasses] {
  --pill-padding-x: 0.4em;
}
.metadata-property[data-property-key=cssclasses] .multi-select-pill {
  line-height: 1;
}

.multi-select-pill-remove-button {
  cursor: pointer;
}

.multi-select-pill-content {
  line-height: 1.6;
}

/* #endregion property */
/* #endregion [editor] */
/* #region [plugins] */
/* #region better-command-palette */
.better-command-palette p.better-command-palette-title {
  margin: var(--size-4-3) var(--size-4-6);
}
.better-command-palette .prompt-input {
  font-size: var(--font-ui-large);
}

/* #endregion better-command-palette */
/* #region calender */
body.calendar-swap-year-month #calendar-container .nav {
  padding-left: var(--size-4-1);
}
body.calendar-swap-year-month #calendar-container .nav .title {
  display: flex;
  flex-direction: row-reverse;
  font-weight: normal;
  font-size: 1.2rem;
}
body.calendar-swap-year-month #calendar-container .nav .title .year {
  color: var(--text-normal);
  letter-spacing: 0.1rem;
  display: flex;
  align-items: center;
}
body.calendar-swap-year-month #calendar-container .nav .title .year::after {
  content: var(--setting-calendar-year-suffix, "年");
  margin-right: var(--size-2-1);
  margin-left: var(--size-2-1);
}
body.calendar-swap-year-month #calendar-container .nav .title .month {
  height: var(--size-4-6);
  line-height: var(--size-4-6);
  letter-spacing: 0.1rem;
  font-weight: bold;
  color: var(--accent-active);
}

.theme-light {
  --calendar-weekend-bg: hsla(var(--accent-h),
      var(--accent-s),
      calc(var(--accent-l) + 24%), 24%);
}

.theme-dark {
  --calendar-weekend-bg: hsla(var(--accent-h),
      var(--accent-s),
      calc(var(--accent-l) - 24%), 24%);
}

#calendar-container {
  --color-text-today: var(--text-on-accent);
  --color-text-weeknum: var(--accent-active);
}
#calendar-container thead {
  border-bottom: var(--size-2-1) solid var(--accent-active);
}
#calendar-container th {
  padding: 2px 0 4px;
  font-weight: bold;
  letter-spacing: 0.1em;
}
#calendar-container .nav {
  padding: 0;
  margin-bottom: var(--size-4-3);
  padding-left: var(--size-4-1);
  justify-content: space-around;
}
#calendar-container .nav .right-nav {
  margin-left: unset;
}
#calendar-container .day {
  border: 1px solid transparent;
}
#calendar-container .day:hover {
  border-color: var(--accent-inactive);
}
#calendar-container .day.today:hover {
  border-color: var(--text-on-accent);
}
#calendar-container .day:active {
  background-color: var(--accent-inactive);
}
#calendar-container .active {
  background-color: var(--accent-inactive);
  color: var(--text-normal);
}
#calendar-container .today {
  --color-dot: var(--text-on-accent);
  color: var(--text-on-accent);
  background-color: var(--accent-active);
}
#calendar-container .reset-button {
  white-space: nowrap;
}
#calendar-container .title {
  line-height: 1;
  font-size: 1.4rem;
  white-space: nowrap;
}
#calendar-container .dot-container {
  translate: 0 calc(-1 * var(--size-2-1));
}

body.calendar-weekend #calendar-container tbody tr td:nth-last-child(2),
body.calendar-weekend #calendar-container tbody tr td:nth-last-child(1) {
  background-color: var(--calendar-weekend-bg);
}

.workspace-leaf-content[data-type=calendar] .view-content {
  padding-inline: var(--size-4-1);
  padding-block: 0;
}

body #calendar-container {
  max-width: var(--setting-calendar-max-width, 500px);
  margin-inline: auto;
}
body #calendar-container .day {
  padding: var(--size-2-1) var(--size-4-1) !important;
  border: none;
}

/* #endregion calender */
/* #region excalidraw */
/* reference from https://github.com/Maldonacho/obsidian-encore-theme */
.excalidraw-wrapper {
  background-color: transparent;
}

.excalidraw {
  border-radius: 8px;
  background-color: transparent;
  --ui-font: var(--font-interface);
  --help-icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' data-darkreader-inline-stroke='' style='--darkreader-inline-stroke:currentColor;'%3E%3Ccircle cx='12' cy='12' r='10'%3E%3C/circle%3E%3Cpath d='M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3'%3E%3C/path%3E%3Cline x1='12' y1='17' x2='12.01' y2='17'%3E%3C/line%3E%3C/svg%3E");
  --grip-icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' data-darkreader-inline-stroke='' style='--darkreader-inline-stroke:currentColor;'%3E%3Ccircle cx='12' cy='9' r='1'%3E%3C/circle%3E%3Ccircle cx='19' cy='9' r='1'%3E%3C/circle%3E%3Ccircle cx='5' cy='9' r='1'%3E%3C/circle%3E%3Ccircle cx='12' cy='15' r='1'%3E%3C/circle%3E%3Ccircle cx='19' cy='15' r='1'%3E%3C/circle%3E%3Ccircle cx='5' cy='15' r='1'%3E%3C/circle%3E%3C/svg%3E");
}
.excalidraw .welcome-screen-menu {
  display: none;
}
.excalidraw .mobile-misc-tools-container {
  right: calc(var(--editor-container-padding) * -0.8);
}
.excalidraw .mobile-misc-tools-container .library-button {
  border-radius: 0;
  padding: var(--size-4-1);
}
:is(.excalidraw, .excalidraw.theme--dark) {
  --color-selection: var(--accent-active);
  --color-primary: var(--accent-active);
  --color-primary-darker: var(--accent-active);
  --color-primary-darkest: var(--text-normal);
  --button-gray-2: var(--nav-item-background-hover);
  --color-primary-light: var(--nav-item-background-hover);
  --border-radius-md: 4px;
  --border-radius-lg: 8px;
  --input-shadow: none;
  --input-shadow-hover: none;
}
:is(.excalidraw, .excalidraw.theme--dark) .color-picker-label-swatch {
  border: 1px solid var(--color-base-100);
}
:is(.excalidraw, .excalidraw.theme--dark) .color-picker-hash {
  width: 1rem;
}
:is(.excalidraw, .excalidraw.theme--dark) .Island > div:first-child > svg {
  -webkit-mask-image: var(--grip-icon);
  -webkit-mask-position: center;
  -webkit-mask-repeat: no-repeat;
  -webkit-mask-size: unset;
  background-color: var(--button-gray-1);
}
:is(.excalidraw, .excalidraw.theme--dark) :is(.Island, .mobile-misc-tools-container) {
  backdrop-filter: blur(var(--size-2-3));
}
.excalidraw .popover {
  box-shadow: none;
  background-color: hsl(var(--background-secondary-hsl)) !important;
  animation: op var(--animation) !important;
}
.excalidraw .popover ul {
  border-radius: var(--radius-m);
  margin-left: 0;
  padding: var(--size-2-3);
  font-family: var(--font-text);
  box-shadow: var(--shadow-s);
}
.excalidraw .popover ul li button {
  border-radius: var(--radius-s);
  transition: none;
}
.excalidraw .popover ul li button:hover {
  background-color: var(--background-modifier-hover);
  color: var(--text-normal);
}
.excalidraw .popover ul hr {
  margin-block: var(--size-2-3);
  border-color: var(--hr-color);
  margin-inline: calc(-1 * var(--size-4-1));
}
.excalidraw .layer-ui__wrapper__footer-right {
  transform: translateY(-32px);
}
.excalidraw .layer-ui__wrapper__footer-right .help-icon {
  display: none;
}
.excalidraw .layer-ui__wrapper__footer-left {
  margin-bottom: 0.3rem;
}

.theme-light .excalidraw:not(.theme--dark) {
  --button-gray-1: var(--color-base-30);
  --button-gray-3: var(--color-base-30);
  --dialog-border-color: var(--color-base-40);
  --island-bg-color: var(--color-base-00);
  --input-border-color: var(--color-base-30);
  --input-bg-color: var(--color-base-20);
}

.theme-dark .excalidraw.theme--dark {
  --button-gray-1: var(--color-base-30);
  --button-gray-3: var(--color-base-30);
  --dialog-border-color: var(--color-base-40);
  --island-bg-color: var(--color-base-00);
  --input-border-color: var(--color-base-30);
  --input-bg-color: var(--color-base-20);
}

.help-icon {
  -webkit-mask-image: var(--help-icon);
  -webkit-mask-position: center;
  -webkit-mask-repeat: no-repeat;
  -webkit-mask-size: 18px;
  background-color: var(--button-gray-1);
  height: 30px;
}
.help-icon :hover {
  background-color: var(--button-gray-2);
}
.help-icon > * {
  display: none;
}

.workspace-leaf-content[data-type=excalidraw] .clickable-icon.view-action:is([aria-label="Press ESC to exit fullscreen mode"], [aria-label="Open selected text as link\a(SHIFT+CLICK to open in a new pane)"], [aria-label="Save (will also update transclusions)"], [aria-label="Install or update Excalidraw Scripts"]) > svg {
  -webkit-mask-image: unset;
  -webkit-mask-position: center;
  -webkit-mask-repeat: no-repeat;
  -webkit-mask-size: 16px;
  background-color: var(--color-base-70);
  border-radius: 0;
}
.workspace-leaf-content[data-type=excalidraw] .clickable-icon.view-action[aria-label="Press ESC to exit fullscreen mode"] > svg {
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' data-darkreader-inline-stroke='' style='--darkreader-inline-stroke:currentColor;'%3E%3Cpolyline points='15 3 21 3 21 9'%3E%3C/polyline%3E%3Cpolyline points='9 21 3 21 3 15'%3E%3C/polyline%3E%3Cline x1='21' y1='3' x2='14' y2='10'%3E%3C/line%3E%3Cline x1='3' y1='21' x2='10' y2='14'%3E%3C/line%3E%3C/svg%3E");
}
.workspace-leaf-content[data-type=excalidraw] .clickable-icon.view-action[aria-label="Open selected text as link\a(SHIFT+CLICK to open in a new pane)"] > svg {
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' data-darkreader-inline-stroke='' style='--darkreader-inline-stroke:currentColor;'%3E%3Cpath d='M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6'%3E%3C/path%3E%3Cpolyline points='15 3 21 3 21 9'%3E%3C/polyline%3E%3Cline x1='10' y1='14' x2='21' y2='3'%3E%3C/line%3E%3C/svg%3E");
}
.workspace-leaf-content[data-type=excalidraw] .clickable-icon.view-action[aria-label="Save (will also update transclusions)"] > svg {
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' data-darkreader-inline-stroke='' style='--darkreader-inline-stroke:currentColor;'%3E%3Cpath d='M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z'%3E%3C/path%3E%3Cpolyline points='17 21 17 13 7 13 7 21'%3E%3C/polyline%3E%3Cpolyline points='7 3 7 8 15 8'%3E%3C/polyline%3E%3C/svg%3E");
}
.workspace-leaf-content[data-type=excalidraw] .clickable-icon.view-action[aria-label="Install or update Excalidraw Scripts"] > svg {
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' data-darkreader-inline-stroke='' style='--darkreader-inline-stroke:currentColor;'%3E%3Cpath d='M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4'%3E%3C/path%3E%3Cpolyline points='14 2 14 8 20 8'%3E%3C/polyline%3E%3Cpath d='m9 18 3-3-3-3'%3E%3C/path%3E%3Cpath d='m5 12-3 3 3 3'%3E%3C/path%3E%3C/svg%3E");
}

.workspace-leaf-content .excalidraw-view {
  padding: unset;
  padding-right: 4px;
  padding-bottom: 4px;
}

.excalidraw .excalidraw__embeddable__outer .theme-light {
  --background-primary: hsla(var(--accent-h),
      calc(var(--accent-s) - 12%),
      97%,
      var(--bg-opacity)) !important ;
}

.theme-dark .excalidraw .excalidraw-textEditorContainer * {
  color: var(--text-on-accent) !important;
  filter: none !important;
}

/* #endregion excalidraw */
/* #region dbfolder */
body.link-icon .database-plugin__embed-link-wrapper a.internal-link[class*=database-plugin]::before {
  content: none;
}

/* #endregion dbfolder */
/* #region git */
.workspace-leaf-content[data-type=diff-view] .d2h-diff-table {
  font-family: var(--font-monospace);
}

body.back-blur-title-bar .workspace-leaf-content[data-type=diff-view] .d2h-file-diff {
  padding-top: var(--size-4-8);
}

/* #endregion git */
/* #region my-snippets */
.MySnippets-statusbar-menu {
  --interactive-normal: var(--accent-inactive);
}

/* #endregion my-snippets */
/* #region banners */
img.banner-image {
  border-radius: 0;
}

.obsidian-banner-spacer {
  height: 0;
}

.markdown-source-view .cm-content:has(.cm-line.has-banner) {
  padding-top: calc(var(--banner-height) - var(--size-4-8) + 1.5rem) !important;
}
.markdown-source-view .obsidian-banner-spacer {
  margin: 0 !important;
}

.markdown-preview-sizer > div.obsidian-banner-wrapper {
  position: initial !important;
  margin-top: var(--banner-height);
}

/* #endregion banners */
/* #region kanban */
body {
  --kanban-item-color: var(--setting-kanban-item-color, var(--text-normal));
  --kanban-item-bg: var(--setting-kanban-item-bg, hsl(var(--background-primary-hsl)));
  --kanban-board-bg: var(--setting-kanban-board-bg, hsl(var(--background-secondary-hsl)));
}

:is(.kanban-plugin, .kanban-plugin__item, .kanban-plugin__lane) button {
  line-height: normal;
  padding-block: 0;
}
:is(.kanban-plugin__item-action-add, .kanban-plugin__lane-action-add) {
  color: var(--accent-active);
}
:is(.kanban-plugin__item-action-add, .kanban-plugin__lane-action-add):hover {
  background-color: var(--accent-active);
  color: var(--text-on-accent);
}
.kanban-plugin__lane {
  background: var(--kanban-board-bg);
}
.kanban-plugin__lane-form-wrapper {
  background: var(--kanban-board-bg);
  border: 1px solid var(--background-modifier-border-hover);
  box-shadow: var(--shadow-s);
}
.kanban-plugin__lane-form-wrapper textarea {
  padding: var(--size-4-1) var(--size-2-3);
}
.kanban-plugin__grow-wrap > textarea, .kanban-plugin__grow-wrap:after {
  border-radius: var(--radius-s);
  box-sizing: border-box;
  transition: box-shadow var(--animation) !important;
}
.kanban-plugin__new-item-button {
  background-color: var(--kanban-item-bg) !important;
  transition: var(--animation);
}
.kanban-plugin__new-item-button:hover {
  color: var(--accent-active);
}
.kanban-plugin__item-form .kanban-plugin__item-input-wrapper {
  padding: 0;
  height: 100%;
}
.kanban-plugin__item-form .kanban-plugin__item-input-wrapper * {
  height: 100%;
}
.kanban-plugin__item-form .kanban-plugin__item-input-wrapper textarea {
  padding: var(--size-2-1) var(--size-2-3);
}
.kanban-plugin__item-title-wrapper {
  background: var(--kanban-item-bg);
}
.kanban-plugin__item-title-wrapper p {
  color: var(--kanban-item-color);
}
.kanban-plugin__item-title-wrapper:has(.kanban-plugin__item-input-wrapper) {
  background: var(--background-modifier-form-field);
}
.kanban-plugin__item-postfix-button {
  padding: var(--size-4-1);
  margin-left: var(--size-2-3);
  margin-right: calc(var(--size-2-1) * -1);
}
.kanban-plugin__lane-title .kanban-plugin__lane-input {
  padding-inline: var(--size-2-3);
}
.kanban-plugin__lane a[aria-label=Close] {
  padding: var(--size-4-1);
  margin-left: var(--size-2-3);
  margin-right: calc(var(--size-2-1) * -1);
}
.kanban-plugin__markdown-preview-view :is(ul, ol) {
  padding-inline-start: var(--size-4-8);
}
.kanban-plugin__markdown-preview-view :is(ul, ol) li {
  margin: 0 !important;
  line-height: var(--line-height-tight) !important;
}
.kanban-plugin__markdown-preview-view img {
  pointer-events: none !important;
}
.kanban-plugin__autocomplete {
  backdrop-filter: blur(var(--size-4-8));
  padding-inline: var(--size-2-2);
  animation: op var(--animation);
  border-radius: var(--radius-m);
  border: 1px solid var(--background-modifier-border);
  box-shadow: var(--shadow-s);
  z-index: var(--layer-notice);
}
.kanban-plugin__autocomplete-item, .kanban-plugin__autocomplete-item-active {
  border: none;
  border-radius: var(--radius-s);
  margin-block: var(--size-4-1) !important;
}
.kanban-plugin__autocomplete-item *, .kanban-plugin__autocomplete-item-active * {
  opacity: 1 !important;
  transition: none !important;
}
.kanban-plugin__autocomplete-item-active * {
  color: var(--text-on-accent) !important;
}
.kanban-plugin__autocomplete-item:hover {
  background-color: var(--background-modifier-hover);
  color: var(--text-normal);
}
.kanban-plugin * {
  caret-color: var(--accent-active);
}

.kanban-plugin__board-settings-modal :is(.is-open .choices__list--dropdown, .choices__list--dropdown) {
  background-color: var(--interactive-normal);
}
.kanban-plugin__board-settings-modal .choices {
  border: none;
  box-shadow: var(--input-shadow);
  border-radius: var(--input-radius);
  background-color: var(--interactive-normal);
}
.kanban-plugin__board-settings-modal .choices__inner {
  border-radius: var(--input-radius);
}
.kanban-plugin__board-settings-modal .choices__list {
  background-color: var(--interactive-normal);
}
.kanban-plugin__board-settings-modal .choices__list--dropdown {
  border-radius: var(--input-radius);
}
.kanban-plugin__board-settings-modal .choices__list--dropdown:focus {
  box-shadow: 0 0 0 3px var(--background-modifier-border-focus);
}
.kanban-plugin__board-settings-modal .choices__item--choice {
  border-radius: var(--radius-s);
}
.kanban-plugin__board-settings-modal .choices::after {
  content: var(--select-bg-img);
  width: 1.2rem;
  height: 1.2rem;
  border: none;
  margin-top: 0;
  translate: 0 -50%;
}
.kanban-plugin__board-settings-modal .choices[data-type*=select-one].is-open:after {
  margin-top: 0;
}

body.search-internal-enable .kanban-plugin__search-wrapper {
  width: fit-content;
  padding: var(--size-2-3) var(--size-2-3);
  position: absolute;
  background-color: var(--kanban-board-bg);
  border: 1px solid var(--background-modifier-border-hover);
  border-radius: var(--radius-m);
  left: unset;
  top: var(--size-2-3);
  right: var(--size-2-3);
}
body.search-internal-enable .kanban-plugin__search-wrapper a[aria-label=Cancel] {
  padding: var(--size-4-1);
  margin-left: var(--size-2-2);
}

/* #endregion kanban */
/* #region annotator */
hypothesis-app {
  --radius-base: 0.25rem;
}
hypothesis-app textarea {
  color: var(--text-normal) !important;
  border-bottom-left-radius: calc(var(--radius-base) * 4 / 5) !important;
  border-bottom-right-radius: calc(var(--radius-base) * 4 / 5) !important;
}
hypothesis-app .Hyp-Card {
  transition: var(--setting-animation-time, 200ms) ease;
  border-radius: calc(var(--radius-base) * 2);
}
hypothesis-app :is(.Hyp-LabeledButton, .Hyp-TextInput) {
  border-radius: var(--radius-base);
}

/* #endregion annotator */
/* #region dataview */
pre.dataview {
  border: 0 !important;
  padding-top: calc(var(--code-size) * var(--line-height-normal) * 0.7);
}
pre.dataview-error {
  font-family: var(--font-monospace);
}

pre.dataview-error::before {
  content: "DataView Error";
  color: var(--color-red);
  position: absolute;
  top: var(--size-4-1);
  font-weight: bold;
}

body.dv-enable .cm-embed-block:has(.dataview) {
  border-color: var(--accent-inactive);
}

/* #endregion dataview */
/* #region recent-files */
.workspace-leaf-content[data-type=recent-files] .nav-file-title {
  padding: var(--size-4-1) var(--size-4-2);
  border-radius: var(--radius-s);
}
.workspace-leaf-content[data-type=recent-files] .nav-file-title:hover {
  background-color: var(--nav-item-background-hover);
}
.workspace-leaf-content[data-type=recent-files] .nav-file-title:hover:not(.is-active) .recent-files-file-delete {
  color: var(--accent-active);
}
.workspace-leaf-content[data-type=recent-files] .nav-file-title.is-active {
  background-color: var(--accent-active);
}
.workspace-leaf-content[data-type=recent-files] .nav-file-title.is-active::after {
  content: none;
}
.workspace-leaf-content[data-type=recent-files] .recent-files-file-delete {
  color: var(--text-on-accent);
  transform: translateY(var(--size-4-1));
}

/* #endregion recent-files */
/* #region markmap */
body .markmap {
  font: var(--font-text-size) var(--font-text);
}
body .mm-toolbar {
  background-color: var(--status-bar-background);
  border-color: var(--status-bar-border-color);
}

/* #endregion markmap */
/* #region edit-toolbar */
body.search-internal-enable :is(.cMenuToolbarpopover + .document-search-container.top,
.document-search-container:has(+ #cMenuToolbarModalBar.top)) {
  top: var(--size-4-12);
  right: var(--size-2-2);
}

#cMenuToolbarModalBar.top {
  margin: var(--size-2-2);
}

/* #endregion edit-toolbar */
/* #region shiki */
body {
  --shiki-code-background: var(--setting-code-bg, var(--md-container-bg));
  --shiki-code-function: var(--color-orange);
  --shiki-code-important: var(--color-purple);
  --shiki-code-keyword: var(--color-purple);
  --shiki-code-property: var(--color-orange);
  --shiki-code-punctuation: var(--color-blue);
  --shiki-code-string: var(--color-green);
  --shiki-code-tag: var(--color-red);
  --shiki-code-value: var(--color-orange);
  --shiki-code-comment: var(--text-faint);
  --shiki-code-normal: var(--code-preview-base);
  --shiki-code-bg-radius: var(--setting-code-bg-radius, var(--radius-l));
  --shiki-code-bg-border: var(--size-2-1) solid var(--nav-item-background-hover);
}

/* #endregion shiki */
/* #endregion [plugins] */
/* #region [workspace] */
/* #region document-search */
.obsidian-search-match-highlight {
  background-color: var(--background-secondary);
}

body.search-internal-enable .document-search-container {
  background-color: hsl(var(--background-secondary-hsl)) !important;
  position: absolute;
  top: var(--size-4-2);
  right: var(--size-4-4);
  border-radius: var(--radius-m);
  height: fit-content;
  border: var(--size-2-1) solid var(--frame-outline-color);
  box-shadow: var(--shadow-s);
  margin: 0;
}
body.search-internal-enable .document-search-container .document-search-buttons .document-search-button {
  font-size: 0;
  background-color: transparent !important;
  color: var(--text-muted);
  cursor: var(--cursor);
  height: var(--input-height);
  width: var(--input-height);
  padding: var(--size-4-1);
  box-shadow: unset !important;
}
body.search-internal-enable .document-search-container .document-search-buttons .document-search-button:hover {
  background-color: var(--background-modifier-hover) !important;
  color: var(--text-normal);
}

.markdown-source-view,
.markdown-reading-view {
  container-type: inline-size;
}

@container (max-width: 390px) {
  body.search-internal-enable .document-search-container {
    width: calc(100% - 2 * var(--size-4-3));
  }
  body.search-internal-enable .document-search-container :is(.document-search-input, .document-replace-input) {
    min-width: 0;
  }
}
@container (max-width: 320px) {
  body.search-internal-enable .document-search-container :is(.document-search-buttons [aria-label="Shift + F3"], .document-replace-buttons [aria-label="Ctrl + Alt + Enter"]) {
    display: none;
  }
}
/* #endregion document-search */
/* #region modal */
body {
  --modal-width: min(90vw, var(--modal-max-width));
  --modal-height: min(85vh, var(--modal-max-height));
}

:is(.horizontal-tab-nav-item, .vertical-tab-nav-item).is-active {
  background-color: var(--nav-item-background-active) !important;
}

.modal-close-button {
  height: var(--input-height);
  width: var(--input-height);
  transition: var(--animation);
  padding: 3px;
}
.modal-close-button::before {
  content: " " !important;
  display: block;
  height: var(--size-4-6);
  width: var(--size-4-6);
  background-color: currentColor;
  -webkit-mask-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3e%3cpath stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M17.25 17.25 6.75 6.75m10.5 0-10.5 10.5'/%3e%3c/svg%3e");
}
.modal-close-button:hover {
  background-color: var(--frame-outline-color);
}

body.titlebar-colorful .modal-container .mod-settings::before {
  --setting-color-logo: var(--text-on-accent);
}

input {
  transition-duration: var(--setting-animation-time, 200ms) !important;
}

body.modal-slider input[type=range]::-webkit-slider-thumb {
  height: 1.6em;
  width: var(--size-4-1);
  background-color: var(--text-muted);
  position: relative;
  top: 50%;
  transform: translateY(-50%);
  border-radius: var(--radius-m);
}
body.modal-slider input[type=range]::-webkit-slider-thumb:hover {
  box-shadow: none;
}

body:is(.modal-toggle-round, .modal-toggle-thin) .checkbox-container {
  --toggle-radius: var(--radius-m);
  height: var(--size-4-4);
  transition: var(--animation-slow);
  border: var(--size-2-1) solid var(--text-faint);
  background-color: var(--color-base-20);
  cursor: pointer;
}
body:is(.modal-toggle-round, .modal-toggle-thin) .checkbox-container input[type=checkbox] {
  display: none;
}

body.modal-toggle-round .checkbox-container {
  --toggle-shadow: var(--color-base-40);
}
body.modal-toggle-round .checkbox-container::after {
  left: 0;
  height: calc(var(--toggle-width) / 3);
  width: calc(var(--toggle-width) / 3);
  bottom: 30%;
  border-radius: calc(var(--toggle-width) / 2);
  border: var(--toggle-border-width) solid var(--text-faint);
  background-color: var(--text-on-accent);
  margin: 0;
  transition: var(--animation-slow);
  box-shadow: 0 4px 2px 0 var(--toggle-shadow);
}
:is(body.modal-toggle-round .checkbox-container:hover, body.modal-toggle-round .checkbox-container:focus)::after {
  bottom: 10%;
  box-shadow: 0 2px 2px 0 var(--toggle-shadow);
}
body.modal-toggle-round .checkbox-container.is-enabled {
  border-color: var(--accent-active);
  background-color: var(--accent-inactive);
}
body.modal-toggle-round .checkbox-container.is-enabled::after {
  border-color: var(--accent-active);
  transform: none;
  left: calc(100% - var(--toggle-width) / 3 - 3 * var(--toggle-border-width));
}

/* 参考 https://uiverse.io/martinval9/white-lionfish-18 */
body.modal-toggle-thin .checkbox-container::before {
  height: var(--toggle-border-width);
  left: calc(var(--toggle-border-width) * 2);
  right: calc(var(--toggle-border-width) * 2);
  opacity: 1;
  top: 50%;
  bottom: initial;
  transform: translateY(-50%);
  background-color: var(--text-faint);
}
body.modal-toggle-thin .checkbox-container::after {
  left: var(--toggle-border-width);
  height: var(--size-4-3);
  bottom: 50%;
  border-radius: var(--radius-m) var(--radius-m) 0 0;
  border: var(--toggle-border-width) solid var(--text-faint);
  border-bottom-width: calc(var(--toggle-border-width) / 2);
  background-color: var(--text-on-accent);
  width: 20%;
  margin: 0;
  transition: var(--animation-slow);
}
body.modal-toggle-thin .checkbox-container:hover::after {
  height: var(--size-4-2);
}
body.modal-toggle-thin .checkbox-container:active::after {
  width: calc(100% - var(--toggle-border-width) * 6);
}
body.modal-toggle-thin .checkbox-container.is-enabled {
  border-color: var(--accent-active);
  background-color: var(--accent-inactive);
}
body.modal-toggle-thin .checkbox-container.is-enabled::before {
  background-color: var(--accent-active);
}
body.modal-toggle-thin .checkbox-container.is-enabled::after {
  border-color: var(--accent-active);
  transform: none;
  left: calc(80% - var(--toggle-border-width) * 4);
}
body.modal-toggle-thin .checkbox-container.is-enabled:active::after {
  left: calc(2 * var(--toggle-border-width));
}

body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container {
  --modal-header-height: var(--size-4-12);
  --top-search-right: var(--size-4-12);
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings {
  container-type: inline-size;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings::before {
  content: var(--setting-header-title, "maple 0.8.34");
  position: absolute;
  left: 50%;
  top: var(--size-4-6);
  transform: translate(-50%, -50%);
  font-size: calc(1.4 * var(--size-4-4));
  font-weight: bold;
  color: var(--setting-color-logo, var(--text-accent));
  transition: var(--animation);
}
@container (max-width:750px) {
  body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings::before {
    opacity: 0;
  }
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content {
  background-color: var(--frame-background-color);
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .vertical-tab-header {
  background-color: hsl(var(--background-secondary-hsl));
  border-top: 1px solid var(--divider-color);
  margin-top: var(--modal-header-height);
  padding-top: 0;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .vertical-tab-content-container {
  padding-top: var(--modal-header-height);
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .vertical-tab-content-container .vertical-tab-content {
  background-color: hsl(var(--background-primary-hsl));
  border-top: 1px solid var(--divider-color);
  padding-top: var(--size-4-6);
  padding-right: var(--size-4-8);
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .vertical-tab-content-container .vertical-tab-content h2 {
  font-size: var(--h2-size);
  font-weight: var(--h2-weight);
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .settings-search-container {
  padding: 0;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .settings-search-container .settings-search-input {
  position: absolute;
  top: calc(var(--size-2-1) * -1);
  left: var(--size-4-2);
  transform: translateY(calc((var(--modal-header-height) - var(--input-height)) / 2 - var(--size-2-1)));
  width: calc(clamp(180px, var(--modal-width) / 4, 250px) - var(--size-4-3) * 1);
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .setting-item-heading {
  margin-top: 0;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .setting-item:has(.search-input-container.mod-hotkey) {
  padding-bottom: 0;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .setting-item:has(.search-input-container.mod-hotkey) .setting-item-info {
  display: none;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .setting-item:has(.search-input-container.mod-hotkey) .setting-item-control {
  top: calc(var(--size-2-1) * -1);
  transform: translateY(calc((var(--modal-header-height) - var(--input-height)) / 2 + var(--size-2-1)));
  right: var(--top-search-right);
  position: absolute;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .setting-item:has(.search-input-container.mod-hotkey) + .setting-filter-container {
  display: none;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .plugin-list-plugins > .setting-item {
  padding: 0;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .plugin-list-plugins > .setting-item .setting-item-info {
  display: none;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .plugin-list-plugins > .setting-item .setting-item-control {
  display: block;
  position: absolute;
  top: calc(var(--size-2-1) * -1);
  transform: translateY(calc((var(--modal-header-height) - var(--input-height)) / 2 + var(--size-2-1)));
  right: var(--top-search-right);
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .setting-item-name:has(.search-input-container) {
  position: absolute;
  top: calc(var(--size-2-1) * -1);
  transform: translateY(calc((var(--modal-header-height) - var(--input-height)) / 2 + var(--size-2-1)));
  right: var(--top-search-right);
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .vertical-tab-content > :nth-child(5):not(.style-settings-container):has(input[type=search]) {
  position: absolute;
  top: calc(var(--size-2-1) * -1);
  transform: translateY(calc(var(--modal-header-height) / 2 - var(--input-height) + var(--size-4-1)));
  right: var(--top-search-right);
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .vertical-tab-content > :nth-child(5):not(.style-settings-container):has(input[type=search]) .setting-item-info {
  display: none;
}

select,
.dropdown,
button {
  transition: var(--animation);
}

.theme-light {
  --select-bg-img: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="%23222" d="M12 14.975q-.2 0-.387-.075q-.188-.075-.313-.2l-4.6-4.6q-.275-.275-.275-.7q0-.425.275-.7q.275-.275.7-.275q.425 0 .7.275l3.9 3.9l3.9-3.9q.275-.275.7-.275q.425 0 .7.275q.275.275.275.7q0 .425-.275.7l-4.6 4.6q-.15.15-.325.212q-.175.063-.375.063Z"/></svg>');
}

.theme-dark {
  /* current color seems to be invalid for SVG in background-image */
  --select-bg-img: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="%23eee" d="M12 14.975q-.2 0-.387-.075q-.188-.075-.313-.2l-4.6-4.6q-.275-.275-.275-.7q0-.425.275-.7q.275-.275.7-.275q.425 0 .7.275l3.9 3.9l3.9-3.9q.275-.275.7-.275q.425 0 .7.275q.275.275.275.7q0 .425-.275.7l-4.6 4.6q-.15.15-.325.212q-.175.063-.375.063Z"/></svg>');
}

:is(select, .dropdown) {
  background-size: calc(1.2 * var(--size-4-4));
  background-position: right calc(0.4 * var(--size-4-4)) top 56%, 0 0;
  background-image: var(--select-bg-img) !important;
}

.modal-container .is-loading {
  position: initial;
}
.modal-container .modal-close-button {
  top: 9px;
  right: 9px !important;
}
.modal-container :is(.mod-community-plugin, .mod-community-theme) .modal-sidebar .setting-item:first-child {
  max-width: var(--modal-community-sidebar-width);
}
.modal-container .mod-settings .modal-content .setting-hotkey {
  box-shadow: var(--shadow-s);
  border: 2px solid var(--accent-inactive);
  border-radius: var(--size-2-3);
  font-size: var(--font-ui-smaller);
  padding: 1px var(--size-4-2);
  transition: var(--animation);
}
.modal-container .mod-settings .modal-content .setting-hotkey .setting-hotkey-icon {
  margin-right: calc(-1 * var(--size-4-1));
}
.modal-container .mod-settings .modal-content .setting-hotkey:hover {
  border-color: var(--accent-active);
}
.modal-container .mod-settings .modal-content .setting-hotkey.mod-active {
  color: var(--text-faint);
  background-color: var(--frame-background-color);
}
.modal-container .mod-settings .modal-content .setting-hotkey:not(.has-conflict):not(.mod-active) {
  background-color: var(--code-background);
}
.modal-container .mod-settings .modal-content .setting-item-heading .setting-item-name {
  font-weight: bold;
  font-size: var(--font-ui-medium);
}

body.setting-group-title.theme-dark .modal-container .mod-settings .modal-content .vertical-tab-header-group-title {
  filter: brightness(1.4);
}

body.setting-group-title .modal-container .mod-settings .modal-content .vertical-tab-header-group {
  padding-bottom: 0;
}
body.setting-group-title .modal-container .mod-settings .modal-content .vertical-tab-header-group-title {
  color: var(--accent-active);
  font-size: var(--size-4-4);
  position: relative;
}
body.setting-group-title .modal-container .mod-settings .modal-content .vertical-tab-header-group-title::before {
  content: "";
  position: absolute;
  height: calc(100% - var(--size-4-4));
  width: var(--size-4-1);
  top: var(--size-4-2);
  left: calc(var(--size-4-1) * -1);
  background-color: var(--accent-active);
  border-radius: var(--size-2-1);
}

:is(.menu, .prompt, :not(.excalidraw) .popover, .modal, .modal-bg, .document-search-container, .suggestion-container) {
  animation: op var(--animation);
}

body.modal-animation :is(.prompt, .popover, .modal) {
  animation: op var(--animation), bounce var(--animation);
}

@keyframes op {
  0% {
    opacity: 0;
  }
  30% {
    opacity: 0.7;
  }
  70% {
    opacity: 0.95;
  }
  100% {
    opacity: 1;
  }
}
@keyframes bounce {
  0% {
    transform: scale(0.99);
  }
  70% {
    transform: scale(1.01);
  }
  100% {
    transform: scale(1);
  }
}
:is(.menu-normal .menu, .menu-suggestion .suggestion-container, .menu-graph .graph-control-section) {
  background-color: hsla(var(--background-secondary-hsl), 0.5) !important;
  backdrop-filter: blur(var(--size-4-8));
  will-change: backdrop-filter;
}

body.modal-blur .modal-bg {
  opacity: 1 !important;
  background-color: hsla(var(--background-secondary-hsl), 0.5) !important;
  backdrop-filter: blur(var(--size-4-1));
  will-change: backdrop-filter;
}

.mod-search-suggestion .suggestion {
  background-color: transparent;
}

/* #endregion modal */
/* #region scrollbar */
@property --scrollbar-color {
  syntax: "<color>";
  inherits: true;
  initial-value: rgba(0, 0, 0, 0);
}
/* ! `overflow: overlay` is deprecated, Chrome >= 114 (Obsidian 1.4) is equal to `overflow: auto` */
/* !Chrome >= 121 no longer support `-webkit-scrollbar-*`, no effect currently */
/* usage of `@property`: https://stackoverflow.com/a/74050413/20058211 */
/* usage of `-webkit-text-fill-color`: https://stackoverflow.com/a/46304690/20058211 */
body:not(.is-mobile):not(.mod-macos) .mod-settings :is(.vertical-tab-content, .vertical-tab-header) {
  scrollbar-gutter: stable;
}
body:not(.is-mobile):not(.mod-macos).scrollbar-hover-accent {
  --setting-scrollbar-hover: hsla(var(--color-accent-hsl), 40%);
}
body:not(.is-mobile):not(.mod-macos).scrollbar-hover-expand ::-webkit-scrollbar-thumb:hover, body:not(.is-mobile):not(.mod-macos).scrollbar-hover-expand ::-webkit-scrollbar-thumb:active {
  border-width: var(--size-2-1) !important;
}
body:not(.is-mobile):not(.mod-macos) ::-webkit-scrollbar {
  width: var(--size-4-3) !important;
  height: var(--size-4-3) !important;
  background-color: transparent !important;
}
body:not(.is-mobile):not(.mod-macos) ::-webkit-scrollbar-track {
  background-color: transparent !important;
  box-shadow: none !important;
}
body:not(.is-mobile):not(.mod-macos) ::-webkit-scrollbar-thumb {
  border-radius: var(--size-2-3) !important;
  border: 3.6px solid transparent !important;
  background-color: var(--scrollbar-color) !important;
}
body:not(.is-mobile):not(.mod-macos) ::-webkit-scrollbar-thumb:hover {
  --scrollbar-color: var(--setting-scrollbar-hover);
}
body:not(.is-mobile):not(.mod-macos) ::-webkit-scrollbar-thumb:active {
  --scrollbar-color: hsla(var(--color-accent-hsl), 64%);
}
body:not(.is-mobile):not(.mod-macos):not(.scrollbar-movein-animation-enable) {
  --scrollbar-color: hsla(var(--color-accent-hsl), 24%);
}
body:not(.is-mobile):not(.mod-macos).scrollbar-movein-animation-enable :is(.vertical-tab-header, .vertical-tab-content, .nav-files-container, .workspace-leaf-content:not([data-type*=graph], [data-type*=pdf]) .view-content, .search-result-container, .git-view-body, .suggestion-container .suggestion, .prompt-results, .community-modal-search-results-wrapper, .community-modal-info, .modal:not(.mod-settings, .mod-community-theme, .mod-community-plugin), .tag-container, .backlink-pane, .markdown-source-view .cm-scroller, .markdown-preview-view, .workspace .mod-root .workspace-tabs.mod-stacked .workspace-tab-container, .markdown-embed-content .markdown-rendered, pre code, .workspace-leaf-content[data-type=calendar] .view-content, .janitor-scan-results, .excalidraw-wrapper :is(.App-menu .Stack .Island.App-menu__left, .scrollbar), .excalidraw-contextMenuContainer .popover, .kanban-plugin__board, .kanban-plugin__lane-items, .kanban-plugin__autocomplete) {
  transition: --scrollbar-color var(--animation);
}
body:not(.is-mobile):not(.mod-macos).scrollbar-movein-animation-enable :is(.vertical-tab-header, .vertical-tab-content, .nav-files-container, .workspace-leaf-content:not([data-type*=graph], [data-type*=pdf]) .view-content, .search-result-container, .git-view-body, .suggestion-container .suggestion, .prompt-results, .community-modal-search-results-wrapper, .community-modal-info, .modal:not(.mod-settings, .mod-community-theme, .mod-community-plugin), .tag-container, .backlink-pane, .markdown-source-view .cm-scroller, .markdown-preview-view, .workspace .mod-root .workspace-tabs.mod-stacked .workspace-tab-container, .markdown-embed-content .markdown-rendered, pre code, .workspace-leaf-content[data-type=calendar] .view-content, .janitor-scan-results, .excalidraw-wrapper :is(.App-menu .Stack .Island.App-menu__left, .scrollbar), .excalidraw-contextMenuContainer .popover, .kanban-plugin__board, .kanban-plugin__lane-items, .kanban-plugin__autocomplete):hover {
  --scrollbar-color: hsla(var(--color-accent-hsl), 24%);
}
body:not(.is-mobile):not(.mod-macos).scrollbar-movein-animation-enable textarea {
  color: transparent;
  transition: color var(--animation);
  -webkit-text-fill-color: var(--text-normal);
}
body:not(.is-mobile):not(.mod-macos).scrollbar-movein-animation-enable textarea:hover {
  color: hsla(var(--color-accent-hsl), 24%);
}
body:not(.is-mobile):not(.mod-macos).scrollbar-movein-animation-enable textarea * {
  -webkit-text-fill-color: initial;
}
body:not(.is-mobile):not(.mod-macos).scrollbar-movein-animation-enable textarea::-webkit-scrollbar-thumb {
  box-shadow: 0 0 0 10px inset;
  border-width: 3.2px;
  background-clip: content-box;
  background-color: transparent !important;
}

body.scrollbar-hide :not([style="overflow-x: auto;"])::-webkit-scrollbar {
  display: none !important;
}

/* #endregion scrollbar */
/* #region tab */
body.tab-float {
  --tab-radius: var(--size-2-3);
}
body.tab-float .workspace-tab-header-container {
  --tab-outline-width: 0 !important;
  padding-left: 0;
}
body.tab-float .mod-root .workspace-tab-header-container-inner {
  margin-top: var(--size-4-1);
  padding-bottom: var(--size-4-1);
  padding-left: var(--size-4-1);
}
body.tab-float .mod-root .workspace-tab-header {
  padding-block: 0 !important;
  transition: color var(--animation), width var(--animation);
}
body.tab-float .mod-root .workspace-tab-header.is-active {
  --tab-radius-active: var(--size-2-3);
  box-shadow: var(--shadow-s);
}
body.tab-float .mod-root .workspace-tab-header .workspace-tab-header-inner-close-button {
  padding: var(--size-2-1);
}
body.tab-float .mod-root .workspace-tab-header .workspace-tab-header-inner-close-button:hover {
  background-color: var(--frame-background-color);
}
body.tab-float .mod-root .workspace-tabs:not(.mod-stacked):not(.mod-active) .workspace-tab-header.is-active {
  --tab-background-active: hsla(var(--background-primary-hsl), 0.5);
}
body.tab-float.theme-dark .mod-root .workspace-tab-header.is-active {
  box-shadow: none;
}
body.tab-float .workspace-split.mod-root .workspace-tab-header.is-active::before, body.tab-float .workspace-split.mod-root .workspace-tab-header.is-active::after {
  box-shadow: none;
}
body.tab-float .workspace-tab-header-new-tab {
  padding-top: var(--size-4-1);
  margin-left: calc(var(--size-4-3) * -1);
}

.view-header-title-parent:empty + .view-header-title {
  max-width: 70%;
  text-align: center;
  cursor: text;
}
.view-header-title-parent:not(:empty) + .view-header-title:after {
  content: "";
  width: 20%;
  inset-block: 0;
  position: absolute;
  cursor: text;
}

body.tab-show-close-all .mod-root .workspace-tab-header .workspace-tab-header-inner-close-button,
body.tab-show-close-part .mod-root .workspace-tab-header:not(.is-active) .workspace-tab-header-inner-close-button {
  display: none;
}
body.tab-show-close-all .mod-root .workspace-tab-header:hover .workspace-tab-header-inner-close-button,
body.tab-show-close-part .mod-root .workspace-tab-header:not(.is-active):hover .workspace-tab-header-inner-close-button {
  display: inherit;
}

body.tab-title-bar-text-small .view-header {
  --file-header-font-size: calc(var(--font-ui-smaller) - var(--size-2-1));
}

body.tab-title-bar-text-hidden .workspace-leaf-content:not([data-type=excalidraw]) .view-header-title-container {
  opacity: 0;
  transition: var(--animation);
  transition-delay: var(--animation-delay);
}
body.tab-title-bar-text-hidden .workspace-leaf-content:not([data-type=excalidraw]) .view-header-title-container:hover {
  opacity: 1;
  transition-delay: 0s;
}

body.tab-title-bar-round .workspace-leaf-content:not([data-type=excalidraw]) .view-header {
  margin: var(--size-4-1);
  margin-bottom: 0;
  padding: 0 var(--size-2-3) !important;
  border: var(--size-2-1) solid var(--background-modifier-hover);
  border-radius: var(--radius-m);
  transition: var(--animation);
  width: calc(100% - var(--size-4-2)) !important;
  background-color: hsl(var(--background-secondary-hsl));
}
body.tab-title-bar-round .workspace-leaf-content:not([data-type=excalidraw]) .view-header .view-header-title-container:after {
  content: none;
}
body.tab-title-bar-round .workspace-leaf.mod-active .workspace-leaf-content:not([data-type=excalidraw]) .view-header {
  background-color: var(--md-container-bg);
}
body.tab-title-bar-round.tab-title-bar-shadow .workspace-leaf.mod-active .workspace-leaf-content:not([data-type=excalidraw]) .view-header {
  box-shadow: 0 0 var(--size-2-1) var(--background-modifier-box-shadow);
}

/* 切换标签动画，参考 https://github.com/hydescarf/Obsidian-Theme-Mado-Miniflow */
body.tab-slide-up :is(.workspace-split .workspace-tabs:not(.mod-stacked) .workspace-leaf-content:not([data-type=pdf]) .view-content, .workspace-leaf-content:not(:has(.view-content))) {
  animation: slide-up var(--animation) forwards;
}

@keyframes slide-up {
  0% {
    transform: translateY(0%);
    opacity: 0;
  }
  15% {
    transform: translateY(1px);
    opacity: 0;
  }
  25% {
    transform: translateY(2px);
  }
  45% {
    opacity: 0.5;
  }
  65% {
    opacity: 0.7;
  }
  100% {
    transform: translateY(0%);
    opacity: 1;
  }
}
.is-sidedock-collapsed {
  opacity: 0;
  transition: var(--animation);
}

.search-result-file-matches {
  border-radius: var(--radius-m);
}

body {
  --divider-color: #8883;
}

/* #endregion tab */
/* #region titlebar */
body.titlebar-button-style.is-hidden-frameless:is(.mod-windows, .mod-linux) .titlebar-button {
  padding: 0 14px;
}
body.titlebar-button-style.is-hidden-frameless:is(.mod-windows, .mod-linux) .titlebar-button svg {
  width: 100%;
  height: 32%;
}
body.titlebar-button-style.is-frameless:not(.is-hidden-frameless):is(.mod-windows, .mod-linux) .titlebar-button svg:not([class*=logo]) {
  width: 100%;
  height: 42%;
}
body.titlebar-button-style .titlebar-button.mod-close:hover {
  color: var(--text-on-accent);
}
body.titlebar-button-style .workspace-tab-header-new-tab {
  padding-bottom: var(--size-2-1);
}

.theme-light {
  --ribbon-background: hsla(calc(var(--accent-h) + 16),
      calc(var(--accent-s) / 1.2),
      calc(100% - (100% - var(--accent-l)) / 4),
      60%);
}

.theme-dark {
  --ribbon-background: hsla(calc(var(--accent-h) + 16),
      calc(var(--accent-s) / 1.5),
      calc(var(--accent-l) - 40%),
      60%);
}

.workspace-ribbon.mod-left {
  border-right: 0;
  --ribbon-background-collapsed: var(--ribbon-background);
}
.workspace-ribbon.mod-left::before {
  height: var(--header-height);
  border-bottom: 0;
}

/* 参考 minimal theme */
:is(body, body.is-focused) :is(.mod-top .workspace-tab-header-container, .sidebar-toggle-button.mod-left, .titlebar),
:is(body, body.is-focused) .workspace-ribbon.mod-left::before {
  --titlebar-container: var(--frame-outline-color);
  --frame-divider-color: var(--frame-outline-color);
  --titlebar-background: var(--frame-background-color);
  --titlebar-background-focused: var(--frame-background-color);
  --tab-container-background: var(--frame-background-color);
  --titlebar-text-color: var(--frame-muted-color);
  --tab-outline-color: var(--frame-outline-color);
  --tab-divider-color: var(--frame-outline-color);
  --background-modifier-hover: var(--frame-outline-color);
  --icon-color: var(--frame-muted-color);
  --icon-color-hover: var(--frame-muted-color);
  --icon-color-focused: var(--color-base-100);
  --tab-text-color: var(--frame-muted-color);
  --tab-text-color-hover: var(--frame-muted-color);
  --tab-text-color-focused: var(--frame-muted-color);
}
:is(body, body.is-focused) .clickable-icon:active {
  color: var(--text-normal);
}

.workspace.is-left-sidedock-open .sidebar-toggle-button.mod-left .clickable-icon,
.workspace.is-right-sidedock-open .sidebar-toggle-button.mod-right .clickable-icon {
  color: var(--color-accent);
}

body.titlebar-colorful.theme-light {
  --frame-background-color: hsl(var(--accent-h),
      var(--accent-s),
      calc(var(--accent-l) + 18%));
  --frame-outline-color: hsl(var(--accent-h),
      var(--accent-s),
      calc(var(--accent-l) + 23.5%));
  --frame-muted-color: hsl(var(--accent-h),
      calc(var(--accent-s) - 20%),
      ar(--accent-l));
}
body.titlebar-colorful.theme-dark {
  --frame-background-color: hsl(var(--accent-h), 12%, 38%);
  --frame-outline-color: hsl(calc(var(--accent-h) - 6),
      calc(var(--accent-s) + 12%),
      40%);
  --frame-muted-color: hsl(var(--accent-h),
      calc(var(--accent-s) - 20%),
      calc(var(--accent-l) + 20%));
}
body.titlebar-colorful .workspace.is-left-sidedock-open .sidebar-toggle-button.mod-left .clickable-icon,
body.titlebar-colorful .workspace.is-right-sidedock-open .sidebar-toggle-button.mod-right .clickable-icon {
  color: var(--text-on-accent);
}
body.titlebar-colorful :is(.document-search-close-button, .modal-close-button)::before {
  background-color: var(--text-normal);
}

/* #endregion titlebar */
/* #region print */
body.export-pdf-transparent .print {
  --background-primary: transparent;
}

.print code {
  white-space: pre-wrap !important;
}
.print :is(.markdown-preview-view, .markdown-rendered) {
  background-color: var(--background-primary) !important;
}
.print pre::before {
  right: var(--size-4-2) !important;
}
.print pre code {
  tab-size: 4;
}

/* #endregion print */
/* #region statusbar */
body {
  --stauts-bar-background-opacity: 1;
}
body.theme-light .status-bar {
  --status-bar-background: hsla(var(--accent-h),
      var(--accent-s),
      calc(100% - (100% - var(--accent-l)) / 8),
      var(--stauts-bar-background-opacity));
}
body.theme-dark .status-bar {
  --status-bar-background: hsla(var(--accent-h),
      var(--accent-s),
      calc(var(--accent-l) / 3),
      var(--stauts-bar-background-opacity));
}

body.status-bar-enable .status-bar {
  padding: var(--size-2-1) var(--size-4-1);
  width: fit-content;
  transition: var(--animation);
}
body.status-bar-enable.status-bar-hidden .status-bar {
  opacity: 0;
  transition-delay: var(--animation-delay);
}
body.status-bar-enable.status-bar-hidden .status-bar:hover {
  transition-delay: 0s;
  opacity: 1;
}
body.status-bar-enable.status-bar-style-float .status-bar {
  --status-bar-radius: var(--size-2-3);
  --status-bar-border-width: 1px;
  bottom: var(--size-4-1);
  right: var(--size-4-1);
  box-shadow: 0 0 var(--size-2-1) var(--background-modifier-box-shadow);
}
body.status-bar-enable.status-bar-style-float.status-bar-style-center:is(.status-bar-default, .status-bar-hidden) .status-bar {
  left: 50%;
  transform: translateX(-50%);
}
body.status-bar-enable.status-bar-style-float.status-bar-scroll .status-bar {
  transform: translateX(calc(100% - var(--size-4-2)));
  transition-delay: var(--animation-delay);
  right: 0;
  padding: var(--size-4-1);
}
body.status-bar-enable.status-bar-style-float.status-bar-scroll .status-bar:hover {
  transform: translateX(0);
  transition-delay: 0s;
}

/* #endregion statusbar */
/* #region icons */
.modal svg[class*=lucide-folder] {
  --icon-size: 20px;
}

svg.lucide-layout-dashboard rect {
  rx: 1.8;
  stroke-width: 2;
}

svg.excalidraw-icon {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none"><g stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 19l7-7l3 3l-7 7l-3-3z"/><path d="M18 13l-1.5-7.5L2 2l3.5 14.5L13 18l5-5z"/><path d="M2 2l7.586 7.586"/><circle cx="11" cy="11" r="2"/></g></svg>');
}

svg.spreadsheet {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><rect width="18" height="18" x="3" y="3" rx="2" ry="2"/><path d="M3 9h18M3 15h18M12 3v18"/></g></svg>');
}

svg[class*=lucide-folder] {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256"><path fill="currentColor" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M216 72h-85.3l-27.8-20.8a15.6 15.6 0 0 0-9.6-3.2H40a16 16 0 0 0-16 16v136a16 16 0 0 0 16 16h176a16 16 0 0 0 16-16V88a16 16 0 0 0-16-16ZM93.3 96H40V64h53.3l21.4 16l-21.4 16M216 200H40v-88h53.3a15.6 15.6 0 0 0 9.6-3.2L130.7 88H216Z"/></svg>');
}

svg.lucide-sticky-note {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.4"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z"/><path d="M14 2v6h6m-8 10v-6m-3 3h6"/></g></svg>');
}

svg.lucide-image {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /><path d="M14 2v6h6" /><circle cx="10" cy="13" r="2" /><path d="m20 17l-1.09-1.09a2 2 0 0 0-2.82 0L10 22" /></g></svg>');
}

svg.lucide-file {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z"/><path d="M14 2v6h6m-4 5H8m8 4H8m2-8H8"/></g></svg>');
}

svg.lucide-copy {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M9 5H7a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2" /><rect width="6" height="4" x="9" y="3" rx="2" /><path d="M9 12h6m-6 4h6" /></g></svg>');
}

svg.database-folder-icon {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="3.5"><path d="M44 31c0 5.523-4.477 10-10 10c-1.79 0-3.472-.47-4.926-1.295A10.01 10.01 0 0 1 24 31c0-2.568.968-4.91 2.558-6.68A9.975 9.975 0 0 1 34 21c5.523 0 10 4.477 10 10Z"/><path d="M34 12v9a9.975 9.975 0 0 0-7.442 3.32A9.963 9.963 0 0 0 24 31a10.01 10.01 0 0 0 5.074 8.705C26.412 40.51 22.878 41 19 41c-8.284 0-15-2.239-15-5V12"/><path d="M34 12c0 2.761-6.716 5-15 5c-8.284 0-15-2.239-15-5s6.716-5 15-5c8.284 0 15 2.239 15 5ZM4 28c0 2.761 6.716 5 15 5c1.807 0 3.54-.106 5.144-.302M4 20c0 2.761 6.716 5 15 5c2.756 0 5.339-.248 7.558-.68M34 41s-3.5-5.862-3.5-10c0-4.137 3.5-10 3.5-10m0 20s3.5-5.862 3.5-10c0-4.137-3.5-10-3.5-10m10 10H24"/></g></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content:is([data-type=file-explorer]) .nav-files-container svg.right-triangle {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 42 42"><path d="M24.833 12.5H40.25a3.75 3.75 0 0 1 3.745 3.55l.005.2v19a3.75 3.75 0 0 1-3.55 3.745l-.2.005H7.75a3.75 3.75 0 0 1-3.745-3.55L4 35.25V18.999L17.804 19l.226-.007a3.75 3.75 0 0 0 2.547-1.219l.147-.172 4.109-5.102zM17.061 9c.832 0 1.639.277 2.294.784l.175.144 2.444 2.138-3.197 3.968-.094.105c-.2.197-.46.322-.739.353l-.14.008L4 16.499V12.75a3.75 3.75 0 0 1 3.55-3.745L7.75 9h9.31z" fill="currentColor"/></svg>');
}

body.titlebar-button-style .mod-maximize svg {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 12 12"><rect x="2" y="2" width="8" height="8" rx="1.5" stroke="currentColor" stroke-width="0.8" fill="none"/></svg>');
}

body.titlebar-button-style.is-maximized .mod-maximize svg {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1024 1024"><g fill="none" stroke="currentColor" stroke-width="60" stroke-linecap="round" stroke-linejoin="round"><path d="M602 932H234c-77.3 0-140-62.7-140-140V424c0-77.3 62.7-140 140-140h368c77.3 0 140 62.7 140 140v368c0 77.3-62.7 140-140 140z" /><path d="M284 284v-50c0-77.3 62.7-140 140-140h368c77.3 0 140 62.7 140 140v368c0 77.3-62.7 140-140 140h-50" /></g></svg>');
}

:is(:is(body.titlebar-button-style .mod-maximize, body.titlebar-button-style.is-maximized .mod-maximize, body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content:is([data-type=file-explorer]) .nav-files-container) svg, svg:is(.excalidraw-icon, .spreadsheet, [class*=lucide-folder], .lucide-sticky-note, .lucide-image, .lucide-file, .lucide-copy, .database-folder-icon)) {
  background-color: currentColor;
  -webkit-mask-size: 100% 100%;
}
:is(:is(body.titlebar-button-style .mod-maximize, body.titlebar-button-style.is-maximized .mod-maximize, body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content:is([data-type=file-explorer]) .nav-files-container) svg, svg:is(.excalidraw-icon, .spreadsheet, [class*=lucide-folder], .lucide-sticky-note, .lucide-image, .lucide-file, .lucide-copy, .database-folder-icon)) path {
  display: none;
}

.markdown-rendered pre .copy-code-button {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M9 5H7a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2" /><rect width="6" height="4" x="9" y="3" rx="2" /><path d="M9 12h6m-6 4h6" /></g></svg>');
}

:where(body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title, body.link-icon :is(:is(.markdown-source-view, .markdown-preview-view) a.internal-link:not(.is-unresolved), .cm-hmd-internal-link .cm-underline))::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z"/><path d="M14 2v6h6m-4 5H8m8 4H8m2-8H8"/></g></svg>');
}

body.link-icon:not(.link-click-to-edit-in-live-preview) :is(:is(.markdown-source-view, .markdown-preview-view) a.external-link, :is(.cm-link:not(.cm-hmd-footnote), .cm-url) .cm-underline)::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="svg-icon lucide-link"><path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path><path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path></svg>');
}

.workspace-leaf-content[data-type=tag] .tree-item-self::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M12.586 2.586A2 2 0 0 0 11.172 2H4a2 2 0 0 0-2 2v7.172a2 2 0 0 0 .586 1.414l8.704 8.704a2.426 2.426 0 0 0 3.42 0l6.58-6.58a2.426 2.426 0 0 0 0-3.42z"/><circle cx="7.5" cy="7.5" r=".5" fill="currentColor"/></g></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is(.is-unsupported)::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /><path d="M10 10.3c.2-.4.5-.8.9-1a2.1 2.1 0 0 1 2.6.4c.3.4.5.8.5 1.3c0 1.3-2 2-2 2m0 4h.01" /></g></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=png], [data-path$=svg], [data-path$=jpeg], [data-path$=jpg], [data-path$=bmp], [data-path$=gif], [data-path$=webp], [data-path$=tiff])::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /><path d="M14 2v6h6" /><circle cx="10" cy="13" r="2" /><path d="m20 17l-1.09-1.09a2 2 0 0 0-2.82 0L10 22" /></g></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=base])::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><ellipse cx="12" cy="5" rx="9" ry="3"/><path d="M3 5V19A9 3 0 0 0 21 19V5"/><path d="M3 12A9 3 0 0 0 21 12"/></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=pdf])::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /><path d="M14 2v6h6m-4" /></g><path d="M16.714 14.869c-.6-.642-2.31-.466-3.165-.348-.844-.562-1.41-1.34-1.808-2.48.192-.862.497-2.174.266-3-.207-1.403-1.857-1.264-2.093-.316-.217.862-.02 2.062.344 3.594-.492 1.28-1.224 3-1.74 3.986-.983.552-2.31 1.403-2.506 2.474-.162.847 1.278 2.957 3.74-1.67 1.1-.397 2.3-.885 3.36-1.078.929.547 2.015.912 2.742.912 1.254 0 1.376-1.512.86-2.074zM6.98 19.037c.251-.734 1.204-1.58 1.494-1.875-.933 1.623-1.494 1.912-1.494 1.875zm4.01-10.21c.363 0 .33 1.72.087 2.185-.215-.744-.21-2.185-.088-2.185zM9.79 16.144c.477-.905.885-1.981 1.214-2.93.408.809.929 1.457 1.479 1.901-1.022.23-1.911.703-2.693 1.03zm6.467-.268q-.246.322-1.834-.417c1.726-.14 2.01.29 1.834.417z" fill="currentColor"/></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=mp3], [data-path$=flac], [data-path$=wav], [data-path$=ape], [data-path$=alac], [data-path$=aac])::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M17.5 22h.5c.5 0 1-.2 1.4-.6c.4-.4.6-.9.6-1.4V7.5L14.5 2H6c-.5 0-1 .2-1.4.6C4.2 3 4 3.5 4 4v3" /><path d="M14 2v6h6M10 20v-1a2 2 0 1 1 4 0v1a2 2 0 1 1-4 0Zm-4 0v-1a2 2 0 1 0-4 0v1a2 2 0 1 0 4 0Z"/><path d="M2 19v-3a6 6 0 0 1 12 0v3"/></g></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=mkv], [data-path$=mp4], [data-path$=flv], [data-path$=webm], [data-path$=avi])::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M4 8V4a2 2 0 0 1 2-2h8.5L20 7.5V20a2 2 0 0 1-2 2H4"/><path d="M14 2v6h6m-10 7.5l4 2.5v-6l-4 2.5"/><rect width="8" height="6" x="2" y="12" rx="1"/></g></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=ttf], [data-path$=otf], [data-path$=ttc], [data-path$=otc])::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z"/><path d="M14 2v6h6M9 13v-1h6v1m-4 5h2m-1-6v6"/></g></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=zip], [data-path$="7z"], [data-path$=tar])::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M4 22V4c0-.5.2-1 .6-1.4C5 2.2 5.5 2 6 2h8.5L20 7.5V20c0 .5-.2 1-.6 1.4c-.4.4-.9.6-1.4.6h-2"/><path d="M14 2v6h6"/><circle cx="10" cy="20" r="2"/><path d="M10 7V6m0 6v-1m0 7v-2"/></g></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=js], [data-path$=css], [data-path$=html], [data-path$=py], [data-path$=c], [data-path$=cpp], [data-path$=java], [data-path$=rs], [data-path$=ts], [data-path$=tsx], [data-path$=jsx], [data-path$=json], [data-path$=bash], [data-path$=sh])::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4"/><path d="M14 2v6h6M9 18l3-3l-3-3m-4 0l-3 3l3 3"/></g></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=canvas])::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-layout-dashboard svg-icon"><rect x="3" y="3" rx="1.8" width="7" height="9"></rect><rect x="14" y="3" rx="1.8" width="7" height="5"></rect><rect x="14" y="12" rx="1.8" width="7" height="9"></rect><rect x="3" y="16" rx="1.8" width="7" height="5"></rect></svg>');
}

/* #endregion icons */
/* #region notice, tooltips */
body.message-tooltip-hide .tooltip {
  display: none;
}

body.message-tooltip-hide-arrow .tooltip-arrow {
  display: none;
}

body.message-modify {
  --background-modifier-message: hsl(var(--setting-message-bg,
        calc(var(--accent-h) - 30) var(--accent-s) calc(var(--accent-l) - 20%)));
}
body.message-modify :is(.tooltip, .notice) {
  color: var(--setting-message-fg, var(--text-on-accent));
}
body.message-modify:not(.color-active-default).theme-light {
  --background-modifier-message: hsl(var(--setting-message-bg,
        calc(var(--accent-h) + 60) calc(var(--accent-s) - 12%) calc(var(--accent-l) + 4%)));
}
body.message-modify:not(.color-active-default).theme-dark {
  --background-modifier-message: hsl(var(--setting-message-bg,
        calc(var(--accent-h) + 60) calc(var(--accent-s) - 12%) calc(var(--accent-l) - 12%)));
}

body.message-tooltip-hide-arrow .tooltip-arrow {
  display: none;
}

/* #endregion message */
/* #region background image */
@media screen and (min-width: 768px) {
  body:is(.bg-static, .bg-live) {
    --bg-opacity: 0.75;
  }
  body:is(.bg-static, .bg-live) .workspace-split.mod-root,
  body:is(.bg-static, .bg-live) .workspace-split.mod-root .workspace-leaf-content {
    background-color: hsla(var(--editor-bg), calc(var(--bg-opacity) / 2));
  }
  body:is(.bg-static, .bg-live) :not(.mod-root) .workspace-leaf {
    background-color: hsla(var(--background-secondary-hsl), var(--bg-opacity));
  }
  body:is(.bg-static, .bg-live) .workspace::before {
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    -webkit-mask-repeat: no-repeat;
    background-color: var(--setting-bg-color, var(--text-accent));
    opacity: 0.5;
  }
  /* 参考 https://github.com/hydescarf/Obsidian-Theme-Mado-Miniflow */
  body {
    --setting-bg-static: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1200 120" preserveAspectRatio="none" xml:space="preserve"><path opacity="0.3" d="M0,0V46.29c47.79,22.2,103.59,32.17,158,28,70.36-5.37,136.33-33.31,206.8-37.5C438.64,32.43,512.34,53.67,583,72.05c69.27,18,138.3,24.88,209.4,13.08,36.15-6,69.85-17.84,104.45-29.34C989.49,25,1113-14.29,1200,52.47V0Z"/><path opacity="0.4" d="M0,0V15.81C13,36.92,27.64,56.86,47.69,72.05,99.41,111.27,165,111,224.58,91.58c31.15-10.15,60.09-26.07,89.67-39.8,40.92-19,84.73-46,130.83-49.67,36.26-2.85,70.9,9.42,98.6,31.56,31.77,25.39,62.32,62,103.63,73,40.44,10.79,81.35-6.69,119.13-24.28s75.16-39,116.92-43.05c59.73-5.85,113.28,22.88,168.9,38.84,30.2,8.66,59,6.17,87.09-7.5,22.43-10.89,48-26.93,60.65-49.24V0Z"/><path opacity="0.6" d="M0,0V5.63C149.93,59,314.09,71.32,475.83,42.57c43-7.64,84.23-20.12,127.61-26.46,59-8.63,112.48,12.24,165.56,35.4C827.93,77.22,886,95.24,951.2,90c86.53-7,172.46-45.71,248.8-84.81V0Z"/></svg>');
    --setting-bg-live: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 24 150 28' preserveAspectRatio='none' shape-rendering='auto' style='position:relative;width:100%25;height:15vh;min-height:100px;max-height:150px'%3E%3Cstyle%3E.parallax>use%7Banimation:move-forever 25s cubic-bezier(.55, .5, .45, .5) infinite%7D.parallax>use:nth-child(1)%7Banimation-delay:-33.6s;animation-duration:75.6s%7D.parallax>use:nth-child(2)%7Banimation-delay:2.4s;animation-duration:68.4s%7D.parallax>use:nth-child(3)%7Banimation-delay:-6s;animation-duration:24s%7D.parallax>use:nth-child(4)%7Banimation-delay:19.2s;animation-duration:73.2s%7D@keyframes move-forever%7B0%25%7Btransform:translate3d(-90px, 0, 0)%7D100%25%7Btransform:translate3d(85px, 0, 0)%7D%7D@media (max-width:768px)%7B.waves%7Bheight:40px;min-height:40px%7D%7D%3C/style%3E%3Cdefs%3E%3Cpath id='gentle-wave' d='M-160 44c30 0 58-18 88-18s58 18 88 18 58-18 88-18 58 18 88 18v44h-352z'/%3E%3C/defs%3E%3Cg class='parallax'%3E%3Cuse xlink:href='%23gentle-wave' x='48' opacity='0.3'/%3E%3Cuse xlink:href='%23gentle-wave' x='48' y='3' opacity='0.4'/%3E%3Cuse xlink:href='%23gentle-wave' x='48' y='8' opacity='0.6'/%3E%3Cuse xlink:href='%23gentle-wave' x='48' y='14' opacity='0.5'/%3E%3C/g%3E%3C/svg%3E");
  }
  body.bg-static .workspace::before {
    -webkit-mask-image: var(--setting-bg-static);
    -webkit-mask-size: 300% 300px;
    -webkit-mask-position: 88.5% -73px;
    transform: rotateZ(180deg);
  }
  /* 参考 https://www.cssscript.com/animated-waves-svg */
  body.bg-live .workspace::before {
    -webkit-mask-image: var(--setting-bg-live);
    -webkit-mask-size: 100% 160px;
    -webkit-mask-position-y: 100%;
  }
}
/* #endregion background */
/* #region labeled-navigator */
/* MIT License | Copyright (c) Stephan Ango (@kepano)

Labeled Nav snippet for Obsidian

author: @kepano
version: 2.0.0

Support my work:
https://github.com/sponsors/kepano

*/
.labeled-nav.mod-windows,
.labeled-nav.is-fullscreen:not(.colorful-frame) {
  --labeled-nav-top-margin: 0;
}

.labeled-nav {
  --labeled-nav-top-margin: var(--header-height);
  /* refactor this using a new variable for border above labeled nav
  in different conditions e.g. OSes and colorful frame */
}
.labeled-nav.is-translucent .mod-left-split .mod-top .workspace-tab-header-container .workspace-tab-header-container-inner {
  background-color: transparent;
}
.labeled-nav.is-hidden-frameless:not(.is-fullscreen) .mod-left-split .workspace-tabs.mod-top-left-space .workspace-tab-header-container {
  padding-left: 0;
}
.labeled-nav.mod-macos .mod-left-split .mod-top .workspace-tab-header-container:before, .labeled-nav.mod-macos.is-hidden-frameless:not(.is-fullscreen) .mod-left-split .mod-top .workspace-tab-header-container:before {
  -webkit-app-region: drag;
  position: absolute;
  width: calc(100% - var(--divider-width));
  height: calc(var(--header-height) - var(--tab-outline-width));
  border-bottom: 0 solid var(--tab-outline-color);
}
.labeled-nav.mod-macos.is-hidden-frameless:not(.is-fullscreen) .workspace-ribbon.mod-left:not(.is-collapsed) {
  border: none;
  --tab-outline-width: 0px;
}
.labeled-nav:not(.is-hidden-frameless) .mod-left-split .mod-top .workspace-tab-header-container:before, .labeled-nav.mod-macos:not(.hider-ribbon) .mod-left-split .mod-top .workspace-tab-header-container:before, .labeled-nav.colorful-frame.is-hidden-frameless:not(.is-fullscreen) .mod-left-split .mod-top .workspace-tab-header-container:before {
  border-bottom: var(--tab-outline-width) solid var(--tab-outline-color);
}
.labeled-nav:not(.is-hidden-frameless) .workspace-ribbon.mod-left:not(.is-collapsed), .labeled-nav.mod-macos:not(.hider-ribbon) .workspace-ribbon.mod-left:not(.is-collapsed), .labeled-nav.colorful-frame.is-hidden-frameless:not(.is-fullscreen) .workspace-ribbon.mod-left:not(.is-collapsed) {
  --tab-outline-width: 1px;
}
.labeled-nav:not(.is-hidden-frameless) .mod-left-split .mod-top .workspace-tab-header-container:before {
  position: absolute;
  top: 0;
  content: " ";
}
.labeled-nav.hider-ribbon.mod-macos.is-hidden-frameless:not(.is-fullscreen):not(.is-popout-window) .mod-left-split:not(.is-sidedock-collapsed) .workspace-tabs.mod-top-left-space .workspace-tab-header-container {
  padding-left: 0;
}
.labeled-nav:not(.is-grabbing):not(.is-fullscreen).is-hidden-frameless .mod-top .workspace-tab-header-container {
  -webkit-app-region: no-drag;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-spacer {
  display: none;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-inner-title {
  display: inline-block;
  font-weight: 500;
  font-size: var(--font-adaptive-smaller);
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-container {
  position: relative;
  flex-direction: column-reverse !important;
  height: auto;
  width: 100%;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-container .sidebar-toggle-button.mod-left {
  position: absolute;
  justify-content: flex-end;
  padding-right: var(--size-4-2);
  top: 0;
  right: 0;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-container .workspace-tab-header-container-inner {
  padding-top: var(--size-4-2);
  margin-top: var(--labeled-nav-top-margin);
  flex-direction: column !important;
  background-color: var(--background-secondary);
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-container .workspace-tab-container-inner {
  flex-grow: 1;
  gap: 0;
  padding: var(--size-4-2) var(--size-4-3);
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header {
  --icon-color: var(--text-muted);
  --tab-text-color: var(--text-muted);
  --tab-text-color-focused: var(--text-muted);
  padding: 0;
  margin-bottom: 2px;
  border: none;
  height: auto;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header.is-active:not(:hover) {
  background-color: transparent;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header.is-active, .labeled-nav .mod-left-split .mod-top .workspace-tab-header:hover {
  opacity: 1;
  --tab-text-color-active: var(--text-normal);
  --tab-text-color-focused: var(--text-normal);
  --tab-text-color-focused-active: var(--text-normal);
  --tab-text-color-focused-active-current: var(--text-normal);
  --icon-color: var(--text-normal);
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header .workspace-tab-header-inner {
  gap: var(--size-2-3);
  padding: var(--size-4-1) var(--size-4-2);
  box-shadow: none;
  border: none;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header.has-active-menu:hover,
.labeled-nav .mod-left-split .mod-top .workspace-tab-header.is-active:hover {
  background-color: transparent;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header.is-active:hover .workspace-tab-header-inner,
.labeled-nav .mod-left-split .mod-top .workspace-tab-header:not(.is-active):hover .workspace-tab-header-inner {
  background-color: var(--nav-item-background-hover);
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header:hover .workspace-tab-header-inner-icon,
.labeled-nav .mod-left-split .mod-top .workspace-tab-header.is-active .workspace-tab-header-inner-icon {
  color: var(--icon-color-active);
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-container {
  border: none;
  padding: 0;
}

.labeled-nav .workspace-tab-header-container-inner {
  --background-secondary: hsl(var(--background-secondary-hsl)) ;
}
.labeled-nav .nav-buttons-container {
  justify-self: flex-start;
}

/* #endregion labeled-navigator */
/* #region [[panel]] */
/* #region panel-base*/
.nav-buttons-container {
  justify-content: flex-start;
  padding-left: var(--size-4-1);
}

body {
  --nav-item-children-padding-left: var(--size-4-2);
}

/* #endregion panel-base */
/* #region tag */
.workspace-leaf-content[data-type=tag] .tree-item-self::before {
  background-color: var(--accent-active);
  line-height: var(--line-height-tight);
  width: var(--size-4-4);
  height: var(--size-4-4);
  margin-left: calc(-1 * var(--size-4-5));
  margin-right: var(--size-4-3);
  transform: translateY(var(--size-4-1));
}
.workspace-leaf-content[data-type=tag] .tree-item-self:has(.tree-item-icon)::before {
  background-color: var(--folder-color);
}
.workspace-leaf-content[data-type=tag] .tree-item-icon.collapse-icon {
  cursor: pointer;
}
.workspace-leaf-content[data-type=tag] .tree-item-icon.collapse-icon svg {
  color: transparent;
}

/* #endregion tag */
/* #region bookmark */
.workspace-leaf-content[data-type=bookmarks] {
  --nav-item-color-active: var(--text-on-accent);
}
.workspace-leaf-content[data-type=bookmarks] .tree-item-self.mod-collapsible .tree-item-icon {
  margin-right: var(--size-4-1);
}
.workspace-leaf-content[data-type=bookmarks] .tree-item-self:not(.mod-collapsible) {
  padding-left: var(--size-2-3);
}
.workspace-leaf-content[data-type=bookmarks] .tree-item-self:not(.mod-collapsible) .tree-item-icon {
  transform: translateY(var(--size-2-1));
  color: var(--accent-active);
  width: calc(1.3 * var(--size-4-4));
}
.workspace-leaf-content[data-type=bookmarks] .tree-item-self.is-active .tree-item-icon {
  color: var(--nav-item-color-active);
}

/* #endregion bookmark */
/* #region graph */
body {
  --graph-node: var(--setting-graph-node, var(--text-muted));
  --graph-node-unresolved: var(--setting-graph-node-unresolved, var(--text-faint));
  --graph-node-focused: var(--setting-graph-node-focus, var(--accent-active));
}

.graph-controls {
  top: var(--size-4-1);
  right: var(--size-4-1);
}

/* #endregion graph */
/* #region outline */
body {
  /* 引导线粗细 */
  --outline-guideline-width: var(--size-2-1);
  /* 引导线颜色 */
  --outline-guideline-color: var(--accent-inactive);
  /* 引导线颜色 */
  --outline-guideline-color-alt: var(--accent-active);
  /* 一行高度 */
  --outline-item-height: calc(var(--nav-item-size) * 1.8);
}

.workspace-leaf-content[data-type=outline] .tree-item-inner {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  height: var(--outline-item-height);
  line-height: var(--outline-item-height);
}

.workspace-leaf-content[data-type=outline] .tree-item-self.is-active > .tree-item-inner {
  color: var(--text-on-accent);
}

body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item {
  position: relative;
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self {
  position: relative;
  margin-bottom: 0;
  white-space: nowrap;
  margin-top: -1px;
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self .tree-item-inner {
  padding-left: var(--size-4-1);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self .tree-item-inner::before {
  content: "";
  width: calc(var(--size-4-1) * 1.2);
  height: calc(var(--size-4-1) * 1.2);
  border: var(--size-2-1) solid var(--outline-guideline-color-alt);
  border-radius: 50%;
  position: absolute;
  top: 50%;
  transform: translate(calc(-1 * var(--size-4-5)), -50%);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self.is-active .tree-item-inner::before {
  border-color: var(--outline-guideline-color);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self .tree-item-icon ~ .tree-item-inner {
  padding-left: var(--size-4-1);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self .tree-item-icon ~ .tree-item-inner::before {
  content: none;
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item.is-collapsed .tree-item-icon::before {
  box-shadow: 0 0 0 var(--size-4-1) var(--background-modifier-hover);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item::after {
  content: "";
  width: var(--outline-guideline-width);
  position: absolute;
  background-color: transparent;
  top: calc(var(--outline-item-height) / 2 * -1);
  left: -14px;
  height: calc(100% - var(--outline-item-height) + var(--size-4-8));
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-icon {
  cursor: pointer;
  transform: translateY(8px);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-icon::before {
  width: var(--size-4-2);
  height: var(--size-4-2);
  background-color: var(--outline-guideline-color-alt);
  border-radius: 50%;
  position: absolute;
  left: 3px;
  top: 50%;
  transform: translateY(-50%);
  z-index: 10;
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-icon svg path {
  display: none;
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self.is-active .tree-item-icon::before {
  background-color: var(--outline-guideline-color);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item:hover > .tree-item-children > .tree-item::after {
  background-color: var(--outline-guideline-color);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item:hover > .tree-item-self:hover + .tree-item-children .tree-item::after {
  background-color: transparent;
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item:hover > .tree-item-children > .tree-item:hover::after, body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item:hover > .tree-item-children > .tree-item:hover ~ .tree-item::after {
  background-color: transparent;
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item:hover > .tree-item-children > .tree-item:hover::before {
  content: "";
  position: absolute;
  top: calc(var(--outline-item-height) / 2 * -1);
  left: -14px;
  bottom: calc(100% - (var(--outline-item-height) + var(--size-4-2)) / 2 - 1px);
  width: var(--size-4-6);
  border-bottom-left-radius: var(--radius-m);
  border-bottom: var(--outline-guideline-width) solid var(--outline-guideline-color);
  border-left: var(--outline-guideline-width) solid var(--outline-guideline-color);
  z-index: 9;
}
body.outline-enable .workspace-leaf-content[data-type=outline] :is(.tree-item-children, .tree-item-self) {
  padding-left: 28px !important;
  margin-left: 0 !important;
  border-left: none;
}

/* #endregion outline */
/* #region file-explorer */
body {
  --file-folding-offset: 28px;
  --folder-color-rgb: 245, 180, 0;
  --folder-color: rgb(var(--setting-color-dirs, var(--folder-color-rgb)));
  --folder-hover-color: rgba(var(--setting-color-dirs, var(--folder-color-rgb)), 0.24);
  --nav-item-size: calc(var(--size-4-4) * 0.9);
  --line-height-tight: 1.6;
  --nav-indentation-guide-color: hsla(var(--accent-h), 20%, 50%, 0.2);
  --nav-indentation-guide-width: 1.8px;
}

.theme-light {
  --folder-inactive: 85%;
}

.theme-dark {
  --folder-inactive: 70%;
}

.nav-file-title.is-active:not(.is-selected) {
  color: var(--text-on-accent);
}

body:not(.is-grabbing) :is(.nav-file-title.is-being-dragged, .nav-folder-title.is-being-dragged),
.nav-file-title.is-being-dragged,
.nav-folder-title.is-being-dragged {
  background-color: var(--accent-inactive);
  color: var(--text-normal);
}

.workspace-leaf-content[data-type=file-explorer] {
  --line-height-tight: var(--explorer-item-height, 1.6);
}

body.theme-dark.explorer-icon .is-active .nav-file-tag {
  --nav-item-background-active: var(--text-on-accent);
}

body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-folder-title {
  cursor: pointer;
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-folder-title:hover {
  background-color: var(--folder-hover-color);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-folder-title-content {
  padding-left: var(--size-2-1);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-folder .nav-folder-children {
  transition: var(--animation);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-folder .nav-folder-children:hover {
  border-color: var(--accent-inactive);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-folder .collapse-icon svg.svg-icon {
  line-height: var(--line-height-tight);
  width: var(--size-4-4);
  height: var(--size-4-4);
  background-color: var(--folder-color);
  display: inline-block;
  translate: 0 calc(-1 * var(--size-2-1));
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-folder.is-collapsed .collapse-icon svg.svg-icon {
  transform: none;
  filter: brightness(var(--folder-inactive));
  transition: var(--animation);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-file-title-content {
  padding-left: var(--size-2-1);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-file-title:not([data-path$="excalidraw.md"]):not([data-path$=excalidraw])::before {
  content: "";
  position: absolute;
  width: var(--size-4-4);
  height: var(--size-4-4);
  opacity: 0.8;
  flex-shrink: 0;
  translate: calc(2px - var(--size-4-5)) 25%;
  background-color: var(--accent-active);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-file-title:is([data-path$="excalidraw.md"], [data-path$=excalidraw]) .nav-file-tag {
  position: absolute;
  translate: calc(-1 * var(--size-4-5));
  top: var(--size-2-3);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-file-title.is-active:not(.is-selected) {
  color: var(--text-on-accent);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-file-title.is-active:not(.is-selected):first-child::before {
  background-color: var(--text-on-accent);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-file-title.is-active:not(.is-selected) .nav-file-title-content {
  color: var(--text-on-accent);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-file-tag {
  font-size: var(--size-4-2);
  margin-left: 0;
  margin-right: var(--size-4-2);
  line-height: 2;
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-file-title .nav-file-tag {
  background-color: var(--accent-active);
  color: var(--text-on-accent);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-file-title.is-active .nav-file-tag {
  background-color: hsl(var(--background-secondary-hsl), 0.9);
  color: var(--nav-item-background-active);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-file-title-content + .nav-file-tag {
  margin-left: var(--size-2-3);
}

/* 参考 https://github.com/Akifyss/obsidian-border */
:is(body.explorer-nav-decoration .nav-file-title, body.setting-nav-decoration .vertical-tab-nav-item) {
  position: relative;
}
:is(body.explorer-nav-decoration .nav-file-title, body.setting-nav-decoration .vertical-tab-nav-item).is-active::after {
  height: calc(100% - var(--size-4-2));
  transform: translateY(-50%);
}
:is(body.explorer-nav-decoration .nav-file-title, body.setting-nav-decoration .vertical-tab-nav-item)::after {
  content: "";
  position: absolute;
  right: 4px;
  top: 50%;
  width: var(--size-4-1);
  height: 0%;
  border-radius: var(--radius-s);
  background: var(--accent-inactive);
}

body.explorer-title-wrap :is(.nav-file-title-content, .nav-folder-title-content) {
  overflow: visible;
  white-space: pre-wrap;
}

/* #endregion file-explorer */
/* #endregion [[panel]] */
/* #endregion [workspace] */
/* #region [mobile] */
.is-mobile {
  --input-border-width: 1px;
  --input-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.12),
    0 2px 3px 0 rgba(0, 0, 0, .05),
    0 1px 1.5px 0 rgba(0, 0, 0, .03),
    0 1px 2px 0 rgba(0, 0, 0, .04),
    0 0 0 0 transparent;
}
.is-mobile:is(.bg-static, .bg-live) {
  --background-modifier-form-field: hsl(var(--background-primary-hsl));
  --interactive-normal: hsl(var(--background-primary-hsl));
}
.is-mobile button:not(.clickable-icon) {
  background-color: var(--interactive-normal) !important;
  box-shadow: var(--input-shadow);
}
.is-mobile .document-search .document-search-button {
  padding: var(--size-4-2);
}

/* #endregion [mobile] */
