@use '../utils' as *;

body {
  --modal-width: min(90vw, var(--modal-max-width));
  --modal-height: min(85vh, var(--modal-max-height));
}

:is(.horizontal-tab-nav-item, .vertical-tab-nav-item).is-active {
  background-color: var(--nav-item-background-active) !important;
}

.modal-close-button {
  height: var(--input-height);
  width: var(--input-height);
  transition: var(--animation);
  padding: 3px;

  &::before {
    content: ' ' !important;
    display: block;
    height: var(--size-4-6);
    width: var(--size-4-6);
    background-color: currentColor;
    -webkit-mask-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3e%3cpath stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M17.25 17.25 6.75 6.75m10.5 0-10.5 10.5'/%3e%3c/svg%3e");
  }

  &:hover {
    background-color: var(--frame-outline-color);
  }
}

body.titlebar-colorful .modal-container .mod-settings::before {
  --setting-color-logo: var(--text-on-accent);
}

input {
  transition-duration: var(--setting-animation-time, 200ms) !important;
}

body.modal-slider input[type='range']::-webkit-slider-thumb {
  height: 1.6em;
  width: var(--size-4-1);
  background-color: var(--text-muted);
  position: relative;
  top: 50%;
  transform: translateY(-50%);
  border-radius: var(--radius-m);

  &:hover {
    box-shadow: none;
  }
}

body:is(.modal-toggle-round, .modal-toggle-thin) .checkbox-container {
  --toggle-radius: var(--radius-m);
  height: var(--size-4-4);
  transition: var(--animation-slow);
  border: var(--size-2-1) solid var(--text-faint);
  background-color: var(--color-base-20);
  cursor: pointer;

  input[type='checkbox'] {
    display: none;
  }
}

body.modal-toggle-round .checkbox-container {
  --toggle-shadow: var(--color-base-40);

  &::after {
    left: 0;
    height: calc(var(--toggle-width) / 3);
    width: calc(var(--toggle-width) / 3);
    bottom: 30%;
    border-radius: calc(var(--toggle-width) / 2);
    border: var(--toggle-border-width) solid var(--text-faint);
    background-color: var(--text-on-accent);
    margin: 0;
    transition: var(--animation-slow);
    box-shadow: 0 4px 2px 0 var(--toggle-shadow);
  }

  :is(&:hover, &:focus)::after {
    bottom: 10%;
    box-shadow: 0 2px 2px 0 var(--toggle-shadow);
  }

  &.is-enabled {
    border-color: var(--accent-active);
    background-color: var(--accent-inactive);

    &::after {
      border-color: var(--accent-active);
      transform: none;
      left: calc(
        100% - var(--toggle-width) / 3 - 3 * var(--toggle-border-width)
      );
    }
  }
}

/* 参考 https://uiverse.io/martinval9/white-lionfish-18 */
body.modal-toggle-thin .checkbox-container {
  &::before {
    height: var(--toggle-border-width);
    left: calc(var(--toggle-border-width) * 2);
    right: calc(var(--toggle-border-width) * 2);
    opacity: 1;
    top: 50%;
    bottom: initial;
    transform: translateY(-50%);
    background-color: var(--text-faint);
  }

  &::after {
    left: var(--toggle-border-width);
    height: var(--size-4-3);
    bottom: 50%;
    border-radius: var(--radius-m) var(--radius-m) 0 0;
    border: var(--toggle-border-width) solid var(--text-faint);
    border-bottom-width: calc(var(--toggle-border-width) / 2);
    background-color: var(--text-on-accent);
    width: 20%;
    margin: 0;
    transition: var(--animation-slow);
  }

  &:hover::after {
    height: var(--size-4-2);
  }

  &:active::after {
    width: calc(100% - var(--toggle-border-width) * 6);
  }

  &.is-enabled {
    border-color: var(--accent-active);
    background-color: var(--accent-inactive);

    &::before {
      background-color: var(--accent-active);
    }

    &::after {
      border-color: var(--accent-active);
      transform: none;
      left: calc(80% - var(--toggle-border-width) * 4);
    }

    &:active::after {
      left: calc(2 * var(--toggle-border-width));
    }
  }
}

@include use-no-plugin('.modal-header', ':not(.is-mobile)') {
  .modal-container {
    --modal-header-height: var(--size-4-12);
    --top-search-right: var(--size-4-12);

    .mod-settings {
      container-type: inline-size;

      &::before {
        content: var(--setting-header-title, 'maple 0.8.34');
        position: absolute;
        left: 50%;
        top: var(--size-4-6);
        transform: translate(-50%, -50%);
        font-size: calc(1.4 * var(--size-4-4));
        font-weight: bold;
        color: var(--setting-color-logo, var(--text-accent));
        transition: var(--animation);
      }

      @container (max-width:750px) {
        &::before {
          opacity: 0;
        }
      }
    }

    .mod-settings .modal-content {
      background-color: var(--frame-background-color);

      .vertical-tab-header {
        background-color: hsl(var(--background-secondary-hsl));
        border-top: 1px solid var(--divider-color);
        margin-top: var(--modal-header-height);
        padding-top: 0;
      }

      .vertical-tab-content-container {
        padding-top: var(--modal-header-height);

        .vertical-tab-content {
          background-color: hsl(var(--background-primary-hsl));
          border-top: 1px solid var(--divider-color);
          padding-top: var(--size-4-6);
          padding-right: var(--size-4-8);

          h2 {
            font-size: var(--h2-size);
            font-weight: var(--h2-weight);
          }
        }
      }

      .settings-search-container {
        padding: 0;

        .settings-search-input {
          position: absolute;
          top: calc(var(--size-2-1) * -1);
          left: var(--size-4-2);
          transform: translateY(
            calc(
              (var(--modal-header-height) - var(--input-height)) / 2 -
                var(--size-2-1)
            )
          );
          width: calc(
            clamp(180px, var(--modal-width) / 4, 250px) - var(--size-4-3) * 1
          );
        }
      }

      .setting-item-heading {
        margin-top: 0;
      }

      .setting-item:has(.search-input-container.mod-hotkey) {
        padding-bottom: 0;

        .setting-item-info {
          display: none;
        }

        .setting-item-control {
          top: calc(var(--size-2-1) * -1);
          transform: translateY(
            calc(
              (var(--modal-header-height) - var(--input-height)) / 2 +
                var(--size-2-1)
            )
          );
          right: var(--top-search-right);
          position: absolute;
        }

        & + .setting-filter-container {
          display: none;
        }
      }

      .plugin-list-plugins > .setting-item {
        padding: 0;

        .setting-item-info {
          display: none;
        }

        .setting-item-control {
          display: block;
          position: absolute;
          top: calc(var(--size-2-1) * -1);
          transform: translateY(
            calc(
              (var(--modal-header-height) - var(--input-height)) / 2 +
                var(--size-2-1)
            )
          );
          right: var(--top-search-right);
        }
      }

      .setting-item-name:has(.search-input-container) {
        position: absolute;
        top: calc(var(--size-2-1) * -1);
        transform: translateY(
          calc(
            (var(--modal-header-height) - var(--input-height)) / 2 +
              var(--size-2-1)
          )
        );
        right: var(--top-search-right);
      }

      .vertical-tab-content
        > :nth-child(5):not(.style-settings-container):has(
          input[type='search']
        ) {
        position: absolute;
        top: calc(var(--size-2-1) * -1);
        transform: translateY(
          calc(
            var(--modal-header-height) / 2 - var(--input-height) +
              var(--size-4-1)
          )
        );
        right: var(--top-search-right);

        .setting-item-info {
          display: none;
        }
      }
    }
  }
}

select,
.dropdown,
button {
  transition: var(--animation);
}

.theme-light {
  --select-bg-img: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="%23222" d="M12 14.975q-.2 0-.387-.075q-.188-.075-.313-.2l-4.6-4.6q-.275-.275-.275-.7q0-.425.275-.7q.275-.275.7-.275q.425 0 .7.275l3.9 3.9l3.9-3.9q.275-.275.7-.275q.425 0 .7.275q.275.275.275.7q0 .425-.275.7l-4.6 4.6q-.15.15-.325.212q-.175.063-.375.063Z"/></svg>');
}

.theme-dark {
  /* current color seems to be invalid for SVG in background-image */
  --select-bg-img: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="%23eee" d="M12 14.975q-.2 0-.387-.075q-.188-.075-.313-.2l-4.6-4.6q-.275-.275-.275-.7q0-.425.275-.7q.275-.275.7-.275q.425 0 .7.275l3.9 3.9l3.9-3.9q.275-.275.7-.275q.425 0 .7.275q.275.275.275.7q0 .425-.275.7l-4.6 4.6q-.15.15-.325.212q-.175.063-.375.063Z"/></svg>');
}

:is(select, .dropdown) {
  background-size: calc(1.2 * var(--size-4-4));
  background-position: right calc(0.4 * var(--size-4-4)) top 56%, 0 0;
  background-image: var(--select-bg-img) !important;
}

.modal-container {
  .is-loading {
    position: initial;
  }

  .modal-close-button {
    top: 9px;
    right: 9px !important;
  }

  :is(.mod-community-plugin, .mod-community-theme)
    .modal-sidebar
    .setting-item:first-child {
    max-width: var(--modal-community-sidebar-width);
  }

  .mod-settings .modal-content {
    .setting-hotkey {
      box-shadow: var(--shadow-s);
      border: 2px solid var(--accent-inactive);
      border-radius: var(--size-2-3);
      font-size: var(--font-ui-smaller);
      padding: 1px var(--size-4-2);
      transition: var(--animation);

      .setting-hotkey-icon {
        margin-right: calc(-1 * var(--size-4-1));
      }

      &:hover {
        border-color: var(--accent-active);
      }

      &.mod-active {
        color: var(--text-faint);
        background-color: var(--frame-background-color);
      }

      &:not(.has-conflict):not(.mod-active) {
        background-color: var(--code-background);
      }
    }

    .setting-item-heading .setting-item-name {
      font-weight: bold;
      font-size: var(--font-ui-medium);
    }
  }
}

body.setting-group-title.theme-dark
  .modal-container
  .mod-settings
  .modal-content
  .vertical-tab-header-group-title {
  filter: brightness(1.4);
}

body.setting-group-title
  .modal-container
  .mod-settings
  .modal-content
  .vertical-tab-header-group {
  padding-bottom: 0;

  &-title {
    color: var(--accent-active);
    font-size: var(--size-4-4);
    position: relative;

    &::before {
      content: '';
      position: absolute;
      height: calc(100% - var(--size-4-4));
      width: var(--size-4-1);
      top: var(--size-4-2);
      left: calc(var(--size-4-1) * -1);
      background-color: var(--accent-active);
      border-radius: var(--size-2-1);
    }
  }
}

//==============================
:is(
    .menu,
    .prompt,
    :not(.excalidraw) .popover,
    .modal,
    .modal-bg,
    .document-search-container,
    .suggestion-container
  ) {
  animation: op var(--animation);
}

body.modal-animation :is(.prompt, .popover, .modal) {
  animation: op var(--animation), bounce var(--animation);
}

@keyframes op {
  0% {
    opacity: 0;
  }

  30% {
    opacity: 0.7;
  }

  70% {
    opacity: 0.95;
  }

  100% {
    opacity: 1;
  }
}

@keyframes bounce {
  0% {
    transform: scale(0.99);
  }

  70% {
    transform: scale(1.01);
  }

  100% {
    transform: scale(1);
  }
}

:is(
    .menu-normal .menu,
    .menu-suggestion .suggestion-container,
    .menu-graph .graph-control-section
  ) {
  background-color: hsla(var(--background-secondary-hsl), 0.5) !important;
  backdrop-filter: blur(var(--size-4-8));
  will-change: backdrop-filter;
}

body.modal-blur .modal-bg {
  opacity: 1 !important;
  background-color: hsla(var(--background-secondary-hsl), 0.5) !important;
  backdrop-filter: blur(var(--size-4-1));
  will-change: backdrop-filter;
}

.mod-search-suggestion .suggestion {
  background-color: transparent;
}
