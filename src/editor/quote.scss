@use 'sass:math';
@use 'sass:list';
$level-max: 8;
$indent: 0.6rem;
$mark-size: 3rem;

:is(body, .print .markdown-rendered) {
  --blockquote-background-color: var(--md-container-bg);
  --callout-radius: var(--radius-l);
}

body.quote-theme {
  --blockquote-border-color: var(--accent-active);

  :is(.markdown-source-view, .markdown-rendered) {
    --blockquote-border-thickness: var(--size-4-1);
    --blockquote-radius: var(--size-2-3);
  }

  .markdown-source-view.mod-cm6 {
    :is(.HyperMD-quote, .cm-blockquote-border)::before {
      width: var(--blockquote-border-thickness);
      border-left: none;
      background-color: var(--blockquote-border-color);
      border-radius: var(--blockquote-radius);
      inset-block: var(--blockquote-radius);
    }

    :is(.HyperMD-quote, .cm-blockquote-border) :not(:first-child)::before {
      transform: translateX(var(--size-2-1));
    }

    .HyperMD-quote {
      border-radius: 0 !important;

      &.cm-active {
        &:not(:has(+ .HyperMD-quote:not(.HyperMD-callout))) {
          border-bottom-left-radius: var(--blockquote-radius) !important;
          border-bottom-right-radius: var(--blockquote-radius) !important;
        }

        .cm-blockquote-border::before {
          background-color: transparent;
        }
      }

      &::before {
        left: calc(var(--blockquote-border-thickness) / 2);
        z-index: 10;
      }

      & + .HyperMD-quote::before {
        top: calc(var(--blockquote-radius) * -2);
      }
    }

    :is(
        div:not(.HyperMD-quote) + .HyperMD-quote,
        .cm-content :first-child:is(.HyperMD-quote)
      ) {
      border-top-left-radius: var(--blockquote-radius) !important;
      border-top-right-radius: var(--blockquote-radius) !important;

      &::after,
      .cm-quote.cm-formatting::after {
        content: none !important;
      }
    }
  }

  .markdown-rendered blockquote {
    --h1-size: var(--font-text-size);
    --h2-size: var(--font-text-size);
    --h3-size: var(--font-text-size);
    --h4-size: var(--font-text-size);
    --h5-size: var(--font-text-size);
    --h6-size: var(--font-text-size);
    --h1-line-height: var(--setting-line-height, var(--line-height-normal));
    --h2-line-height: var(--setting-line-height, var(--line-height-normal));
    --h3-line-height: var(--setting-line-height, var(--line-height-normal));
    --h4-line-height: var(--setting-line-height, var(--line-height-normal));
    --h5-line-height: var(--setting-line-height, var(--line-height-normal));
    --h6-line-height: var(--setting-line-height, var(--line-height-normal));
    border: none;
    border-radius: var(--blockquote-radius);
    position: relative;
    margin-block: var(--size-4-3);

    :is(p, h1, h2, h3, h4, h5, h6) {
      padding-left: var(--blockquote-border-thickness);
      padding-right: var(--size-4-3);
    }

    &::after {
      content: '';
      position: absolute;
      left: calc(var(--blockquote-radius) * 4 / 5);
      top: var(--blockquote-radius);
      border-radius: var(--blockquote-radius);
      height: calc(100% - var(--blockquote-radius) * 2);
      width: var(--blockquote-border-thickness);
      background-color: var(--accent-active);
    }

    blockquote {
      box-shadow: none;
      margin-inline-end: var(--size-4-3) !important;
    }
  }

  &.quote-shadow .markdown-rendered blockquote {
    box-shadow: var(--shadow-s);
  }

  &.quote-border .markdown-rendered blockquote {
    border: var(--block-outline-width) solid var(--accent-inactive);
    transition: var(--animation);
    box-shadow: none;

    &:hover {
      border-color: var(--accent-active);
    }

    blockquote {
      margin: var(--block-outline-width);
    }
  }

  &.quote-mark {
    &.quote-theme blockquote {
      padding-left: $indent * 3.8;

      &::before {
        position: absolute;
        font-size: $mark-size;
        font-family: Source Code Pro;
        line-height: 1;
        content: '“' !important;
        background-color: transparent;
        color: var(--text-muted);
        top: calc(
          var(--font-text-size) * var(--line-height-normal) -
            math.div($mark-size, 1.4)
        );
        transform: translateX($indent * -2.2);
      }
    }
  }

  :is(.markdown-preview-view, .community-modal-readme.markdown-rendered)
    blockquote {
    padding-left: var(--size-4-6);

    :is(p, h1, h2, h3, h4, h5, h6) {
      padding-left: calc(var(--blockquote-border-thickness) * 2);
    }
  }
  $items: ();

  @for $i from 2 through $level-max {
    @for $j from 2 through $level-max {
      $items: list.append(
        $list: $items,
        $val:
          '.HyperMD-quote-#{$j}:not(.cm-active)+.HyperMD-quote-#{$i} .cm-blockquote-border:nth-of-type(-n + #{$j})',
        $separator: comma,
      );
    }
  }

  /* 引导线高度修复 */
  :is(#{$items})::before {
    top: calc(var(--blockquote-radius) * -2);
  }
}
